{"allSourcePaths": {"0": "contracts/testing/CurveRewards.sol"}, "bytecode": "", "bytecodeSha1": "3c4c33f2c641ea8ee9ed295d1e54651e398303e9", "coverageMap": {"statements": {"0": {"CurveRewards.earned": {"0": [23749, 23928]}, "IRewardDistributionRecipient.setRewardDistribution": {"1": [21096, 21136]}, "LPTokenWrapper.totalSupply": {"2": [21459, 21478]}, "CurveRewards.withdraw": {"3": [24292, 24332], "4": [24342, 24364], "5": [24374, 24408]}, "CurveRewards.notifyRewardAmount": {"6": [24994, 25027], "7": [25183, 25230], "8": [25250, 25282], "9": [25292, 25336], "10": [25346, 25370]}, "CurveRewards.getReward": {"11": [24659, 24682], "12": [24696, 24732], "13": [24746, 24781]}, "LPTokenWrapper.balanceOf": {"14": [21567, 21592]}, "Ownable.renounceOwnership": {"15": [10434, 10479], "16": [10489, 10508]}, "CurveRewards.lastTimeRewardApplicable": {"17": [23203, 23249]}, "Ownable.owner": {"18": [9650, 9663]}, "Ownable.isOwner": {"19": [10000, 10029]}, "CurveRewards.stake": {"20": [24096, 24133], "21": [24143, 24162], "22": [24172, 24203]}, "CurveRewards.rewardPerToken": {"23": [23366, 23393], "24": [23413, 23663]}, "CurveRewards.exit": {"25": [24456, 24487], "26": [24497, 24508]}, "Ownable.transferOwnership": {"27": [10736, 10764]}, "SafeMath.sub": {"28": [3641, 3691], "45": [4127, 4156]}, "SafeMath.mul": {"29": [4770, 4778], "30": [4826, 4882]}, "SafeMath.div": {"31": [5440, 5486], "46": [6179, 6207]}, "SafeMath.add": {"32": [3228, 3274]}, "LPTokenWrapper.withdraw": {"33": [21888, 21927], "34": [21937, 21994], "35": [22004, 22040]}, "Context._msgSender": {"36": [8476, 8493]}, "SafeERC20.safeTransfer": {"37": [17614, 17699]}, "Math.min": {"38": [1927, 1947]}, "LPTokenWrapper.stake": {"39": [21653, 21692], "40": [21702, 21759], "41": [21769, 21824]}, "Ownable._transferOwnership": {"42": [10937, 11010], "43": [11020, 11063], "44": [11073, 11090]}, "SafeERC20.callOptionalReturn": {"47": [20123, 20194], "48": [20341, 20393], "49": [20529, 20614]}, "SafeERC20.safeTransferFrom": {"50": [17812, 17907]}, "Address2.isContract": {"51": [15203, 15254]}}}, "branches": {"0": {"CurveRewards.withdraw": {"52": [24300, 24310, true]}, "CurveRewards.notifyRewardAmount": {"53": [20891, 20925, true], "54": [24947, 24978, false]}, "CurveRewards.getReward": {"55": [24633, 24643, false]}, "CurveRewards.stake": {"56": [22828, 22849, false], "57": [24104, 24114, true]}, "Ownable.transferOwnership": {"58": [9797, 9806, true]}, "SafeMath.mul": {"59": [4748, 4754, false], "60": [4834, 4844, true]}, "SafeMath.add": {"61": [3236, 3242, true]}, "Math.min": {"62": [1934, 1939, true]}, "Ownable._transferOwnership": {"63": [10945, 10967, true]}, "SafeMath.sub": {"64": [4135, 4141, true]}, "SafeMath.div": {"65": [6187, 6192, true]}, "SafeERC20.callOptionalReturn": {"66": [20131, 20158, true], "67": [20349, 20356, true], "68": [20408, 20429, false], "69": [20537, 20567, true]}}}}, "dependencies": ["Address2", "Context", "IERC20", "IRewardDistributionRecipient", "LPTokenWrapper", "Math", "Ownable", "SafeERC20", "SafeMath"], "offset": [22051, 25379], "pcMap": {"0": {"op": "PUSH1", "value": "0x80", "path": "0", "offset": [22051, 25379]}, "2": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [22051, 25379], "fn": null}, "4": {"op": "MSTORE", "path": "0", "offset": [22051, 25379], "fn": null}, "5": {"op": "CALLVALUE", "path": "0", "offset": [22051, 25379], "fn": null}, "6": {"op": "DUP1"}, "7": {"op": "ISZERO"}, "8": {"op": "PUSH2", "value": "0x10"}, "11": {"op": "JUMPI"}, "12": {"op": "PUSH1", "value": "0x0"}, "14": {"op": "DUP1"}, "15": {"op": "REVERT", "dev": "Cannot send ether to nonpayable function", "fn": null, "offset": [22051, 25379], "path": "0"}, "16": {"op": "JUMPDEST"}, "17": {"op": "POP", "path": "0", "offset": [22051, 25379]}, "18": {"op": "PUSH1", "value": "0x4", "path": "0", "offset": [22051, 25379], "fn": null}, "20": {"op": "CALLDATASIZE", "path": "0", "offset": [22051, 25379], "fn": null}, "21": {"op": "LT", "path": "0", "offset": [22051, 25379], "fn": null}, "22": {"op": "PUSH2", "value": "0x157", "path": "0", "offset": [22051, 25379], "fn": null}, "25": {"op": "JUMPI", "path": "0", "offset": [22051, 25379], "fn": null}, "26": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [22051, 25379], "fn": null}, "28": {"op": "CALLDATALOAD", "path": "0", "offset": [22051, 25379], "fn": null}, "29": {"op": "PUSH1", "value": "0xE0", "path": "0", "offset": [22051, 25379], "fn": null}, "31": {"op": "SHR", "path": "0", "offset": [22051, 25379], "fn": null}, "32": {"op": "DUP1", "path": "0", "offset": [22051, 25379], "fn": null}, "33": {"op": "PUSH4", "value": "0x8B876347", "path": "0", "offset": [22051, 25379], "fn": null}, "38": {"op": "GT", "path": "0", "offset": [22051, 25379], "fn": null}, "39": {"op": "PUSH2", "value": "0xC3", "path": "0", "offset": [22051, 25379], "fn": null}, "42": {"op": "JUMPI", "path": "0", "offset": [22051, 25379], "fn": null}, "43": {"op": "DUP1", "path": "0", "offset": [22051, 25379], "fn": null}, "44": {"op": "PUSH4", "value": "0xDF136D65", "path": "0", "offset": [22051, 25379], "fn": null}, "49": {"op": "GT", "path": "0", "offset": [22051, 25379], "fn": null}, "50": {"op": "PUSH2", "value": "0x7C", "path": "0", "offset": [22051, 25379], "fn": null}, "53": {"op": "JUMPI", "path": "0", "offset": [22051, 25379], "fn": null}, "54": {"op": "DUP1", "path": "0", "offset": [22051, 25379], "fn": null}, "55": {"op": "PUSH4", "value": "0xDF136D65", "path": "0", "offset": [22051, 25379], "fn": null}, "60": {"op": "EQ", "path": "0", "offset": [22051, 25379], "fn": null}, "61": {"op": "PUSH2", "value": "0x305", "path": "0", "offset": [22051, 25379], "fn": null}, "64": {"op": "JUMPI", "path": "0", "offset": [22051, 25379], "fn": null}, "65": {"op": "DUP1", "path": "0", "offset": [22051, 25379], "fn": null}, "66": {"op": "PUSH4", "value": "0xE7D27998", "path": "0", "offset": [22051, 25379], "fn": null}, "71": {"op": "EQ", "path": "0", "offset": [22051, 25379], "fn": null}, "72": {"op": "PUSH2", "value": "0x30D", "path": "0", "offset": [22051, 25379], "fn": null}, "75": {"op": "JUMPI", "path": "0", "offset": [22051, 25379], "fn": null}, "76": {"op": "DUP1", "path": "0", "offset": [22051, 25379], "fn": null}, "77": {"op": "PUSH4", "value": "0xE9FAD8EE", "path": "0", "offset": [22051, 25379], "fn": null}, "82": {"op": "EQ", "path": "0", "offset": [22051, 25379], "fn": null}, "83": {"op": "PUSH2", "value": "0x315", "path": "0", "offset": [22051, 25379], "fn": null}, "86": {"op": "JUMPI", "path": "0", "offset": [22051, 25379], "fn": null}, "87": {"op": "DUP1", "path": "0", "offset": [22051, 25379], "fn": null}, "88": {"op": "PUSH4", "value": "0xEBE2B12B", "path": "0", "offset": [22051, 25379], "fn": null}, "93": {"op": "EQ", "path": "0", "offset": [22051, 25379], "fn": null}, "94": {"op": "PUSH2", "value": "0x31D", "path": "0", "offset": [22051, 25379], "fn": null}, "97": {"op": "JUMPI", "path": "0", "offset": [22051, 25379], "fn": null}, "98": {"op": "DUP1", "path": "0", "offset": [22051, 25379], "fn": null}, "99": {"op": "PUSH4", "value": "0xEDC9AF95", "path": "0", "offset": [22051, 25379], "fn": null}, "104": {"op": "EQ", "path": "0", "offset": [22051, 25379], "fn": null}, "105": {"op": "PUSH2", "value": "0x325", "path": "0", "offset": [22051, 25379], "fn": null}, "108": {"op": "JUMPI", "path": "0", "offset": [22051, 25379], "fn": null}, "109": {"op": "DUP1", "path": "0", "offset": [22051, 25379], "fn": null}, "110": {"op": "PUSH4", "value": "0xF2FDE38B", "path": "0", "offset": [22051, 25379], "fn": null}, "115": {"op": "EQ", "path": "0", "offset": [22051, 25379], "fn": null}, "116": {"op": "PUSH2", "value": "0x32D", "path": "0", "offset": [22051, 25379], "fn": null}, "119": {"op": "JUMPI", "path": "0", "offset": [22051, 25379], "fn": null}, "120": {"op": "PUSH2", "value": "0x157", "path": "0", "offset": [22051, 25379], "fn": null}, "123": {"op": "JUMP", "path": "0", "offset": [22051, 25379], "fn": null}, "124": {"op": "JUMPDEST", "path": "0", "offset": [22051, 25379], "fn": null}, "125": {"op": "DUP1", "path": "0", "offset": [22051, 25379], "fn": null}, "126": {"op": "PUSH4", "value": "0x8B876347", "path": "0", "offset": [22051, 25379], "fn": null}, "131": {"op": "EQ", "path": "0", "offset": [22051, 25379], "fn": null}, "132": {"op": "PUSH2", "value": "0x272", "path": "0", "offset": [22051, 25379], "fn": null}, "135": {"op": "JUMPI", "path": "0", "offset": [22051, 25379], "fn": null}, "136": {"op": "DUP1", "path": "0", "offset": [22051, 25379], "fn": null}, "137": {"op": "PUSH4", "value": "0x8DA5CB5B", "path": "0", "offset": [22051, 25379], "fn": null}, "142": {"op": "EQ", "path": "0", "offset": [22051, 25379], "fn": null}, "143": {"op": "PUSH2", "value": "0x298", "path": "0", "offset": [22051, 25379], "fn": null}, "146": {"op": "JUMPI", "path": "0", "offset": [22051, 25379], "fn": null}, "147": {"op": "DUP1", "path": "0", "offset": [22051, 25379], "fn": null}, "148": {"op": "PUSH4", "value": "0x8F32D59B", "path": "0", "offset": [22051, 25379], "fn": null}, "153": {"op": "EQ", "path": "0", "offset": [22051, 25379], "fn": null}, "154": {"op": "PUSH2", "value": "0x2BC", "path": "0", "offset": [22051, 25379], "fn": null}, "157": {"op": "JUMPI", "path": "0", "offset": [22051, 25379], "fn": null}, "158": {"op": "DUP1", "path": "0", "offset": [22051, 25379], "fn": null}, "159": {"op": "PUSH4", "value": "0xA694FC3A", "path": "0", "offset": [22051, 25379], "fn": null}, "164": {"op": "EQ", "path": "0", "offset": [22051, 25379], "fn": null}, "165": {"op": "PUSH2", "value": "0x2D8", "path": "0", "offset": [22051, 25379], "fn": null}, "168": {"op": "JUMPI", "path": "0", "offset": [22051, 25379], "fn": null}, "169": {"op": "DUP1", "path": "0", "offset": [22051, 25379], "fn": null}, "170": {"op": "PUSH4", "value": "0xC8F33C91", "path": "0", "offset": [22051, 25379], "fn": null}, "175": {"op": "EQ", "path": "0", "offset": [22051, 25379], "fn": null}, "176": {"op": "PUSH2", "value": "0x2F5", "path": "0", "offset": [22051, 25379], "fn": null}, "179": {"op": "JUMPI", "path": "0", "offset": [22051, 25379], "fn": null}, "180": {"op": "DUP1", "path": "0", "offset": [22051, 25379], "fn": null}, "181": {"op": "PUSH4", "value": "0xCD3DAF9D", "path": "0", "offset": [22051, 25379], "fn": null}, "186": {"op": "EQ", "path": "0", "offset": [22051, 25379], "fn": null}, "187": {"op": "PUSH2", "value": "0x2FD", "path": "0", "offset": [22051, 25379], "fn": null}, "190": {"op": "JUMPI", "path": "0", "offset": [22051, 25379], "fn": null}, "191": {"op": "PUSH2", "value": "0x157", "path": "0", "offset": [22051, 25379], "fn": null}, "194": {"op": "JUMP", "path": "0", "offset": [22051, 25379], "fn": null}, "195": {"op": "JUMPDEST", "path": "0", "offset": [22051, 25379], "fn": null}, "196": {"op": "DUP1", "path": "0", "offset": [22051, 25379], "fn": null}, "197": {"op": "PUSH4", "value": "0x3C6B16AB", "path": "0", "offset": [22051, 25379], "fn": null}, "202": {"op": "GT", "path": "0", "offset": [22051, 25379], "fn": null}, "203": {"op": "PUSH2", "value": "0x115", "path": "0", "offset": [22051, 25379], "fn": null}, "206": {"op": "JUMPI", "path": "0", "offset": [22051, 25379], "fn": null}, "207": {"op": "DUP1", "path": "0", "offset": [22051, 25379], "fn": null}, "208": {"op": "PUSH4", "value": "0x3C6B16AB", "path": "0", "offset": [22051, 25379], "fn": null}, "213": {"op": "EQ", "path": "0", "offset": [22051, 25379], "fn": null}, "214": {"op": "PUSH2", "value": "0x20F", "path": "0", "offset": [22051, 25379], "fn": null}, "217": {"op": "JUMPI", "path": "0", "offset": [22051, 25379], "fn": null}, "218": {"op": "DUP1", "path": "0", "offset": [22051, 25379], "fn": null}, "219": {"op": "PUSH4", "value": "0x3D18B912", "path": "0", "offset": [22051, 25379], "fn": null}, "224": {"op": "EQ", "path": "0", "offset": [22051, 25379], "fn": null}, "225": {"op": "PUSH2", "value": "0x22C", "path": "0", "offset": [22051, 25379], "fn": null}, "228": {"op": "JUMPI", "path": "0", "offset": [22051, 25379], "fn": null}, "229": {"op": "DUP1", "path": "0", "offset": [22051, 25379], "fn": null}, "230": {"op": "PUSH4", "value": "0x70A08231", "path": "0", "offset": [22051, 25379], "fn": null}, "235": {"op": "EQ", "path": "0", "offset": [22051, 25379], "fn": null}, "236": {"op": "PUSH2", "value": "0x234", "path": "0", "offset": [22051, 25379], "fn": null}, "239": {"op": "JUMPI", "path": "0", "offset": [22051, 25379], "fn": null}, "240": {"op": "DUP1", "path": "0", "offset": [22051, 25379], "fn": null}, "241": {"op": "PUSH4", "value": "0x715018A6", "path": "0", "offset": [22051, 25379], "fn": null}, "246": {"op": "EQ", "path": "0", "offset": [22051, 25379], "fn": null}, "247": {"op": "PUSH2", "value": "0x25A", "path": "0", "offset": [22051, 25379], "fn": null}, "250": {"op": "JUMPI", "path": "0", "offset": [22051, 25379], "fn": null}, "251": {"op": "DUP1", "path": "0", "offset": [22051, 25379], "fn": null}, "252": {"op": "PUSH4", "value": "0x7B0A47EE", "path": "0", "offset": [22051, 25379], "fn": null}, "257": {"op": "EQ", "path": "0", "offset": [22051, 25379], "fn": null}, "258": {"op": "PUSH2", "value": "0x262", "path": "0", "offset": [22051, 25379], "fn": null}, "261": {"op": "JUMPI", "path": "0", "offset": [22051, 25379], "fn": null}, "262": {"op": "DUP1", "path": "0", "offset": [22051, 25379], "fn": null}, "263": {"op": "PUSH4", "value": "0x80FAA57D", "path": "0", "offset": [22051, 25379], "fn": null}, "268": {"op": "EQ", "path": "0", "offset": [22051, 25379], "fn": null}, "269": {"op": "PUSH2", "value": "0x26A", "path": "0", "offset": [22051, 25379], "fn": null}, "272": {"op": "JUMPI", "path": "0", "offset": [22051, 25379], "fn": null}, "273": {"op": "PUSH2", "value": "0x157", "path": "0", "offset": [22051, 25379], "fn": null}, "276": {"op": "JUMP", "path": "0", "offset": [22051, 25379], "fn": null}, "277": {"op": "JUMPDEST", "path": "0", "offset": [22051, 25379], "fn": null}, "278": {"op": "DUP1", "path": "0", "offset": [22051, 25379], "fn": null}, "279": {"op": "PUSH3", "value": "0x8CC262", "path": "0", "offset": [22051, 25379], "fn": null}, "283": {"op": "EQ", "path": "0", "offset": [22051, 25379], "fn": null}, "284": {"op": "PUSH2", "value": "0x15C", "path": "0", "offset": [22051, 25379], "fn": null}, "287": {"op": "JUMPI", "path": "0", "offset": [22051, 25379], "fn": null}, "288": {"op": "DUP1", "path": "0", "offset": [22051, 25379], "fn": null}, "289": {"op": "PUSH4", "value": "0x700037D", "path": "0", "offset": [22051, 25379], "fn": null}, "294": {"op": "EQ", "path": "0", "offset": [22051, 25379], "fn": null}, "295": {"op": "PUSH2", "value": "0x194", "path": "0", "offset": [22051, 25379], "fn": null}, "298": {"op": "JUMPI", "path": "0", "offset": [22051, 25379], "fn": null}, "299": {"op": "DUP1", "path": "0", "offset": [22051, 25379], "fn": null}, "300": {"op": "PUSH4", "value": "0xD68B761", "path": "0", "offset": [22051, 25379], "fn": null}, "305": {"op": "EQ", "path": "0", "offset": [22051, 25379], "fn": null}, "306": {"op": "PUSH2", "value": "0x1BA", "path": "0", "offset": [22051, 25379], "fn": null}, "309": {"op": "JUMPI", "path": "0", "offset": [22051, 25379], "fn": null}, "310": {"op": "DUP1", "path": "0", "offset": [22051, 25379], "fn": null}, "311": {"op": "PUSH4", "value": "0x18160DDD", "path": "0", "offset": [22051, 25379], "fn": null}, "316": {"op": "EQ", "path": "0", "offset": [22051, 25379], "fn": null}, "317": {"op": "PUSH2", "value": "0x1E2", "path": "0", "offset": [22051, 25379], "fn": null}, "320": {"op": "JUMPI", "path": "0", "offset": [22051, 25379], "fn": null}, "321": {"op": "DUP1", "path": "0", "offset": [22051, 25379], "fn": null}, "322": {"op": "PUSH4", "value": "0x1BE05289", "path": "0", "offset": [22051, 25379], "fn": null}, "327": {"op": "EQ", "path": "0", "offset": [22051, 25379], "fn": null}, "328": {"op": "PUSH2", "value": "0x1EA", "path": "0", "offset": [22051, 25379], "fn": null}, "331": {"op": "JUMPI", "path": "0", "offset": [22051, 25379], "fn": null}, "332": {"op": "DUP1", "path": "0", "offset": [22051, 25379], "fn": null}, "333": {"op": "PUSH4", "value": "0x2E1A7D4D", "path": "0", "offset": [22051, 25379], "fn": null}, "338": {"op": "EQ", "path": "0", "offset": [22051, 25379], "fn": null}, "339": {"op": "PUSH2", "value": "0x1F2", "path": "0", "offset": [22051, 25379], "fn": null}, "342": {"op": "JUMPI", "path": "0", "offset": [22051, 25379], "fn": null}, "343": {"op": "JUMPDEST", "path": "0", "offset": [22051, 25379], "fn": null}, "344": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [22051, 25379], "fn": null}, "346": {"op": "DUP1", "path": "0", "offset": [22051, 25379], "fn": null}, "347": {"op": "REVERT", "first_revert": true, "path": "0", "offset": [22051, 25379], "fn": null}, "348": {"op": "JUMPDEST", "path": "0", "offset": [23676, 23935], "fn": "CurveRewards.earned"}, "349": {"op": "PUSH2", "value": "0x182", "path": "0", "offset": [23676, 23935], "fn": "CurveRewards.earned"}, "352": {"op": "PUSH1", "value": "0x4", "path": "0", "offset": [23676, 23935], "fn": "CurveRewards.earned"}, "354": {"op": "DUP1", "path": "0", "offset": [23676, 23935], "fn": "CurveRewards.earned"}, "355": {"op": "CALLDATASIZE", "path": "0", "offset": [23676, 23935], "fn": "CurveRewards.earned"}, "356": {"op": "SUB", "path": "0", "offset": [23676, 23935], "fn": "CurveRewards.earned"}, "357": {"op": "PUSH1", "value": "0x20"}, "359": {"op": "DUP2"}, "360": {"op": "LT"}, "361": {"op": "ISZERO"}, "362": {"op": "PUSH2", "value": "0x172"}, "365": {"op": "JUMPI"}, "366": {"op": "PUSH1", "value": "0x0"}, "368": {"op": "DUP1"}, "369": {"op": "REVERT"}, "370": {"op": "JUMPDEST"}, "371": {"op": "POP"}, "372": {"op": "CALLDATALOAD", "path": "0", "offset": [23676, 23935], "fn": "CurveRewards.earned"}, "373": {"op": "PUSH1", "value": "0x1"}, "375": {"op": "PUSH1", "value": "0x1"}, "377": {"op": "PUSH1", "value": "0xA0"}, "379": {"op": "SHL"}, "380": {"op": "SUB"}, "381": {"op": "AND", "path": "0", "offset": [23676, 23935], "fn": "CurveRewards.earned"}, "382": {"op": "PUSH2", "value": "0x353", "path": "0", "offset": [23676, 23935], "fn": "CurveRewards.earned"}, "385": {"op": "JUMP", "jump": "i", "path": "0", "offset": [23676, 23935], "fn": "CurveRewards.earned"}, "386": {"op": "JUMPDEST", "path": "0", "offset": [23676, 23935], "fn": "CurveRewards.earned"}, "387": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [23676, 23935], "fn": "CurveRewards.earned"}, "389": {"op": "DUP1", "path": "0", "offset": [23676, 23935], "fn": "CurveRewards.earned"}, "390": {"op": "MLOAD", "path": "0", "offset": [23676, 23935], "fn": "CurveRewards.earned"}, "391": {"op": "SWAP2", "path": "0", "offset": [23676, 23935], "fn": "CurveRewards.earned"}, "392": {"op": "DUP3", "path": "0", "offset": [23676, 23935], "fn": "CurveRewards.earned"}, "393": {"op": "MSTORE", "path": "0", "offset": [23676, 23935], "fn": "CurveRewards.earned"}, "394": {"op": "MLOAD", "path": "0", "offset": [23676, 23935], "fn": "CurveRewards.earned"}, "395": {"op": "SWAP1", "path": "0", "offset": [23676, 23935], "fn": "CurveRewards.earned"}, "396": {"op": "DUP2", "path": "0", "offset": [23676, 23935], "fn": "CurveRewards.earned"}, "397": {"op": "SWAP1", "path": "0", "offset": [23676, 23935], "fn": "CurveRewards.earned"}, "398": {"op": "SUB", "path": "0", "offset": [23676, 23935], "fn": "CurveRewards.earned"}, "399": {"op": "PUSH1", "value": "0x20", "path": "0", "offset": [23676, 23935], "fn": "CurveRewards.earned"}, "401": {"op": "ADD", "path": "0", "offset": [23676, 23935], "fn": "CurveRewards.earned"}, "402": {"op": "SWAP1", "path": "0", "offset": [23676, 23935], "fn": "CurveRewards.earned"}, "403": {"op": "RETURN", "path": "0", "offset": [23676, 23935], "fn": "CurveRewards.earned"}, "404": {"op": "JUMPDEST", "path": "0", "offset": [22409, 22451]}, "405": {"op": "PUSH2", "value": "0x182", "path": "0", "offset": [22409, 22451], "fn": "CurveRewards.earned"}, "408": {"op": "PUSH1", "value": "0x4", "path": "0", "offset": [22409, 22451], "fn": "CurveRewards.earned"}, "410": {"op": "DUP1", "path": "0", "offset": [22409, 22451], "fn": "CurveRewards.earned"}, "411": {"op": "CALLDATASIZE", "path": "0", "offset": [22409, 22451], "fn": "CurveRewards.earned"}, "412": {"op": "SUB", "path": "0", "offset": [22409, 22451], "fn": "CurveRewards.earned"}, "413": {"op": "PUSH1", "value": "0x20"}, "415": {"op": "DUP2"}, "416": {"op": "LT"}, "417": {"op": "ISZERO"}, "418": {"op": "PUSH2", "value": "0x1AA"}, "421": {"op": "JUMPI"}, "422": {"op": "PUSH1", "value": "0x0"}, "424": {"op": "DUP1"}, "425": {"op": "REVERT"}, "426": {"op": "JUMPDEST"}, "427": {"op": "POP"}, "428": {"op": "CALLDATALOAD", "path": "0", "offset": [22409, 22451]}, "429": {"op": "PUSH1", "value": "0x1"}, "431": {"op": "PUSH1", "value": "0x1"}, "433": {"op": "PUSH1", "value": "0xA0"}, "435": {"op": "SHL"}, "436": {"op": "SUB"}, "437": {"op": "AND", "path": "0", "offset": [22409, 22451]}, "438": {"op": "PUSH2", "value": "0x3D9", "path": "0", "offset": [22409, 22451], "fn": "CurveRewards.earned"}, "441": {"op": "JUMP", "jump": "i", "path": "0", "offset": [22409, 22451], "fn": "CurveRewards.earned"}, "442": {"op": "JUMPDEST", "path": "0", "offset": [20987, 21143], "fn": "IRewardDistributionRecipient.setRewardDistribution"}, "443": {"op": "PUSH2", "value": "0x1E0", "path": "0", "offset": [20987, 21143], "fn": "IRewardDistributionRecipient.setRewardDistribution"}, "446": {"op": "PUSH1", "value": "0x4", "path": "0", "offset": [20987, 21143], "fn": "IRewardDistributionRecipient.setRewardDistribution"}, "448": {"op": "DUP1", "path": "0", "offset": [20987, 21143], "fn": "IRewardDistributionRecipient.setRewardDistribution"}, "449": {"op": "CALLDATASIZE", "path": "0", "offset": [20987, 21143], "fn": "IRewardDistributionRecipient.setRewardDistribution"}, "450": {"op": "SUB", "path": "0", "offset": [20987, 21143], "fn": "IRewardDistributionRecipient.setRewardDistribution"}, "451": {"op": "PUSH1", "value": "0x20"}, "453": {"op": "DUP2"}, "454": {"op": "LT"}, "455": {"op": "ISZERO"}, "456": {"op": "PUSH2", "value": "0x1D0"}, "459": {"op": "JUMPI"}, "460": {"op": "PUSH1", "value": "0x0"}, "462": {"op": "DUP1"}, "463": {"op": "REVERT"}, "464": {"op": "JUMPDEST"}, "465": {"op": "POP"}, "466": {"op": "CALLDATALOAD", "path": "0", "offset": [20987, 21143], "fn": "IRewardDistributionRecipient.setRewardDistribution"}, "467": {"op": "PUSH1", "value": "0x1"}, "469": {"op": "PUSH1", "value": "0x1"}, "471": {"op": "PUSH1", "value": "0xA0"}, "473": {"op": "SHL"}, "474": {"op": "SUB"}, "475": {"op": "AND", "path": "0", "offset": [20987, 21143], "fn": "IRewardDistributionRecipient.setRewardDistribution"}, "476": {"op": "PUSH2", "value": "0x3EB", "path": "0", "offset": [20987, 21143], "fn": "IRewardDistributionRecipient.setRewardDistribution"}, "479": {"op": "JUMP", "jump": "i", "path": "0", "offset": [20987, 21143], "fn": "IRewardDistributionRecipient.setRewardDistribution"}, "480": {"op": "JUMPDEST", "path": "0", "offset": [20987, 21143], "fn": "IRewardDistributionRecipient.setRewardDistribution"}, "481": {"op": "STOP", "path": "0", "offset": [20987, 21143], "fn": "IRewardDistributionRecipient.setRewardDistribution"}, "482": {"op": "JUMPDEST", "path": "0", "offset": [21396, 21485], "fn": "LPTokenWrapper.totalSupply"}, "483": {"op": "PUSH2", "value": "0x182", "path": "0", "offset": [21396, 21485], "fn": "LPTokenWrapper.totalSupply"}, "486": {"op": "PUSH2", "value": "0x466", "path": "0", "offset": [21396, 21485], "fn": "LPTokenWrapper.totalSupply"}, "489": {"op": "JUMP", "jump": "i", "path": "0", "offset": [21396, 21485], "fn": "LPTokenWrapper.totalSupply"}, "490": {"op": "JUMPDEST", "path": "0", "offset": [22150, 22191]}, "491": {"op": "PUSH2", "value": "0x182", "path": "0", "offset": [22150, 22191], "fn": "LPTokenWrapper.totalSupply"}, "494": {"op": "PUSH2", "value": "0x46D", "path": "0", "offset": [22150, 22191], "fn": "LPTokenWrapper.totalSupply"}, "497": {"op": "JUMP", "jump": "i", "path": "0", "offset": [22150, 22191], "fn": "LPTokenWrapper.totalSupply"}, "498": {"op": "JUMPDEST", "path": "0", "offset": [24216, 24415], "fn": "CurveRewards.withdraw"}, "499": {"op": "PUSH2", "value": "0x1E0", "path": "0", "offset": [24216, 24415], "fn": "CurveRewards.withdraw"}, "502": {"op": "PUSH1", "value": "0x4", "path": "0", "offset": [24216, 24415], "fn": "CurveRewards.withdraw"}, "504": {"op": "DUP1", "path": "0", "offset": [24216, 24415], "fn": "CurveRewards.withdraw"}, "505": {"op": "CALLDATASIZE", "path": "0", "offset": [24216, 24415], "fn": "CurveRewards.withdraw"}, "506": {"op": "SUB", "path": "0", "offset": [24216, 24415], "fn": "CurveRewards.withdraw"}, "507": {"op": "PUSH1", "value": "0x20"}, "509": {"op": "DUP2"}, "510": {"op": "LT"}, "511": {"op": "ISZERO"}, "512": {"op": "PUSH2", "value": "0x208"}, "515": {"op": "JUMPI"}, "516": {"op": "PUSH1", "value": "0x0"}, "518": {"op": "DUP1"}, "519": {"op": "REVERT"}, "520": {"op": "JUMPDEST"}, "521": {"op": "POP"}, "522": {"op": "CALLDATALOAD", "path": "0", "offset": [24216, 24415], "fn": "CurveRewards.withdraw"}, "523": {"op": "PUSH2", "value": "0x474", "path": "0", "offset": [24216, 24415], "fn": "CurveRewards.withdraw"}, "526": {"op": "JUMP", "jump": "i", "path": "0", "offset": [24216, 24415], "fn": "CurveRewards.withdraw"}, "527": {"op": "JUMPDEST", "path": "0", "offset": [24804, 25377], "fn": "CurveRewards.notifyRewardAmount"}, "528": {"op": "PUSH2", "value": "0x1E0", "path": "0", "offset": [24804, 25377], "fn": "CurveRewards.notifyRewardAmount"}, "531": {"op": "PUSH1", "value": "0x4", "path": "0", "offset": [24804, 25377], "fn": "CurveRewards.notifyRewardAmount"}, "533": {"op": "DUP1", "path": "0", "offset": [24804, 25377], "fn": "CurveRewards.notifyRewardAmount"}, "534": {"op": "CALLDATASIZE", "path": "0", "offset": [24804, 25377], "fn": "CurveRewards.notifyRewardAmount"}, "535": {"op": "SUB", "path": "0", "offset": [24804, 25377], "fn": "CurveRewards.notifyRewardAmount"}, "536": {"op": "PUSH1", "value": "0x20"}, "538": {"op": "DUP2"}, "539": {"op": "LT"}, "540": {"op": "ISZERO"}, "541": {"op": "PUSH2", "value": "0x225"}, "544": {"op": "JUMPI"}, "545": {"op": "PUSH1", "value": "0x0"}, "547": {"op": "DUP1"}, "548": {"op": "REVERT"}, "549": {"op": "JUMPDEST"}, "550": {"op": "POP"}, "551": {"op": "CALLDATALOAD", "path": "0", "offset": [24804, 25377], "fn": "CurveRewards.notifyRewardAmount"}, "552": {"op": "PUSH2", "value": "0x55B", "path": "0", "offset": [24804, 25377], "fn": "CurveRewards.notifyRewardAmount"}, "555": {"op": "JUMP", "jump": "i", "path": "0", "offset": [24804, 25377], "fn": "CurveRewards.notifyRewardAmount"}, "556": {"op": "JUMPDEST", "path": "0", "offset": [24521, 24798], "fn": "CurveRewards.getReward"}, "557": {"op": "PUSH2", "value": "0x1E0", "path": "0", "offset": [24521, 24798], "fn": "CurveRewards.getReward"}, "560": {"op": "PUSH2", "value": "0x6D5", "path": "0", "offset": [24521, 24798], "fn": "CurveRewards.getReward"}, "563": {"op": "JUMP", "jump": "i", "path": "0", "offset": [24521, 24798], "fn": "CurveRewards.getReward"}, "564": {"op": "JUMPDEST", "path": "0", "offset": [21491, 21599], "fn": "LPTokenWrapper.balanceOf"}, "565": {"op": "PUSH2", "value": "0x182", "path": "0", "offset": [21491, 21599], "fn": "LPTokenWrapper.balanceOf"}, "568": {"op": "PUSH1", "value": "0x4", "path": "0", "offset": [21491, 21599], "fn": "LPTokenWrapper.balanceOf"}, "570": {"op": "DUP1", "path": "0", "offset": [21491, 21599], "fn": "LPTokenWrapper.balanceOf"}, "571": {"op": "CALLDATASIZE", "path": "0", "offset": [21491, 21599], "fn": "LPTokenWrapper.balanceOf"}, "572": {"op": "SUB", "path": "0", "offset": [21491, 21599], "fn": "LPTokenWrapper.balanceOf"}, "573": {"op": "PUSH1", "value": "0x20"}, "575": {"op": "DUP2"}, "576": {"op": "LT"}, "577": {"op": "ISZERO"}, "578": {"op": "PUSH2", "value": "0x24A"}, "581": {"op": "JUMPI"}, "582": {"op": "PUSH1", "value": "0x0"}, "584": {"op": "DUP1"}, "585": {"op": "REVERT"}, "586": {"op": "JUMPDEST"}, "587": {"op": "POP"}, "588": {"op": "CALLDATALOAD", "path": "0", "offset": [21491, 21599], "fn": "LPTokenWrapper.balanceOf"}, "589": {"op": "PUSH1", "value": "0x1"}, "591": {"op": "PUSH1", "value": "0x1"}, "593": {"op": "PUSH1", "value": "0xA0"}, "595": {"op": "SHL"}, "596": {"op": "SUB"}, "597": {"op": "AND", "path": "0", "offset": [21491, 21599], "fn": "LPTokenWrapper.balanceOf"}, "598": {"op": "PUSH2", "value": "0x7A7", "path": "0", "offset": [21491, 21599], "fn": "LPTokenWrapper.balanceOf"}, "601": {"op": "JUMP", "jump": "i", "path": "0", "offset": [21491, 21599], "fn": "LPTokenWrapper.balanceOf"}, "602": {"op": "JUMPDEST", "path": "0", "offset": [10378, 10515], "fn": "Ownable.renounceOwnership"}, "603": {"op": "PUSH2", "value": "0x1E0", "path": "0", "offset": [10378, 10515], "fn": "Ownable.renounceOwnership"}, "606": {"op": "PUSH2", "value": "0x7C2", "path": "0", "offset": [10378, 10515], "fn": "Ownable.renounceOwnership"}, "609": {"op": "JUMP", "jump": "i", "path": "0", "offset": [10378, 10515], "fn": "Ownable.renounceOwnership"}, "610": {"op": "JUMPDEST", "path": "0", "offset": [22235, 22264]}, "611": {"op": "PUSH2", "value": "0x182", "path": "0", "offset": [22235, 22264], "fn": "Ownable.renounceOwnership"}, "614": {"op": "PUSH2", "value": "0x865", "path": "0", "offset": [22235, 22264], "fn": "Ownable.renounceOwnership"}, "617": {"op": "JUMP", "jump": "i", "path": "0", "offset": [22235, 22264], "fn": "Ownable.renounceOwnership"}, "618": {"op": "JUMPDEST", "path": "0", "offset": [23127, 23256], "fn": "CurveRewards.lastTimeRewardApplicable"}, "619": {"op": "PUSH2", "value": "0x182", "path": "0", "offset": [23127, 23256], "fn": "CurveRewards.lastTimeRewardApplicable"}, "622": {"op": "PUSH2", "value": "0x86B", "path": "0", "offset": [23127, 23256], "fn": "CurveRewards.lastTimeRewardApplicable"}, "625": {"op": "JUMP", "jump": "i", "path": "0", "offset": [23127, 23256], "fn": "CurveRewards.lastTimeRewardApplicable"}, "626": {"op": "JUMPDEST", "path": "0", "offset": [22346, 22403]}, "627": {"op": "PUSH2", "value": "0x182", "path": "0", "offset": [22346, 22403], "fn": "CurveRewards.lastTimeRewardApplicable"}, "630": {"op": "PUSH1", "value": "0x4", "path": "0", "offset": [22346, 22403], "fn": "CurveRewards.lastTimeRewardApplicable"}, "632": {"op": "DUP1", "path": "0", "offset": [22346, 22403], "fn": "CurveRewards.lastTimeRewardApplicable"}, "633": {"op": "CALLDATASIZE", "path": "0", "offset": [22346, 22403], "fn": "CurveRewards.lastTimeRewardApplicable"}, "634": {"op": "SUB", "path": "0", "offset": [22346, 22403], "fn": "CurveRewards.lastTimeRewardApplicable"}, "635": {"op": "PUSH1", "value": "0x20"}, "637": {"op": "DUP2"}, "638": {"op": "LT"}, "639": {"op": "ISZERO"}, "640": {"op": "PUSH2", "value": "0x288"}, "643": {"op": "JUMPI"}, "644": {"op": "PUSH1", "value": "0x0"}, "646": {"op": "DUP1"}, "647": {"op": "REVERT"}, "648": {"op": "JUMPDEST"}, "649": {"op": "POP"}, "650": {"op": "CALLDATALOAD", "path": "0", "offset": [22346, 22403]}, "651": {"op": "PUSH1", "value": "0x1"}, "653": {"op": "PUSH1", "value": "0x1"}, "655": {"op": "PUSH1", "value": "0xA0"}, "657": {"op": "SHL"}, "658": {"op": "SUB"}, "659": {"op": "AND", "path": "0", "offset": [22346, 22403]}, "660": {"op": "PUSH2", "value": "0x87E", "path": "0", "offset": [22346, 22403], "fn": "CurveRewards.lastTimeRewardApplicable"}, "663": {"op": "JUMP", "jump": "i", "path": "0", "offset": [22346, 22403], "fn": "CurveRewards.lastTimeRewardApplicable"}, "664": {"op": "JUMPDEST", "path": "0", "offset": [9593, 9670], "fn": "Ownable.owner"}, "665": {"op": "PUSH2", "value": "0x2A0", "path": "0", "offset": [9593, 9670], "fn": "Ownable.owner"}, "668": {"op": "PUSH2", "value": "0x890", "path": "0", "offset": [9593, 9670], "fn": "Ownable.owner"}, "671": {"op": "JUMP", "jump": "i", "path": "0", "offset": [9593, 9670], "fn": "Ownable.owner"}, "672": {"op": "JUMPDEST", "path": "0", "offset": [9593, 9670], "fn": "Ownable.owner"}, "673": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [9593, 9670], "fn": "Ownable.owner"}, "675": {"op": "DUP1", "path": "0", "offset": [9593, 9670], "fn": "Ownable.owner"}, "676": {"op": "MLOAD", "path": "0", "offset": [9593, 9670], "fn": "Ownable.owner"}, "677": {"op": "PUSH1", "value": "0x1"}, "679": {"op": "PUSH1", "value": "0x1"}, "681": {"op": "PUSH1", "value": "0xA0"}, "683": {"op": "SHL"}, "684": {"op": "SUB"}, "685": {"op": "SWAP1", "path": "0", "offset": [9593, 9670], "fn": "Ownable.owner"}, "686": {"op": "SWAP3", "path": "0", "offset": [9593, 9670], "fn": "Ownable.owner"}, "687": {"op": "AND", "path": "0", "offset": [9593, 9670], "fn": "Ownable.owner"}, "688": {"op": "DUP3", "path": "0", "offset": [9593, 9670], "fn": "Ownable.owner"}, "689": {"op": "MSTORE", "path": "0", "offset": [9593, 9670], "fn": "Ownable.owner"}, "690": {"op": "MLOAD", "path": "0", "offset": [9593, 9670], "fn": "Ownable.owner"}, "691": {"op": "SWAP1", "path": "0", "offset": [9593, 9670], "fn": "Ownable.owner"}, "692": {"op": "DUP2", "path": "0", "offset": [9593, 9670], "fn": "Ownable.owner"}, "693": {"op": "SWAP1", "path": "0", "offset": [9593, 9670], "fn": "Ownable.owner"}, "694": {"op": "SUB", "path": "0", "offset": [9593, 9670], "fn": "Ownable.owner"}, "695": {"op": "PUSH1", "value": "0x20", "path": "0", "offset": [9593, 9670], "fn": "Ownable.owner"}, "697": {"op": "ADD", "path": "0", "offset": [9593, 9670], "fn": "Ownable.owner"}, "698": {"op": "SWAP1", "path": "0", "offset": [9593, 9670], "fn": "Ownable.owner"}, "699": {"op": "RETURN", "path": "0", "offset": [9593, 9670], "fn": "Ownable.owner"}, "700": {"op": "JUMPDEST", "path": "0", "offset": [9944, 10036], "fn": "Ownable.isOwner"}, "701": {"op": "PUSH2", "value": "0x2C4", "path": "0", "offset": [9944, 10036], "fn": "Ownable.isOwner"}, "704": {"op": "PUSH2", "value": "0x89F", "path": "0", "offset": [9944, 10036], "fn": "Ownable.isOwner"}, "707": {"op": "JUMP", "jump": "i", "path": "0", "offset": [9944, 10036], "fn": "Ownable.isOwner"}, "708": {"op": "JUMPDEST", "path": "0", "offset": [9944, 10036], "fn": "Ownable.isOwner"}, "709": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [9944, 10036], "fn": "Ownable.isOwner"}, "711": {"op": "DUP1", "path": "0", "offset": [9944, 10036], "fn": "Ownable.isOwner"}, "712": {"op": "MLOAD", "path": "0", "offset": [9944, 10036], "fn": "Ownable.isOwner"}, "713": {"op": "SWAP2", "path": "0", "offset": [9944, 10036], "fn": "Ownable.isOwner"}, "714": {"op": "ISZERO", "path": "0", "offset": [9944, 10036], "fn": "Ownable.isOwner"}, "715": {"op": "ISZERO", "path": "0", "offset": [9944, 10036], "fn": "Ownable.isOwner"}, "716": {"op": "DUP3", "path": "0", "offset": [9944, 10036], "fn": "Ownable.isOwner"}, "717": {"op": "MSTORE", "path": "0", "offset": [9944, 10036], "fn": "Ownable.isOwner"}, "718": {"op": "MLOAD", "path": "0", "offset": [9944, 10036], "fn": "Ownable.isOwner"}, "719": {"op": "SWAP1", "path": "0", "offset": [9944, 10036], "fn": "Ownable.isOwner"}, "720": {"op": "DUP2", "path": "0", "offset": [9944, 10036], "fn": "Ownable.isOwner"}, "721": {"op": "SWAP1", "path": "0", "offset": [9944, 10036], "fn": "Ownable.isOwner"}, "722": {"op": "SUB", "path": "0", "offset": [9944, 10036], "fn": "Ownable.isOwner"}, "723": {"op": "PUSH1", "value": "0x20", "path": "0", "offset": [9944, 10036], "fn": "Ownable.isOwner"}, "725": {"op": "ADD", "path": "0", "offset": [9944, 10036], "fn": "Ownable.isOwner"}, "726": {"op": "SWAP1", "path": "0", "offset": [9944, 10036], "fn": "Ownable.isOwner"}, "727": {"op": "RETURN", "path": "0", "offset": [9944, 10036], "fn": "Ownable.isOwner"}, "728": {"op": "JUMPDEST", "path": "0", "offset": [24023, 24210], "fn": "CurveRewards.stake"}, "729": {"op": "PUSH2", "value": "0x1E0", "path": "0", "offset": [24023, 24210], "fn": "CurveRewards.stake"}, "732": {"op": "PUSH1", "value": "0x4", "path": "0", "offset": [24023, 24210], "fn": "CurveRewards.stake"}, "734": {"op": "DUP1", "path": "0", "offset": [24023, 24210], "fn": "CurveRewards.stake"}, "735": {"op": "CALLDATASIZE", "path": "0", "offset": [24023, 24210], "fn": "CurveRewards.stake"}, "736": {"op": "SUB", "path": "0", "offset": [24023, 24210], "fn": "CurveRewards.stake"}, "737": {"op": "PUSH1", "value": "0x20"}, "739": {"op": "DUP2"}, "740": {"op": "LT"}, "741": {"op": "ISZERO"}, "742": {"op": "PUSH2", "value": "0x2EE"}, "745": {"op": "JUMPI"}, "746": {"op": "PUSH1", "value": "0x0"}, "748": {"op": "DUP1"}, "749": {"op": "REVERT"}, "750": {"op": "JUMPDEST"}, "751": {"op": "POP"}, "752": {"op": "CALLDATALOAD", "path": "0", "offset": [24023, 24210], "fn": "CurveRewards.stake"}, "753": {"op": "PUSH2", "value": "0x8C5", "path": "0", "offset": [24023, 24210], "fn": "CurveRewards.stake"}, "756": {"op": "JUMP", "jump": "i", "path": "0", "offset": [24023, 24210], "fn": "CurveRewards.stake"}, "757": {"op": "JUMPDEST", "path": "0", "offset": [22270, 22299]}, "758": {"op": "PUSH2", "value": "0x182", "path": "0", "offset": [22270, 22299], "fn": "CurveRewards.stake"}, "761": {"op": "PUSH2", "value": "0x9A9", "path": "0", "offset": [22270, 22299], "fn": "CurveRewards.stake"}, "764": {"op": "JUMP", "jump": "i", "path": "0", "offset": [22270, 22299], "fn": "CurveRewards.stake"}, "765": {"op": "JUMPDEST", "path": "0", "offset": [23262, 23670], "fn": "CurveRewards.rewardPerToken"}, "766": {"op": "PUSH2", "value": "0x182", "path": "0", "offset": [23262, 23670], "fn": "CurveRewards.rewardPerToken"}, "769": {"op": "PUSH2", "value": "0x9AF", "path": "0", "offset": [23262, 23670], "fn": "CurveRewards.rewardPerToken"}, "772": {"op": "JUMP", "jump": "i", "path": "0", "offset": [23262, 23670], "fn": "CurveRewards.rewardPerToken"}, "773": {"op": "JUMPDEST", "path": "0", "offset": [22305, 22340]}, "774": {"op": "PUSH2", "value": "0x182", "path": "0", "offset": [22305, 22340], "fn": "CurveRewards.rewardPerToken"}, "777": {"op": "PUSH2", "value": "0xA03", "path": "0", "offset": [22305, 22340], "fn": "CurveRewards.rewardPerToken"}, "780": {"op": "JUMP", "jump": "i", "path": "0", "offset": [22305, 22340], "fn": "CurveRewards.rewardPerToken"}, "781": {"op": "JUMPDEST", "path": "0", "offset": [22127, 22144]}, "782": {"op": "PUSH2", "value": "0x2A0", "path": "0", "offset": [22127, 22144], "fn": "CurveRewards.rewardPerToken"}, "785": {"op": "PUSH2", "value": "0xA09", "path": "0", "offset": [22127, 22144], "fn": "CurveRewards.rewardPerToken"}, "788": {"op": "JUMP", "jump": "i", "path": "0", "offset": [22127, 22144], "fn": "CurveRewards.rewardPerToken"}, "789": {"op": "JUMPDEST", "path": "0", "offset": [24421, 24515], "fn": "CurveRewards.exit"}, "790": {"op": "PUSH2", "value": "0x1E0", "path": "0", "offset": [24421, 24515], "fn": "CurveRewards.exit"}, "793": {"op": "PUSH2", "value": "0xA18", "path": "0", "offset": [24421, 24515], "fn": "CurveRewards.exit"}, "796": {"op": "JUMP", "jump": "i", "path": "0", "offset": [24421, 24515], "fn": "CurveRewards.exit"}, "797": {"op": "JUMPDEST", "path": "0", "offset": [22198, 22229]}, "798": {"op": "PUSH2", "value": "0x182", "path": "0", "offset": [22198, 22229], "fn": "CurveRewards.exit"}, "801": {"op": "PUSH2", "value": "0xA33", "path": "0", "offset": [22198, 22229], "fn": "CurveRewards.exit"}, "804": {"op": "JUMP", "jump": "i", "path": "0", "offset": [22198, 22229], "fn": "CurveRewards.exit"}, "805": {"op": "JUMPDEST", "path": "0", "offset": [21286, 21303]}, "806": {"op": "PUSH2", "value": "0x2A0", "path": "0", "offset": [21286, 21303], "fn": "CurveRewards.exit"}, "809": {"op": "PUSH2", "value": "0xA39", "path": "0", "offset": [21286, 21303], "fn": "CurveRewards.exit"}, "812": {"op": "JUMP", "jump": "i", "path": "0", "offset": [21286, 21303], "fn": "CurveRewards.exit"}, "813": {"op": "JUMPDEST", "path": "0", "offset": [10664, 10771], "fn": "Ownable.transferOwnership"}, "814": {"op": "PUSH2", "value": "0x1E0", "path": "0", "offset": [10664, 10771], "fn": "Ownable.transferOwnership"}, "817": {"op": "PUSH1", "value": "0x4", "path": "0", "offset": [10664, 10771], "fn": "Ownable.transferOwnership"}, "819": {"op": "DUP1", "path": "0", "offset": [10664, 10771], "fn": "Ownable.transferOwnership"}, "820": {"op": "CALLDATASIZE", "path": "0", "offset": [10664, 10771], "fn": "Ownable.transferOwnership"}, "821": {"op": "SUB", "path": "0", "offset": [10664, 10771], "fn": "Ownable.transferOwnership"}, "822": {"op": "PUSH1", "value": "0x20"}, "824": {"op": "DUP2"}, "825": {"op": "LT"}, "826": {"op": "ISZERO"}, "827": {"op": "PUSH2", "value": "0x343"}, "830": {"op": "JUMPI"}, "831": {"op": "PUSH1", "value": "0x0"}, "833": {"op": "DUP1"}, "834": {"op": "REVERT"}, "835": {"op": "JUMPDEST"}, "836": {"op": "POP"}, "837": {"op": "CALLDATALOAD", "path": "0", "offset": [10664, 10771], "fn": "Ownable.transferOwnership"}, "838": {"op": "PUSH1", "value": "0x1"}, "840": {"op": "PUSH1", "value": "0x1"}, "842": {"op": "PUSH1", "value": "0xA0"}, "844": {"op": "SHL"}, "845": {"op": "SUB"}, "846": {"op": "AND", "path": "0", "offset": [10664, 10771], "fn": "Ownable.transferOwnership"}, "847": {"op": "PUSH2", "value": "0xA48", "path": "0", "offset": [10664, 10771], "fn": "Ownable.transferOwnership"}, "850": {"op": "JUMP", "jump": "i", "path": "0", "offset": [10664, 10771], "fn": "Ownable.transferOwnership"}, "851": {"op": "JUMPDEST", "path": "0", "offset": [23676, 23935], "fn": "CurveRewards.earned"}, "852": {"op": "PUSH1", "value": "0x1"}, "854": {"op": "PUSH1", "value": "0x1"}, "856": {"op": "PUSH1", "value": "0xA0"}, "858": {"op": "SHL"}, "859": {"op": "SUB"}, "860": {"op": "DUP2", "path": "0", "offset": [23911, 23927], "fn": "CurveRewards.earned", "statement": 0}, "861": {"op": "AND", "path": "0", "offset": [23911, 23927], "fn": "CurveRewards.earned"}, "862": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [23730, 23737], "fn": "CurveRewards.earned"}, "864": {"op": "SWAP1", "path": "0", "offset": [23911, 23927], "fn": "CurveRewards.earned"}, "865": {"op": "DUP2", "path": "0", "offset": [23911, 23927], "fn": "CurveRewards.earned"}, "866": {"op": "MSTORE", "path": "0", "offset": [23911, 23927], "fn": "CurveRewards.earned"}, "867": {"op": "PUSH1", "value": "0xB", "path": "0", "offset": [23911, 23918], "fn": "CurveRewards.earned"}, "869": {"op": "PUSH1", "value": "0x20", "path": "0", "offset": [23911, 23927], "fn": "CurveRewards.earned"}, "871": {"op": "SWAP1", "path": "0", "offset": [23911, 23927], "fn": "CurveRewards.earned"}, "872": {"op": "DUP2", "path": "0", "offset": [23911, 23927], "fn": "CurveRewards.earned"}, "873": {"op": "MSTORE", "path": "0", "offset": [23911, 23927], "fn": "CurveRewards.earned"}, "874": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [23911, 23927], "fn": "CurveRewards.earned"}, "876": {"op": "DUP1", "path": "0", "offset": [23911, 23927], "fn": "CurveRewards.earned"}, "877": {"op": "DUP4", "path": "0", "offset": [23911, 23927], "fn": "CurveRewards.earned"}, "878": {"op": "KECCAK256", "path": "0", "offset": [23911, 23927], "fn": "CurveRewards.earned"}, "879": {"op": "SLOAD", "path": "0", "offset": [23911, 23927], "fn": "CurveRewards.earned"}, "880": {"op": "PUSH1", "value": "0xA", "path": "0", "offset": [23829, 23851], "fn": "CurveRewards.earned"}, "882": {"op": "SWAP1", "path": "0", "offset": [23829, 23860], "fn": "CurveRewards.earned"}, "883": {"op": "SWAP3", "path": "0", "offset": [23829, 23860], "fn": "CurveRewards.earned"}, "884": {"op": "MSTORE", "path": "0", "offset": [23829, 23860], "fn": "CurveRewards.earned"}, "885": {"op": "DUP3", "path": "0", "offset": [23829, 23860], "fn": "CurveRewards.earned"}, "886": {"op": "KECCAK256", "path": "0", "offset": [23829, 23860], "fn": "CurveRewards.earned"}, "887": {"op": "SLOAD", "path": "0", "offset": [23829, 23860], "fn": "CurveRewards.earned"}, "888": {"op": "PUSH2", "value": "0x3D3", "path": "0", "offset": [23768, 23928], "fn": "CurveRewards.earned"}, "891": {"op": "SWAP2", "path": "0", "offset": [23768, 23928], "fn": "CurveRewards.earned"}, "892": {"op": "SWAP1", "path": "0", "offset": [23911, 23927], "fn": "CurveRewards.earned"}, "893": {"op": "PUSH2", "value": "0x3C7", "path": "0", "offset": [23768, 23889], "fn": "CurveRewards.earned"}, "896": {"op": "SWAP1", "path": "0", "offset": [23768, 23889], "fn": "CurveRewards.earned"}, "897": {"op": "PUSH8", "value": "0xDE0B6B3A7640000", "path": "0", "offset": [23884, 23888], "fn": "CurveRewards.earned"}, "906": {"op": "SWAP1", "path": "0", "offset": [23884, 23888], "fn": "CurveRewards.earned"}, "907": {"op": "PUSH2", "value": "0x3BB", "path": "0", "offset": [23768, 23862], "fn": "CurveRewards.earned"}, "910": {"op": "SWAP1", "path": "0", "offset": [23768, 23862], "fn": "CurveRewards.earned"}, "911": {"op": "PUSH2", "value": "0x3A6", "path": "0", "offset": [23808, 23861], "fn": "CurveRewards.earned"}, "914": {"op": "SWAP1", "path": "0", "offset": [23808, 23861], "fn": "CurveRewards.earned"}, "915": {"op": "PUSH2", "value": "0x39A", "path": "0", "offset": [23808, 23824], "fn": "CurveRewards.earned"}, "918": {"op": "PUSH2", "value": "0x9AF", "path": "0", "offset": [23808, 23822], "fn": "CurveRewards.earned"}, "921": {"op": "JUMP", "jump": "i", "path": "0", "offset": [23808, 23824], "fn": "CurveRewards.earned"}, "922": {"op": "JUMPDEST", "path": "0", "offset": [23808, 23824], "fn": "CurveRewards.earned"}, "923": {"op": "SWAP1", "path": "0", "offset": [23808, 23828], "fn": "CurveRewards.earned"}, "924": {"op": "PUSH4", "value": "0xFFFFFFFF", "path": "0", "offset": [23808, 23861], "fn": "CurveRewards.earned"}, "929": {"op": "PUSH2", "value": "0xAAD", "path": "0", "offset": [23808, 23828], "fn": "CurveRewards.earned"}, "932": {"op": "AND", "path": "0", "offset": [23808, 23861], "fn": "CurveRewards.earned"}, "933": {"op": "JUMP", "jump": "i", "path": "0", "offset": [23808, 23861], "fn": "CurveRewards.earned"}, "934": {"op": "JUMPDEST", "path": "0", "offset": [23808, 23861], "fn": "CurveRewards.earned"}, "935": {"op": "PUSH2", "value": "0x3AF", "path": "0", "offset": [23768, 23786], "fn": "CurveRewards.earned"}, "938": {"op": "DUP9", "path": "0", "offset": [23778, 23785], "fn": "CurveRewards.earned"}, "939": {"op": "PUSH2", "value": "0x7A7", "path": "0", "offset": [23768, 23777], "fn": "CurveRewards.earned"}, "942": {"op": "JUMP", "jump": "i", "path": "0", "offset": [23768, 23786], "fn": "CurveRewards.earned"}, "943": {"op": "JUMPDEST", "path": "0", "offset": [23768, 23786], "fn": "CurveRewards.earned"}, "944": {"op": "SWAP1", "path": "0", "offset": [23768, 23807], "fn": "CurveRewards.earned"}, "945": {"op": "PUSH4", "value": "0xFFFFFFFF", "path": "0", "offset": [23768, 23862], "fn": "CurveRewards.earned"}, "950": {"op": "PUSH2", "value": "0xAF6", "path": "0", "offset": [23768, 23807], "fn": "CurveRewards.earned"}, "953": {"op": "AND", "path": "0", "offset": [23768, 23862], "fn": "CurveRewards.earned"}, "954": {"op": "JUMP", "jump": "i", "path": "0", "offset": [23768, 23862], "fn": "CurveRewards.earned"}, "955": {"op": "JUMPDEST", "path": "0", "offset": [23768, 23862], "fn": "CurveRewards.earned"}, "956": {"op": "SWAP1", "path": "0", "offset": [23768, 23883], "fn": "CurveRewards.earned"}, "957": {"op": "PUSH4", "value": "0xFFFFFFFF", "path": "0", "offset": [23768, 23889], "fn": "CurveRewards.earned"}, "962": {"op": "PUSH2", "value": "0xB4F", "path": "0", "offset": [23768, 23883], "fn": "CurveRewards.earned"}, "965": {"op": "AND", "path": "0", "offset": [23768, 23889], "fn": "CurveRewards.earned"}, "966": {"op": "JUMP", "jump": "i", "path": "0", "offset": [23768, 23889], "fn": "CurveRewards.earned"}, "967": {"op": "JUMPDEST", "path": "0", "offset": [23768, 23889], "fn": "CurveRewards.earned"}, "968": {"op": "SWAP1", "path": "0", "offset": [23768, 23910], "fn": "CurveRewards.earned"}, "969": {"op": "PUSH4", "value": "0xFFFFFFFF", "path": "0", "offset": [23768, 23928], "fn": "CurveRewards.earned"}, "974": {"op": "PUSH2", "value": "0xB91", "path": "0", "offset": [23768, 23910], "fn": "CurveRewards.earned"}, "977": {"op": "AND", "path": "0", "offset": [23768, 23928], "fn": "CurveRewards.earned"}, "978": {"op": "JUMP", "jump": "i", "path": "0", "offset": [23768, 23928], "fn": "CurveRewards.earned"}, "979": {"op": "JUMPDEST", "path": "0", "offset": [23768, 23928], "fn": "CurveRewards.earned"}, "980": {"op": "SWAP3", "path": "0", "offset": [23749, 23928], "fn": "CurveRewards.earned"}, "981": {"op": "SWAP2", "path": "0", "offset": [23676, 23935], "fn": "CurveRewards.earned"}, "982": {"op": "POP"}, "983": {"op": "POP"}, "984": {"op": "JUMP", "jump": "o", "path": "0", "offset": [23676, 23935], "fn": "CurveRewards.earned"}, "985": {"op": "JUMPDEST", "path": "0", "offset": [22409, 22451]}, "986": {"op": "PUSH1", "value": "0xB", "path": "0", "offset": [22409, 22451], "fn": "CurveRewards.earned"}, "988": {"op": "PUSH1", "value": "0x20", "path": "0", "offset": [22409, 22451], "fn": "CurveRewards.earned"}, "990": {"op": "MSTORE", "path": "0", "offset": [22409, 22451], "fn": "CurveRewards.earned"}, "991": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [22409, 22451], "fn": "CurveRewards.earned"}, "993": {"op": "SWAP1", "path": "0", "offset": [22409, 22451], "fn": "CurveRewards.earned"}, "994": {"op": "DUP2", "path": "0", "offset": [22409, 22451], "fn": "CurveRewards.earned"}, "995": {"op": "MSTORE", "path": "0", "offset": [22409, 22451], "fn": "CurveRewards.earned"}, "996": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [22409, 22451], "fn": "CurveRewards.earned"}, "998": {"op": "SWAP1", "path": "0", "offset": [22409, 22451], "fn": "CurveRewards.earned"}, "999": {"op": "KECCAK256", "path": "0", "offset": [22409, 22451], "fn": "CurveRewards.earned"}, "1000": {"op": "SLOAD", "path": "0", "offset": [22409, 22451], "fn": "CurveRewards.earned"}, "1001": {"op": "DUP2", "path": "0", "offset": [22409, 22451], "fn": "CurveRewards.earned"}, "1002": {"op": "JUMP", "jump": "o", "path": "0", "offset": [22409, 22451], "fn": "CurveRewards.earned"}, "1003": {"op": "JUMPDEST", "path": "0", "offset": [20987, 21143], "fn": "IRewardDistributionRecipient.setRewardDistribution"}, "1004": {"op": "PUSH2", "value": "0x3F3", "path": "0", "offset": [9797, 9806]}, "1007": {"op": "PUSH2", "value": "0x89F", "path": "0", "offset": [9797, 9804]}, "1010": {"op": "JUMP", "jump": "i", "path": "0", "offset": [9797, 9806]}, "1011": {"op": "JUMPDEST", "path": "0", "offset": [9797, 9806], "fn": "IRewardDistributionRecipient.setRewardDistribution"}, "1012": {"op": "PUSH2", "value": "0x444", "path": "0", "offset": [9789, 9843]}, "1015": {"op": "JUMPI", "path": "0", "offset": [9789, 9843]}, "1016": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [9789, 9843], "fn": "IRewardDistributionRecipient.setRewardDistribution"}, "1018": {"op": "DUP1", "path": "0", "offset": [9789, 9843], "fn": "IRewardDistributionRecipient.setRewardDistribution"}, "1019": {"op": "MLOAD", "path": "0", "offset": [9789, 9843], "fn": "IRewardDistributionRecipient.setRewardDistribution"}, "1020": {"op": "PUSH3", "value": "0x461BCD"}, "1024": {"op": "PUSH1", "value": "0xE5"}, "1026": {"op": "SHL"}, "1027": {"op": "DUP2", "path": "0", "offset": [9789, 9843]}, "1028": {"op": "MSTORE", "path": "0", "offset": [9789, 9843], "fn": "IRewardDistributionRecipient.setRewardDistribution"}, "1029": {"op": "PUSH1", "value": "0x20", "path": "0", "offset": [9789, 9843], "fn": "IRewardDistributionRecipient.setRewardDistribution"}, "1031": {"op": "PUSH1", "value": "0x4", "path": "0", "offset": [9789, 9843], "fn": "IRewardDistributionRecipient.setRewardDistribution"}, "1033": {"op": "DUP3", "path": "0", "offset": [9789, 9843], "fn": "IRewardDistributionRecipient.setRewardDistribution"}, "1034": {"op": "ADD", "path": "0", "offset": [9789, 9843], "fn": "IRewardDistributionRecipient.setRewardDistribution"}, "1035": {"op": "DUP2", "path": "0", "offset": [9789, 9843], "fn": "IRewardDistributionRecipient.setRewardDistribution"}, "1036": {"op": "SWAP1", "path": "0", "offset": [9789, 9843], "fn": "IRewardDistributionRecipient.setRewardDistribution"}, "1037": {"op": "MSTORE", "path": "0", "offset": [9789, 9843], "fn": "IRewardDistributionRecipient.setRewardDistribution"}, "1038": {"op": "PUSH1", "value": "0x24", "path": "0", "offset": [9789, 9843], "fn": "IRewardDistributionRecipient.setRewardDistribution"}, "1040": {"op": "DUP3", "path": "0", "offset": [9789, 9843], "fn": "IRewardDistributionRecipient.setRewardDistribution"}, "1041": {"op": "ADD", "path": "0", "offset": [9789, 9843], "fn": "IRewardDistributionRecipient.setRewardDistribution"}, "1042": {"op": "MSTORE", "path": "0", "offset": [9789, 9843], "fn": "IRewardDistributionRecipient.setRewardDistribution"}, "1043": {"op": "PUSH32", "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572", "path": "0", "offset": [9789, 9843], "fn": "IRewardDistributionRecipient.setRewardDistribution"}, "1076": {"op": "PUSH1", "value": "0x44", "path": "0", "offset": [9789, 9843], "fn": "IRewardDistributionRecipient.setRewardDistribution"}, "1078": {"op": "DUP3", "path": "0", "offset": [9789, 9843], "fn": "IRewardDistributionRecipient.setRewardDistribution"}, "1079": {"op": "ADD", "path": "0", "offset": [9789, 9843], "fn": "IRewardDistributionRecipient.setRewardDistribution"}, "1080": {"op": "MSTORE", "path": "0", "offset": [9789, 9843], "fn": "IRewardDistributionRecipient.setRewardDistribution"}, "1081": {"op": "SWAP1", "path": "0", "offset": [9789, 9843], "fn": "IRewardDistributionRecipient.setRewardDistribution"}, "1082": {"op": "MLOAD", "path": "0", "offset": [9789, 9843], "fn": "IRewardDistributionRecipient.setRewardDistribution"}, "1083": {"op": "SWAP1", "path": "0", "offset": [9789, 9843], "fn": "IRewardDistributionRecipient.setRewardDistribution"}, "1084": {"op": "DUP2", "path": "0", "offset": [9789, 9843], "fn": "IRewardDistributionRecipient.setRewardDistribution"}, "1085": {"op": "SWAP1", "path": "0", "offset": [9789, 9843], "fn": "IRewardDistributionRecipient.setRewardDistribution"}, "1086": {"op": "SUB", "path": "0", "offset": [9789, 9843], "fn": "IRewardDistributionRecipient.setRewardDistribution"}, "1087": {"op": "PUSH1", "value": "0x64", "path": "0", "offset": [9789, 9843], "fn": "IRewardDistributionRecipient.setRewardDistribution"}, "1089": {"op": "ADD", "path": "0", "offset": [9789, 9843], "fn": "IRewardDistributionRecipient.setRewardDistribution"}, "1090": {"op": "SWAP1", "path": "0", "offset": [9789, 9843], "fn": "IRewardDistributionRecipient.setRewardDistribution"}, "1091": {"op": "REVERT", "path": "0", "offset": [9789, 9843], "fn": "IRewardDistributionRecipient.setRewardDistribution"}, "1092": {"op": "JUMPDEST", "path": "0", "offset": [9789, 9843], "fn": "IRewardDistributionRecipient.setRewardDistribution"}, "1093": {"op": "PUSH1", "value": "0x4", "path": "0", "offset": [21096, 21114], "fn": "IRewardDistributionRecipient.setRewardDistribution", "statement": 1}, "1095": {"op": "DUP1", "path": "0", "offset": [21096, 21136], "fn": "IRewardDistributionRecipient.setRewardDistribution"}, "1096": {"op": "SLOAD", "path": "0", "offset": [21096, 21136], "fn": "IRewardDistributionRecipient.setRewardDistribution"}, "1097": {"op": "PUSH1", "value": "0x1"}, "1099": {"op": "PUSH1", "value": "0x1"}, "1101": {"op": "PUSH1", "value": "0xA0"}, "1103": {"op": "SHL"}, "1104": {"op": "SUB"}, "1105": {"op": "NOT"}, "1106": {"op": "AND", "path": "0", "offset": [21096, 21136], "fn": "IRewardDistributionRecipient.setRewardDistribution"}, "1107": {"op": "PUSH1", "value": "0x1"}, "1109": {"op": "PUSH1", "value": "0x1"}, "1111": {"op": "PUSH1", "value": "0xA0"}, "1113": {"op": "SHL"}, "1114": {"op": "SUB"}, "1115": {"op": "SWAP3", "path": "0", "offset": [21096, 21136], "fn": "IRewardDistributionRecipient.setRewardDistribution"}, "1116": {"op": "SWAP1", "path": "0", "offset": [21096, 21136], "fn": "IRewardDistributionRecipient.setRewardDistribution"}, "1117": {"op": "SWAP3", "path": "0", "offset": [21096, 21136], "fn": "IRewardDistributionRecipient.setRewardDistribution"}, "1118": {"op": "AND", "path": "0", "offset": [21096, 21136], "fn": "IRewardDistributionRecipient.setRewardDistribution"}, "1119": {"op": "SWAP2", "path": "0", "offset": [21096, 21136], "fn": "IRewardDistributionRecipient.setRewardDistribution"}, "1120": {"op": "SWAP1", "path": "0", "offset": [21096, 21136], "fn": "IRewardDistributionRecipient.setRewardDistribution"}, "1121": {"op": "SWAP2", "path": "0", "offset": [21096, 21136], "fn": "IRewardDistributionRecipient.setRewardDistribution"}, "1122": {"op": "OR", "path": "0", "offset": [21096, 21136], "fn": "IRewardDistributionRecipient.setRewardDistribution"}, "1123": {"op": "SWAP1", "path": "0", "offset": [21096, 21136], "fn": "IRewardDistributionRecipient.setRewardDistribution"}, "1124": {"op": "SSTORE", "path": "0", "offset": [21096, 21136], "fn": "IRewardDistributionRecipient.setRewardDistribution"}, "1125": {"op": "JUMP", "jump": "o", "path": "0", "offset": [20987, 21143], "fn": "IRewardDistributionRecipient.setRewardDistribution"}, "1126": {"op": "JUMPDEST", "path": "0", "offset": [21396, 21485], "fn": "LPTokenWrapper.totalSupply"}, "1127": {"op": "PUSH1", "value": "0x1", "path": "0", "offset": [21466, 21478], "fn": "LPTokenWrapper.totalSupply", "statement": 2}, "1129": {"op": "SLOAD", "path": "0", "offset": [21466, 21478], "fn": "LPTokenWrapper.totalSupply"}, "1130": {"op": "JUMPDEST", "path": "0", "offset": [21396, 21485], "fn": "LPTokenWrapper.totalSupply"}, "1131": {"op": "SWAP1", "path": "0", "offset": [21396, 21485], "fn": "LPTokenWrapper.totalSupply"}, "1132": {"op": "JUMP", "jump": "o", "path": "0", "offset": [21396, 21485], "fn": "LPTokenWrapper.totalSupply"}, "1133": {"op": "JUMPDEST", "path": "0", "offset": [22150, 22191]}, "1134": {"op": "PUSH3", "value": "0x93A80", "path": "0", "offset": [22185, 22191]}, "1138": {"op": "DUP2", "path": "0", "offset": [22150, 22191]}, "1139": {"op": "JUMP", "jump": "o", "path": "0", "offset": [22150, 22191], "fn": "LPTokenWrapper.totalSupply"}, "1140": {"op": "JUMPDEST", "path": "0", "offset": [24216, 24415], "fn": "CurveRewards.withdraw"}, "1141": {"op": "CALLER", "path": "0", "offset": [24270, 24280], "fn": "CurveRewards.withdraw"}, "1142": {"op": "PUSH2", "value": "0x47D", "path": "0", "offset": [22745, 22761]}, "1145": {"op": "PUSH2", "value": "0x9AF", "path": "0", "offset": [22745, 22759]}, "1148": {"op": "JUMP", "jump": "i", "path": "0", "offset": [22745, 22761]}, "1149": {"op": "JUMPDEST", "path": "0", "offset": [22745, 22761], "fn": "CurveRewards.withdraw"}, "1150": {"op": "PUSH1", "value": "0x9", "path": "0", "offset": [22722, 22742]}, "1152": {"op": "SSTORE", "path": "0", "offset": [22722, 22761]}, "1153": {"op": "PUSH2", "value": "0x488", "path": "0", "offset": [22788, 22814]}, "1156": {"op": "PUSH2", "value": "0x86B", "path": "0", "offset": [22788, 22812]}, "1159": {"op": "JUMP", "jump": "i", "path": "0", "offset": [22788, 22814]}, "1160": {"op": "JUMPDEST", "path": "0", "offset": [22788, 22814], "fn": "CurveRewards.withdraw"}, "1161": {"op": "PUSH1", "value": "0x8", "path": "0", "offset": [22771, 22785]}, "1163": {"op": "SSTORE", "path": "0", "offset": [22771, 22814]}, "1164": {"op": "PUSH1", "value": "0x1"}, "1166": {"op": "PUSH1", "value": "0x1"}, "1168": {"op": "PUSH1", "value": "0xA0"}, "1170": {"op": "SHL"}, "1171": {"op": "SUB"}, "1172": {"op": "DUP2", "path": "0", "offset": [22828, 22849]}, "1173": {"op": "AND", "path": "0", "offset": [22828, 22849], "fn": "CurveRewards.withdraw"}, "1174": {"op": "ISZERO", "path": "0", "offset": [22828, 22849], "fn": "CurveRewards.withdraw"}, "1175": {"op": "PUSH2", "value": "0x4CF", "path": "0", "offset": [22824, 22978]}, "1178": {"op": "JUMPI", "path": "0", "offset": [22824, 22978]}, "1179": {"op": "PUSH2", "value": "0x4A3", "path": "0", "offset": [22884, 22899]}, "1182": {"op": "DUP2", "path": "0", "offset": [22891, 22898]}, "1183": {"op": "PUSH2", "value": "0x353", "path": "0", "offset": [22884, 22890]}, "1186": {"op": "JUMP", "jump": "i", "path": "0", "offset": [22884, 22899]}, "1187": {"op": "JUMPDEST", "path": "0", "offset": [22884, 22899], "fn": "CurveRewards.withdraw"}, "1188": {"op": "PUSH1", "value": "0x1"}, "1190": {"op": "PUSH1", "value": "0x1"}, "1192": {"op": "PUSH1", "value": "0xA0"}, "1194": {"op": "SHL"}, "1195": {"op": "SUB"}, "1196": {"op": "DUP3", "path": "0", "offset": [22865, 22881]}, "1197": {"op": "AND", "path": "0", "offset": [22865, 22881], "fn": "CurveRewards.withdraw"}, "1198": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [22865, 22881], "fn": "CurveRewards.withdraw"}, "1200": {"op": "SWAP1", "path": "0", "offset": [22865, 22881], "fn": "CurveRewards.withdraw"}, "1201": {"op": "DUP2", "path": "0", "offset": [22865, 22881], "fn": "CurveRewards.withdraw"}, "1202": {"op": "MSTORE", "path": "0", "offset": [22865, 22881], "fn": "CurveRewards.withdraw"}, "1203": {"op": "PUSH1", "value": "0xB", "path": "0", "offset": [22865, 22872]}, "1205": {"op": "PUSH1", "value": "0x20", "path": "0", "offset": [22865, 22881]}, "1207": {"op": "SWAP1", "path": "0", "offset": [22865, 22881], "fn": "CurveRewards.withdraw"}, "1208": {"op": "DUP2", "path": "0", "offset": [22865, 22881], "fn": "CurveRewards.withdraw"}, "1209": {"op": "MSTORE", "path": "0", "offset": [22865, 22881], "fn": "CurveRewards.withdraw"}, "1210": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [22865, 22881], "fn": "CurveRewards.withdraw"}, "1212": {"op": "DUP1", "path": "0", "offset": [22865, 22881], "fn": "CurveRewards.withdraw"}, "1213": {"op": "DUP4", "path": "0", "offset": [22865, 22881], "fn": "CurveRewards.withdraw"}, "1214": {"op": "KECCAK256", "path": "0", "offset": [22865, 22881], "fn": "CurveRewards.withdraw"}, "1215": {"op": "SWAP4", "path": "0", "offset": [22865, 22899]}, "1216": {"op": "SWAP1", "path": "0", "offset": [22865, 22899], "fn": "CurveRewards.withdraw"}, "1217": {"op": "SWAP4", "path": "0", "offset": [22865, 22899], "fn": "CurveRewards.withdraw"}, "1218": {"op": "SSTORE", "path": "0", "offset": [22865, 22899], "fn": "CurveRewards.withdraw"}, "1219": {"op": "PUSH1", "value": "0x9", "path": "0", "offset": [22947, 22967]}, "1221": {"op": "SLOAD", "path": "0", "offset": [22947, 22967], "fn": "CurveRewards.withdraw"}, "1222": {"op": "PUSH1", "value": "0xA", "path": "0", "offset": [22913, 22935]}, "1224": {"op": "SWAP1", "path": "0", "offset": [22913, 22944]}, "1225": {"op": "SWAP2", "path": "0", "offset": [22913, 22944], "fn": "CurveRewards.withdraw"}, "1226": {"op": "MSTORE", "path": "0", "offset": [22913, 22944], "fn": "CurveRewards.withdraw"}, "1227": {"op": "SWAP2", "path": "0", "offset": [22913, 22944], "fn": "CurveRewards.withdraw"}, "1228": {"op": "SWAP1", "path": "0", "offset": [22913, 22944], "fn": "CurveRewards.withdraw"}, "1229": {"op": "KECCAK256", "path": "0", "offset": [22913, 22944], "fn": "CurveRewards.withdraw"}, "1230": {"op": "SSTORE", "path": "0", "offset": [22913, 22967]}, "1231": {"op": "JUMPDEST", "path": "0", "offset": [22824, 22978]}, "1232": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [24309, 24310], "fn": "CurveRewards.withdraw", "statement": 3}, "1234": {"op": "DUP3", "path": "0", "offset": [24300, 24306], "fn": "CurveRewards.withdraw"}, "1235": {"op": "GT", "path": "0", "offset": [24300, 24310], "fn": "CurveRewards.withdraw", "branch": 52}, "1236": {"op": "PUSH2", "value": "0x518", "path": "0", "offset": [24292, 24332], "fn": "CurveRewards.withdraw"}, "1239": {"op": "JUMPI", "path": "0", "offset": [24292, 24332], "fn": "CurveRewards.withdraw", "branch": 52}, "1240": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [24292, 24332], "fn": "CurveRewards.withdraw"}, "1242": {"op": "DUP1", "path": "0", "offset": [24292, 24332], "fn": "CurveRewards.withdraw"}, "1243": {"op": "MLOAD", "path": "0", "offset": [24292, 24332], "fn": "CurveRewards.withdraw"}, "1244": {"op": "PUSH3", "value": "0x461BCD"}, "1248": {"op": "PUSH1", "value": "0xE5"}, "1250": {"op": "SHL"}, "1251": {"op": "DUP2", "path": "0", "offset": [24292, 24332], "fn": "CurveRewards.withdraw"}, "1252": {"op": "MSTORE", "path": "0", "offset": [24292, 24332], "fn": "CurveRewards.withdraw"}, "1253": {"op": "PUSH1", "value": "0x20", "path": "0", "offset": [24292, 24332], "fn": "CurveRewards.withdraw"}, "1255": {"op": "PUSH1", "value": "0x4", "path": "0", "offset": [24292, 24332], "fn": "CurveRewards.withdraw"}, "1257": {"op": "DUP3", "path": "0", "offset": [24292, 24332], "fn": "CurveRewards.withdraw"}, "1258": {"op": "ADD", "path": "0", "offset": [24292, 24332], "fn": "CurveRewards.withdraw"}, "1259": {"op": "MSTORE", "path": "0", "offset": [24292, 24332], "fn": "CurveRewards.withdraw"}, "1260": {"op": "PUSH1", "value": "0x11", "path": "0", "offset": [24292, 24332], "fn": "CurveRewards.withdraw"}, "1262": {"op": "PUSH1", "value": "0x24", "path": "0", "offset": [24292, 24332], "fn": "CurveRewards.withdraw"}, "1264": {"op": "DUP3", "path": "0", "offset": [24292, 24332], "fn": "CurveRewards.withdraw"}, "1265": {"op": "ADD", "path": "0", "offset": [24292, 24332], "fn": "CurveRewards.withdraw"}, "1266": {"op": "MSTORE", "path": "0", "offset": [24292, 24332], "fn": "CurveRewards.withdraw"}, "1267": {"op": "PUSH17", "value": "0x43616E6E6F74207769746864726177203"}, "1285": {"op": "PUSH1", "value": "0x7C"}, "1287": {"op": "SHL"}, "1288": {"op": "PUSH1", "value": "0x44", "path": "0", "offset": [24292, 24332], "fn": "CurveRewards.withdraw"}, "1290": {"op": "DUP3", "path": "0", "offset": [24292, 24332], "fn": "CurveRewards.withdraw"}, "1291": {"op": "ADD", "path": "0", "offset": [24292, 24332], "fn": "CurveRewards.withdraw"}, "1292": {"op": "MSTORE", "path": "0", "offset": [24292, 24332], "fn": "CurveRewards.withdraw"}, "1293": {"op": "SWAP1", "path": "0", "offset": [24292, 24332], "fn": "CurveRewards.withdraw"}, "1294": {"op": "MLOAD", "path": "0", "offset": [24292, 24332], "fn": "CurveRewards.withdraw"}, "1295": {"op": "SWAP1", "path": "0", "offset": [24292, 24332], "fn": "CurveRewards.withdraw"}, "1296": {"op": "DUP2", "path": "0", "offset": [24292, 24332], "fn": "CurveRewards.withdraw"}, "1297": {"op": "SWAP1", "path": "0", "offset": [24292, 24332], "fn": "CurveRewards.withdraw"}, "1298": {"op": "SUB", "path": "0", "offset": [24292, 24332], "fn": "CurveRewards.withdraw"}, "1299": {"op": "PUSH1", "value": "0x64", "path": "0", "offset": [24292, 24332], "fn": "CurveRewards.withdraw"}, "1301": {"op": "ADD", "path": "0", "offset": [24292, 24332], "fn": "CurveRewards.withdraw"}, "1302": {"op": "SWAP1", "path": "0", "offset": [24292, 24332], "fn": "CurveRewards.withdraw"}, "1303": {"op": "REVERT", "path": "0", "offset": [24292, 24332], "fn": "CurveRewards.withdraw"}, "1304": {"op": "JUMPDEST", "path": "0", "offset": [24292, 24332], "fn": "CurveRewards.withdraw"}, "1305": {"op": "PUSH2", "value": "0x521", "path": "0", "offset": [24342, 24364], "fn": "CurveRewards.withdraw", "statement": 4}, "1308": {"op": "DUP3", "path": "0", "offset": [24357, 24363], "fn": "CurveRewards.withdraw"}, "1309": {"op": "PUSH2", "value": "0xBEB", "path": "0", "offset": [24342, 24356], "fn": "CurveRewards.withdraw"}, "1312": {"op": "JUMP", "jump": "i", "path": "0", "offset": [24342, 24364], "fn": "CurveRewards.withdraw"}, "1313": {"op": "JUMPDEST", "path": "0", "offset": [24342, 24364], "fn": "CurveRewards.withdraw"}, "1314": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [24379, 24408], "fn": "CurveRewards.withdraw", "statement": 5}, "1316": {"op": "DUP1", "path": "0", "offset": [24379, 24408], "fn": "CurveRewards.withdraw"}, "1317": {"op": "MLOAD", "path": "0", "offset": [24379, 24408], "fn": "CurveRewards.withdraw"}, "1318": {"op": "DUP4", "path": "0", "offset": [24379, 24408], "fn": "CurveRewards.withdraw"}, "1319": {"op": "DUP2", "path": "0", "offset": [24379, 24408], "fn": "CurveRewards.withdraw"}, "1320": {"op": "MSTORE", "path": "0", "offset": [24379, 24408], "fn": "CurveRewards.withdraw"}, "1321": {"op": "SWAP1", "path": "0", "offset": [24379, 24408], "fn": "CurveRewards.withdraw"}, "1322": {"op": "MLOAD", "path": "0", "offset": [24379, 24408], "fn": "CurveRewards.withdraw"}, "1323": {"op": "CALLER", "path": "0", "offset": [24389, 24399], "fn": "CurveRewards.withdraw"}, "1324": {"op": "SWAP2", "path": "0", "offset": [24389, 24399], "fn": "CurveRewards.withdraw"}, "1325": {"op": "PUSH32", "value": "0x7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5", "path": "0", "offset": [24379, 24408], "fn": "CurveRewards.withdraw"}, "1358": {"op": "SWAP2", "path": "0", "offset": [24379, 24408], "fn": "CurveRewards.withdraw"}, "1359": {"op": "SWAP1", "path": "0", "offset": [24379, 24408], "fn": "CurveRewards.withdraw"}, "1360": {"op": "DUP2", "path": "0", "offset": [24379, 24408], "fn": "CurveRewards.withdraw"}, "1361": {"op": "SWAP1", "path": "0", "offset": [24379, 24408], "fn": "CurveRewards.withdraw"}, "1362": {"op": "SUB", "path": "0", "offset": [24379, 24408], "fn": "CurveRewards.withdraw"}, "1363": {"op": "PUSH1", "value": "0x20", "path": "0", "offset": [24379, 24408], "fn": "CurveRewards.withdraw"}, "1365": {"op": "ADD", "path": "0", "offset": [24379, 24408], "fn": "CurveRewards.withdraw"}, "1366": {"op": "SWAP1", "path": "0", "offset": [24379, 24408], "fn": "CurveRewards.withdraw"}, "1367": {"op": "LOG2", "path": "0", "offset": [24379, 24408], "fn": "CurveRewards.withdraw"}, "1368": {"op": "POP", "path": "0", "offset": [24216, 24415], "fn": "CurveRewards.withdraw"}, "1369": {"op": "POP", "path": "0", "offset": [24216, 24415], "fn": "CurveRewards.withdraw"}, "1370": {"op": "JUMP", "jump": "o", "path": "0", "offset": [24216, 24415], "fn": "CurveRewards.withdraw"}, "1371": {"op": "JUMPDEST", "path": "0", "offset": [24804, 25377], "fn": "CurveRewards.notifyRewardAmount"}, "1372": {"op": "PUSH1", "value": "0x4", "path": "0", "offset": [20907, 20925]}, "1374": {"op": "SLOAD", "path": "0", "offset": [20907, 20925], "fn": "CurveRewards.notifyRewardAmount"}, "1375": {"op": "PUSH1", "value": "0x1"}, "1377": {"op": "PUSH1", "value": "0x1"}, "1379": {"op": "PUSH1", "value": "0xA0"}, "1381": {"op": "SHL"}, "1382": {"op": "SUB"}, "1383": {"op": "AND", "path": "0", "offset": [20907, 20925]}, "1384": {"op": "PUSH2", "value": "0x56F", "path": "0", "offset": [20891, 20903]}, "1387": {"op": "PUSH2", "value": "0xC4C", "path": "0", "offset": [20891, 20901]}, "1390": {"op": "JUMP", "jump": "i", "path": "0", "offset": [20891, 20903]}, "1391": {"op": "JUMPDEST", "path": "0", "offset": [20891, 20903], "fn": "CurveRewards.notifyRewardAmount"}, "1392": {"op": "PUSH1", "value": "0x1"}, "1394": {"op": "PUSH1", "value": "0x1"}, "1396": {"op": "PUSH1", "value": "0xA0"}, "1398": {"op": "SHL"}, "1399": {"op": "SUB"}, "1400": {"op": "AND", "path": "0", "offset": [20891, 20925]}, "1401": {"op": "EQ", "path": "0", "offset": [20891, 20925], "fn": "CurveRewards.notifyRewardAmount", "branch": 53}, "1402": {"op": "PUSH2", "value": "0x5B4", "path": "0", "offset": [20883, 20963]}, "1405": {"op": "JUMPI", "path": "0", "offset": [20883, 20963], "branch": 53}, "1406": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [20883, 20963], "fn": "CurveRewards.notifyRewardAmount"}, "1408": {"op": "MLOAD", "path": "0", "offset": [20883, 20963], "fn": "CurveRewards.notifyRewardAmount"}, "1409": {"op": "PUSH3", "value": "0x461BCD"}, "1413": {"op": "PUSH1", "value": "0xE5"}, "1415": {"op": "SHL"}, "1416": {"op": "DUP2", "path": "0", "offset": [20883, 20963]}, "1417": {"op": "MSTORE", "path": "0", "offset": [20883, 20963], "fn": "CurveRewards.notifyRewardAmount"}, "1418": {"op": "PUSH1", "value": "0x4", "path": "0", "offset": [20883, 20963], "fn": "CurveRewards.notifyRewardAmount"}, "1420": {"op": "ADD", "path": "0", "offset": [20883, 20963], "fn": "CurveRewards.notifyRewardAmount"}, "1421": {"op": "DUP1", "path": "0", "offset": [20883, 20963], "fn": "CurveRewards.notifyRewardAmount"}, "1422": {"op": "DUP1", "path": "0", "offset": [20883, 20963], "fn": "CurveRewards.notifyRewardAmount"}, "1423": {"op": "PUSH1", "value": "0x20", "path": "0", "offset": [20883, 20963], "fn": "CurveRewards.notifyRewardAmount"}, "1425": {"op": "ADD", "path": "0", "offset": [20883, 20963], "fn": "CurveRewards.notifyRewardAmount"}, "1426": {"op": "DUP3", "path": "0", "offset": [20883, 20963], "fn": "CurveRewards.notifyRewardAmount"}, "1427": {"op": "DUP2", "path": "0", "offset": [20883, 20963], "fn": "CurveRewards.notifyRewardAmount"}, "1428": {"op": "SUB", "path": "0", "offset": [20883, 20963], "fn": "CurveRewards.notifyRewardAmount"}, "1429": {"op": "DUP3", "path": "0", "offset": [20883, 20963], "fn": "CurveRewards.notifyRewardAmount"}, "1430": {"op": "MSTORE", "path": "0", "offset": [20883, 20963], "fn": "CurveRewards.notifyRewardAmount"}, "1431": {"op": "PUSH1", "value": "0x21", "path": "0", "offset": [20883, 20963], "fn": "CurveRewards.notifyRewardAmount"}, "1433": {"op": "DUP2", "path": "0", "offset": [20883, 20963], "fn": "CurveRewards.notifyRewardAmount"}, "1434": {"op": "MSTORE", "path": "0", "offset": [20883, 20963], "fn": "CurveRewards.notifyRewardAmount"}, "1435": {"op": "PUSH1", "value": "0x20", "path": "0", "offset": [20883, 20963], "fn": "CurveRewards.notifyRewardAmount"}, "1437": {"op": "ADD", "path": "0", "offset": [20883, 20963], "fn": "CurveRewards.notifyRewardAmount"}, "1438": {"op": "DUP1", "path": "0", "offset": [20883, 20963], "fn": "CurveRewards.notifyRewardAmount"}, "1439": {"op": "PUSH2", "value": "0x1158", "path": "0", "offset": [20883, 20963], "fn": "CurveRewards.notifyRewardAmount"}, "1442": {"op": "PUSH1", "value": "0x21", "path": "0", "offset": [20883, 20963], "fn": "CurveRewards.notifyRewardAmount"}, "1444": {"op": "SWAP2", "path": "0", "offset": [20883, 20963], "fn": "CurveRewards.notifyRewardAmount"}, "1445": {"op": "CODECOPY", "path": "0", "offset": [20883, 20963], "fn": "CurveRewards.notifyRewardAmount"}, "1446": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [20883, 20963], "fn": "CurveRewards.notifyRewardAmount"}, "1448": {"op": "ADD", "path": "0", "offset": [20883, 20963], "fn": "CurveRewards.notifyRewardAmount"}, "1449": {"op": "SWAP2", "path": "0", "offset": [20883, 20963], "fn": "CurveRewards.notifyRewardAmount"}, "1450": {"op": "POP", "path": "0", "offset": [20883, 20963], "fn": "CurveRewards.notifyRewardAmount"}, "1451": {"op": "POP", "path": "0", "offset": [20883, 20963], "fn": "CurveRewards.notifyRewardAmount"}, "1452": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [20883, 20963], "fn": "CurveRewards.notifyRewardAmount"}, "1454": {"op": "MLOAD", "path": "0", "offset": [20883, 20963], "fn": "CurveRewards.notifyRewardAmount"}, "1455": {"op": "DUP1", "path": "0", "offset": [20883, 20963], "fn": "CurveRewards.notifyRewardAmount"}, "1456": {"op": "SWAP2", "path": "0", "offset": [20883, 20963], "fn": "CurveRewards.notifyRewardAmount"}, "1457": {"op": "SUB", "path": "0", "offset": [20883, 20963], "fn": "CurveRewards.notifyRewardAmount"}, "1458": {"op": "SWAP1", "path": "0", "offset": [20883, 20963], "fn": "CurveRewards.notifyRewardAmount"}, "1459": {"op": "REVERT", "path": "0", "offset": [20883, 20963], "fn": "CurveRewards.notifyRewardAmount"}, "1460": {"op": "JUMPDEST", "path": "0", "offset": [20883, 20963], "fn": "CurveRewards.notifyRewardAmount"}, "1461": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [24925, 24926], "fn": "CurveRewards.notifyRewardAmount"}, "1463": {"op": "PUSH2", "value": "0x5BE", "path": "0", "offset": [22745, 22761]}, "1466": {"op": "PUSH2", "value": "0x9AF", "path": "0", "offset": [22745, 22759]}, "1469": {"op": "JUMP", "jump": "i", "path": "0", "offset": [22745, 22761]}, "1470": {"op": "JUMPDEST", "path": "0", "offset": [22745, 22761], "fn": "CurveRewards.notifyRewardAmount"}, "1471": {"op": "PUSH1", "value": "0x9", "path": "0", "offset": [22722, 22742]}, "1473": {"op": "SSTORE", "path": "0", "offset": [22722, 22761]}, "1474": {"op": "PUSH2", "value": "0x5C9", "path": "0", "offset": [22788, 22814]}, "1477": {"op": "PUSH2", "value": "0x86B", "path": "0", "offset": [22788, 22812]}, "1480": {"op": "JUMP", "jump": "i", "path": "0", "offset": [22788, 22814]}, "1481": {"op": "JUMPDEST", "path": "0", "offset": [22788, 22814], "fn": "CurveRewards.notifyRewardAmount"}, "1482": {"op": "PUSH1", "value": "0x8", "path": "0", "offset": [22771, 22785]}, "1484": {"op": "SSTORE", "path": "0", "offset": [22771, 22814]}, "1485": {"op": "PUSH1", "value": "0x1"}, "1487": {"op": "PUSH1", "value": "0x1"}, "1489": {"op": "PUSH1", "value": "0xA0"}, "1491": {"op": "SHL"}, "1492": {"op": "SUB"}, "1493": {"op": "DUP2", "path": "0", "offset": [22828, 22849]}, "1494": {"op": "AND", "path": "0", "offset": [22828, 22849], "fn": "CurveRewards.notifyRewardAmount"}, "1495": {"op": "ISZERO", "path": "0", "offset": [22828, 22849], "fn": "CurveRewards.notifyRewardAmount"}, "1496": {"op": "PUSH2", "value": "0x610", "path": "0", "offset": [22824, 22978]}, "1499": {"op": "JUMPI", "path": "0", "offset": [22824, 22978]}, "1500": {"op": "PUSH2", "value": "0x5E4", "path": "0", "offset": [22884, 22899]}, "1503": {"op": "DUP2", "path": "0", "offset": [22891, 22898]}, "1504": {"op": "PUSH2", "value": "0x353", "path": "0", "offset": [22884, 22890]}, "1507": {"op": "JUMP", "jump": "i", "path": "0", "offset": [22884, 22899]}, "1508": {"op": "JUMPDEST", "path": "0", "offset": [22884, 22899], "fn": "CurveRewards.notifyRewardAmount"}, "1509": {"op": "PUSH1", "value": "0x1"}, "1511": {"op": "PUSH1", "value": "0x1"}, "1513": {"op": "PUSH1", "value": "0xA0"}, "1515": {"op": "SHL"}, "1516": {"op": "SUB"}, "1517": {"op": "DUP3", "path": "0", "offset": [22865, 22881]}, "1518": {"op": "AND", "path": "0", "offset": [22865, 22881], "fn": "CurveRewards.notifyRewardAmount"}, "1519": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [22865, 22881], "fn": "CurveRewards.notifyRewardAmount"}, "1521": {"op": "SWAP1", "path": "0", "offset": [22865, 22881], "fn": "CurveRewards.notifyRewardAmount"}, "1522": {"op": "DUP2", "path": "0", "offset": [22865, 22881], "fn": "CurveRewards.notifyRewardAmount"}, "1523": {"op": "MSTORE", "path": "0", "offset": [22865, 22881], "fn": "CurveRewards.notifyRewardAmount"}, "1524": {"op": "PUSH1", "value": "0xB", "path": "0", "offset": [22865, 22872]}, "1526": {"op": "PUSH1", "value": "0x20", "path": "0", "offset": [22865, 22881]}, "1528": {"op": "SWAP1", "path": "0", "offset": [22865, 22881], "fn": "CurveRewards.notifyRewardAmount"}, "1529": {"op": "DUP2", "path": "0", "offset": [22865, 22881], "fn": "CurveRewards.notifyRewardAmount"}, "1530": {"op": "MSTORE", "path": "0", "offset": [22865, 22881], "fn": "CurveRewards.notifyRewardAmount"}, "1531": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [22865, 22881], "fn": "CurveRewards.notifyRewardAmount"}, "1533": {"op": "DUP1", "path": "0", "offset": [22865, 22881], "fn": "CurveRewards.notifyRewardAmount"}, "1534": {"op": "DUP4", "path": "0", "offset": [22865, 22881], "fn": "CurveRewards.notifyRewardAmount"}, "1535": {"op": "KECCAK256", "path": "0", "offset": [22865, 22881], "fn": "CurveRewards.notifyRewardAmount"}, "1536": {"op": "SWAP4", "path": "0", "offset": [22865, 22899]}, "1537": {"op": "SWAP1", "path": "0", "offset": [22865, 22899], "fn": "CurveRewards.notifyRewardAmount"}, "1538": {"op": "SWAP4", "path": "0", "offset": [22865, 22899], "fn": "CurveRewards.notifyRewardAmount"}, "1539": {"op": "SSTORE", "path": "0", "offset": [22865, 22899], "fn": "CurveRewards.notifyRewardAmount"}, "1540": {"op": "PUSH1", "value": "0x9", "path": "0", "offset": [22947, 22967]}, "1542": {"op": "SLOAD", "path": "0", "offset": [22947, 22967], "fn": "CurveRewards.notifyRewardAmount"}, "1543": {"op": "PUSH1", "value": "0xA", "path": "0", "offset": [22913, 22935]}, "1545": {"op": "SWAP1", "path": "0", "offset": [22913, 22944]}, "1546": {"op": "SWAP2", "path": "0", "offset": [22913, 22944], "fn": "CurveRewards.notifyRewardAmount"}, "1547": {"op": "MSTORE", "path": "0", "offset": [22913, 22944], "fn": "CurveRewards.notifyRewardAmount"}, "1548": {"op": "SWAP2", "path": "0", "offset": [22913, 22944], "fn": "CurveRewards.notifyRewardAmount"}, "1549": {"op": "SWAP1", "path": "0", "offset": [22913, 22944], "fn": "CurveRewards.notifyRewardAmount"}, "1550": {"op": "KECCAK256", "path": "0", "offset": [22913, 22944], "fn": "CurveRewards.notifyRewardAmount"}, "1551": {"op": "SSTORE", "path": "0", "offset": [22913, 22967]}, "1552": {"op": "JUMPDEST", "path": "0", "offset": [22824, 22978]}, "1553": {"op": "PUSH1", "value": "0x6", "path": "0", "offset": [24966, 24978], "fn": "CurveRewards.notifyRewardAmount"}, "1555": {"op": "SLOAD", "path": "0", "offset": [24966, 24978], "fn": "CurveRewards.notifyRewardAmount"}, "1556": {"op": "TIMESTAMP", "path": "0", "offset": [24947, 24962], "fn": "CurveRewards.notifyRewardAmount"}, "1557": {"op": "LT", "path": "0", "offset": [24947, 24978], "fn": "CurveRewards.notifyRewardAmount", "branch": 54}, "1558": {"op": "PUSH2", "value": "0x634", "path": "0", "offset": [24943, 25241], "fn": "CurveRewards.notifyRewardAmount"}, "1561": {"op": "JUMPI", "path": "0", "offset": [24943, 25241], "fn": "CurveRewards.notifyRewardAmount", "branch": 54}, "1562": {"op": "PUSH2", "value": "0x62C", "path": "0", "offset": [25007, 25027], "fn": "CurveRewards.notifyRewardAmount", "statement": 6}, "1565": {"op": "DUP3", "path": "0", "offset": [25007, 25013], "fn": "CurveRewards.notifyRewardAmount"}, "1566": {"op": "PUSH3", "value": "0x93A80", "path": "0", "offset": [22185, 22191]}, "1570": {"op": "PUSH4", "value": "0xFFFFFFFF", "path": "0", "offset": [25007, 25027], "fn": "CurveRewards.notifyRewardAmount"}, "1575": {"op": "PUSH2", "value": "0xB4F", "path": "0", "offset": [25007, 25017], "fn": "CurveRewards.notifyRewardAmount"}, "1578": {"op": "AND", "path": "0", "offset": [25007, 25027], "fn": "CurveRewards.notifyRewardAmount"}, "1579": {"op": "JUMP", "jump": "i", "path": "0", "offset": [25007, 25027], "fn": "CurveRewards.notifyRewardAmount"}, "1580": {"op": "JUMPDEST", "path": "0", "offset": [25007, 25027], "fn": "CurveRewards.notifyRewardAmount"}, "1581": {"op": "PUSH1", "value": "0x7", "path": "0", "offset": [24994, 25004], "fn": "CurveRewards.notifyRewardAmount"}, "1583": {"op": "SSTORE", "path": "0", "offset": [24994, 25027], "fn": "CurveRewards.notifyRewardAmount"}, "1584": {"op": "PUSH2", "value": "0x682", "path": "0", "offset": [24943, 25241], "fn": "CurveRewards.notifyRewardAmount"}, "1587": {"op": "JUMP", "path": "0", "offset": [24943, 25241], "fn": "CurveRewards.notifyRewardAmount"}, "1588": {"op": "JUMPDEST", "path": "0", "offset": [24943, 25241], "fn": "CurveRewards.notifyRewardAmount"}, "1589": {"op": "PUSH1", "value": "0x6", "path": "0", "offset": [25078, 25090], "fn": "CurveRewards.notifyRewardAmount"}, "1591": {"op": "SLOAD", "path": "0", "offset": [25078, 25090], "fn": "CurveRewards.notifyRewardAmount"}, "1592": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [25058, 25075], "fn": "CurveRewards.notifyRewardAmount"}, "1594": {"op": "SWAP1", "path": "0", "offset": [25058, 25075], "fn": "CurveRewards.notifyRewardAmount"}, "1595": {"op": "PUSH2", "value": "0x64A", "path": "0", "offset": [25078, 25111], "fn": "CurveRewards.notifyRewardAmount"}, "1598": {"op": "SWAP1", "path": "0", "offset": [25078, 25111], "fn": "CurveRewards.notifyRewardAmount"}, "1599": {"op": "TIMESTAMP", "path": "0", "offset": [25095, 25110], "fn": "CurveRewards.notifyRewardAmount"}, "1600": {"op": "PUSH4", "value": "0xFFFFFFFF", "path": "0", "offset": [25078, 25111], "fn": "CurveRewards.notifyRewardAmount"}, "1605": {"op": "PUSH2", "value": "0xAAD", "path": "0", "offset": [25078, 25094], "fn": "CurveRewards.notifyRewardAmount"}, "1608": {"op": "AND", "path": "0", "offset": [25078, 25111], "fn": "CurveRewards.notifyRewardAmount"}, "1609": {"op": "JUMP", "jump": "i", "path": "0", "offset": [25078, 25111], "fn": "CurveRewards.notifyRewardAmount"}, "1610": {"op": "JUMPDEST", "path": "0", "offset": [25078, 25111], "fn": "CurveRewards.notifyRewardAmount"}, "1611": {"op": "SWAP1", "path": "0", "offset": [25058, 25111], "fn": "CurveRewards.notifyRewardAmount"}, "1612": {"op": "POP", "path": "0", "offset": [25058, 25111], "fn": "CurveRewards.notifyRewardAmount"}, "1613": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [25125, 25141], "fn": "CurveRewards.notifyRewardAmount"}, "1615": {"op": "PUSH2", "value": "0x663", "path": "0", "offset": [25144, 25169], "fn": "CurveRewards.notifyRewardAmount"}, "1618": {"op": "PUSH1", "value": "0x7", "path": "0", "offset": [25158, 25168], "fn": "CurveRewards.notifyRewardAmount"}, "1620": {"op": "SLOAD", "path": "0", "offset": [25158, 25168], "fn": "CurveRewards.notifyRewardAmount"}, "1621": {"op": "DUP4", "path": "0", "offset": [25144, 25153], "fn": "CurveRewards.notifyRewardAmount"}, "1622": {"op": "PUSH2", "value": "0xAF6", "path": "0", "offset": [25144, 25157], "fn": "CurveRewards.notifyRewardAmount"}, "1625": {"op": "SWAP1", "path": "0", "offset": [25144, 25157], "fn": "CurveRewards.notifyRewardAmount"}, "1626": {"op": "SWAP2", "path": "0", "offset": [25144, 25169], "fn": "CurveRewards.notifyRewardAmount"}, "1627": {"op": "SWAP1", "path": "0", "offset": [25144, 25169], "fn": "CurveRewards.notifyRewardAmount"}, "1628": {"op": "PUSH4", "value": "0xFFFFFFFF", "path": "0", "offset": [25144, 25169], "fn": "CurveRewards.notifyRewardAmount"}, "1633": {"op": "AND", "path": "0", "offset": [25144, 25169], "fn": "CurveRewards.notifyRewardAmount"}, "1634": {"op": "JUMP", "jump": "i", "path": "0", "offset": [25144, 25169], "fn": "CurveRewards.notifyRewardAmount"}, "1635": {"op": "JUMPDEST", "path": "0", "offset": [25144, 25169], "fn": "CurveRewards.notifyRewardAmount"}, "1636": {"op": "SWAP1", "path": "0", "offset": [25125, 25169], "fn": "CurveRewards.notifyRewardAmount"}, "1637": {"op": "POP"}, "1638": {"op": "PUSH2", "value": "0x67C", "path": "0", "offset": [25196, 25230], "fn": "CurveRewards.notifyRewardAmount", "statement": 7}, "1641": {"op": "PUSH3", "value": "0x93A80", "path": "0", "offset": [22185, 22191]}, "1645": {"op": "PUSH2", "value": "0x3BB", "path": "0", "offset": [25196, 25216], "fn": "CurveRewards.notifyRewardAmount"}, "1648": {"op": "DUP7", "path": "0", "offset": [25196, 25202], "fn": "CurveRewards.notifyRewardAmount"}, "1649": {"op": "DUP5", "path": "0", "offset": [25125, 25169], "fn": "CurveRewards.notifyRewardAmount"}, "1650": {"op": "PUSH4", "value": "0xFFFFFFFF", "path": "0", "offset": [25196, 25216], "fn": "CurveRewards.notifyRewardAmount"}, "1655": {"op": "PUSH2", "value": "0xB91", "path": "0", "offset": [25196, 25206], "fn": "CurveRewards.notifyRewardAmount"}, "1658": {"op": "AND", "path": "0", "offset": [25196, 25216], "fn": "CurveRewards.notifyRewardAmount"}, "1659": {"op": "JUMP", "jump": "i", "path": "0", "offset": [25196, 25216], "fn": "CurveRewards.notifyRewardAmount"}, "1660": {"op": "JUMPDEST", "path": "0", "offset": [25196, 25230], "fn": "CurveRewards.notifyRewardAmount"}, "1661": {"op": "PUSH1", "value": "0x7", "path": "0", "offset": [25183, 25193], "fn": "CurveRewards.notifyRewardAmount"}, "1663": {"op": "SSTORE", "path": "0", "offset": [25183, 25230], "fn": "CurveRewards.notifyRewardAmount"}, "1664": {"op": "POP"}, "1665": {"op": "POP"}, "1666": {"op": "JUMPDEST", "path": "0", "offset": [24943, 25241], "fn": "CurveRewards.notifyRewardAmount"}, "1667": {"op": "TIMESTAMP", "path": "0", "offset": [25267, 25282], "fn": "CurveRewards.notifyRewardAmount", "statement": 8}, "1668": {"op": "PUSH1", "value": "0x8", "path": "0", "offset": [25250, 25264], "fn": "CurveRewards.notifyRewardAmount"}, "1670": {"op": "DUP2", "path": "0", "offset": [25250, 25282], "fn": "CurveRewards.notifyRewardAmount"}, "1671": {"op": "SWAP1", "path": "0", "offset": [25250, 25282], "fn": "CurveRewards.notifyRewardAmount"}, "1672": {"op": "SSTORE", "path": "0", "offset": [25250, 25282], "fn": "CurveRewards.notifyRewardAmount"}, "1673": {"op": "PUSH2", "value": "0x69B", "path": "0", "offset": [25307, 25336], "fn": "CurveRewards.notifyRewardAmount", "statement": 9}, "1676": {"op": "SWAP1", "path": "0", "offset": [25307, 25336], "fn": "CurveRewards.notifyRewardAmount"}, "1677": {"op": "PUSH3", "value": "0x93A80", "path": "0", "offset": [22185, 22191]}, "1681": {"op": "PUSH4", "value": "0xFFFFFFFF", "path": "0", "offset": [25307, 25336], "fn": "CurveRewards.notifyRewardAmount"}, "1686": {"op": "PUSH2", "value": "0xB91", "path": "0", "offset": [25307, 25326], "fn": "CurveRewards.notifyRewardAmount"}, "1689": {"op": "AND", "path": "0", "offset": [25307, 25336], "fn": "CurveRewards.notifyRewardAmount"}, "1690": {"op": "JUMP", "jump": "i", "path": "0", "offset": [25307, 25336], "fn": "CurveRewards.notifyRewardAmount"}, "1691": {"op": "JUMPDEST", "path": "0", "offset": [25307, 25336], "fn": "CurveRewards.notifyRewardAmount"}, "1692": {"op": "PUSH1", "value": "0x6", "path": "0", "offset": [25292, 25304], "fn": "CurveRewards.notifyRewardAmount"}, "1694": {"op": "SSTORE", "path": "0", "offset": [25292, 25336], "fn": "CurveRewards.notifyRewardAmount"}, "1695": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [25351, 25370], "fn": "CurveRewards.notifyRewardAmount", "statement": 10}, "1697": {"op": "DUP1", "path": "0", "offset": [25351, 25370], "fn": "CurveRewards.notifyRewardAmount"}, "1698": {"op": "MLOAD", "path": "0", "offset": [25351, 25370], "fn": "CurveRewards.notifyRewardAmount"}, "1699": {"op": "DUP4", "path": "0", "offset": [25351, 25370], "fn": "CurveRewards.notifyRewardAmount"}, "1700": {"op": "DUP2", "path": "0", "offset": [25351, 25370], "fn": "CurveRewards.notifyRewardAmount"}, "1701": {"op": "MSTORE", "path": "0", "offset": [25351, 25370], "fn": "CurveRewards.notifyRewardAmount"}, "1702": {"op": "SWAP1", "path": "0", "offset": [25351, 25370], "fn": "CurveRewards.notifyRewardAmount"}, "1703": {"op": "MLOAD", "path": "0", "offset": [25351, 25370], "fn": "CurveRewards.notifyRewardAmount"}, "1704": {"op": "PUSH32", "value": "0xDE88A922E0D3B88B24E9623EFEB464919C6BF9F66857A65E2BFCF2CE87A9433D", "path": "0", "offset": [25351, 25370], "fn": "CurveRewards.notifyRewardAmount"}, "1737": {"op": "SWAP2", "path": "0", "offset": [25351, 25370], "fn": "CurveRewards.notifyRewardAmount"}, "1738": {"op": "DUP2", "path": "0", "offset": [25351, 25370], "fn": "CurveRewards.notifyRewardAmount"}, "1739": {"op": "SWAP1", "path": "0", "offset": [25351, 25370], "fn": "CurveRewards.notifyRewardAmount"}, "1740": {"op": "SUB", "path": "0", "offset": [25351, 25370], "fn": "CurveRewards.notifyRewardAmount"}, "1741": {"op": "PUSH1", "value": "0x20", "path": "0", "offset": [25351, 25370], "fn": "CurveRewards.notifyRewardAmount"}, "1743": {"op": "ADD", "path": "0", "offset": [25351, 25370], "fn": "CurveRewards.notifyRewardAmount"}, "1744": {"op": "SWAP1", "path": "0", "offset": [25351, 25370], "fn": "CurveRewards.notifyRewardAmount"}, "1745": {"op": "LOG1", "path": "0", "offset": [25351, 25370], "fn": "CurveRewards.notifyRewardAmount"}, "1746": {"op": "POP", "path": "0", "offset": [20973, 20974]}, "1747": {"op": "POP", "path": "0", "offset": [24804, 25377], "fn": "CurveRewards.notifyRewardAmount"}, "1748": {"op": "JUMP", "jump": "o", "path": "0", "offset": [24804, 25377], "fn": "CurveRewards.notifyRewardAmount"}, "1749": {"op": "JUMPDEST", "path": "0", "offset": [24521, 24798], "fn": "CurveRewards.getReward"}, "1750": {"op": "CALLER", "path": "0", "offset": [24562, 24572], "fn": "CurveRewards.getReward"}, "1751": {"op": "PUSH2", "value": "0x6DE", "path": "0", "offset": [22745, 22761]}, "1754": {"op": "PUSH2", "value": "0x9AF", "path": "0", "offset": [22745, 22759]}, "1757": {"op": "JUMP", "jump": "i", "path": "0", "offset": [22745, 22761]}, "1758": {"op": "JUMPDEST", "path": "0", "offset": [22745, 22761], "fn": "CurveRewards.getReward"}, "1759": {"op": "PUSH1", "value": "0x9", "path": "0", "offset": [22722, 22742]}, "1761": {"op": "SSTORE", "path": "0", "offset": [22722, 22761]}, "1762": {"op": "PUSH2", "value": "0x6E9", "path": "0", "offset": [22788, 22814]}, "1765": {"op": "PUSH2", "value": "0x86B", "path": "0", "offset": [22788, 22812]}, "1768": {"op": "JUMP", "jump": "i", "path": "0", "offset": [22788, 22814]}, "1769": {"op": "JUMPDEST", "path": "0", "offset": [22788, 22814], "fn": "CurveRewards.getReward"}, "1770": {"op": "PUSH1", "value": "0x8", "path": "0", "offset": [22771, 22785]}, "1772": {"op": "SSTORE", "path": "0", "offset": [22771, 22814]}, "1773": {"op": "PUSH1", "value": "0x1"}, "1775": {"op": "PUSH1", "value": "0x1"}, "1777": {"op": "PUSH1", "value": "0xA0"}, "1779": {"op": "SHL"}, "1780": {"op": "SUB"}, "1781": {"op": "DUP2", "path": "0", "offset": [22828, 22849]}, "1782": {"op": "AND", "path": "0", "offset": [22828, 22849], "fn": "CurveRewards.getReward"}, "1783": {"op": "ISZERO", "path": "0", "offset": [22828, 22849], "fn": "CurveRewards.getReward"}, "1784": {"op": "PUSH2", "value": "0x730", "path": "0", "offset": [22824, 22978]}, "1787": {"op": "JUMPI", "path": "0", "offset": [22824, 22978]}, "1788": {"op": "PUSH2", "value": "0x704", "path": "0", "offset": [22884, 22899]}, "1791": {"op": "DUP2", "path": "0", "offset": [22891, 22898]}, "1792": {"op": "PUSH2", "value": "0x353", "path": "0", "offset": [22884, 22890]}, "1795": {"op": "JUMP", "jump": "i", "path": "0", "offset": [22884, 22899]}, "1796": {"op": "JUMPDEST", "path": "0", "offset": [22884, 22899], "fn": "CurveRewards.getReward"}, "1797": {"op": "PUSH1", "value": "0x1"}, "1799": {"op": "PUSH1", "value": "0x1"}, "1801": {"op": "PUSH1", "value": "0xA0"}, "1803": {"op": "SHL"}, "1804": {"op": "SUB"}, "1805": {"op": "DUP3", "path": "0", "offset": [22865, 22881]}, "1806": {"op": "AND", "path": "0", "offset": [22865, 22881], "fn": "CurveRewards.getReward"}, "1807": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [22865, 22881], "fn": "CurveRewards.getReward"}, "1809": {"op": "SWAP1", "path": "0", "offset": [22865, 22881], "fn": "CurveRewards.getReward"}, "1810": {"op": "DUP2", "path": "0", "offset": [22865, 22881], "fn": "CurveRewards.getReward"}, "1811": {"op": "MSTORE", "path": "0", "offset": [22865, 22881], "fn": "CurveRewards.getReward"}, "1812": {"op": "PUSH1", "value": "0xB", "path": "0", "offset": [22865, 22872]}, "1814": {"op": "PUSH1", "value": "0x20", "path": "0", "offset": [22865, 22881]}, "1816": {"op": "SWAP1", "path": "0", "offset": [22865, 22881], "fn": "CurveRewards.getReward"}, "1817": {"op": "DUP2", "path": "0", "offset": [22865, 22881], "fn": "CurveRewards.getReward"}, "1818": {"op": "MSTORE", "path": "0", "offset": [22865, 22881], "fn": "CurveRewards.getReward"}, "1819": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [22865, 22881], "fn": "CurveRewards.getReward"}, "1821": {"op": "DUP1", "path": "0", "offset": [22865, 22881], "fn": "CurveRewards.getReward"}, "1822": {"op": "DUP4", "path": "0", "offset": [22865, 22881], "fn": "CurveRewards.getReward"}, "1823": {"op": "KECCAK256", "path": "0", "offset": [22865, 22881], "fn": "CurveRewards.getReward"}, "1824": {"op": "SWAP4", "path": "0", "offset": [22865, 22899]}, "1825": {"op": "SWAP1", "path": "0", "offset": [22865, 22899], "fn": "CurveRewards.getReward"}, "1826": {"op": "SWAP4", "path": "0", "offset": [22865, 22899], "fn": "CurveRewards.getReward"}, "1827": {"op": "SSTORE", "path": "0", "offset": [22865, 22899], "fn": "CurveRewards.getReward"}, "1828": {"op": "PUSH1", "value": "0x9", "path": "0", "offset": [22947, 22967]}, "1830": {"op": "SLOAD", "path": "0", "offset": [22947, 22967], "fn": "CurveRewards.getReward"}, "1831": {"op": "PUSH1", "value": "0xA", "path": "0", "offset": [22913, 22935]}, "1833": {"op": "SWAP1", "path": "0", "offset": [22913, 22944]}, "1834": {"op": "SWAP2", "path": "0", "offset": [22913, 22944], "fn": "CurveRewards.getReward"}, "1835": {"op": "MSTORE", "path": "0", "offset": [22913, 22944], "fn": "CurveRewards.getReward"}, "1836": {"op": "SWAP2", "path": "0", "offset": [22913, 22944], "fn": "CurveRewards.getReward"}, "1837": {"op": "SWAP1", "path": "0", "offset": [22913, 22944], "fn": "CurveRewards.getReward"}, "1838": {"op": "KECCAK256", "path": "0", "offset": [22913, 22944], "fn": "CurveRewards.getReward"}, "1839": {"op": "SSTORE", "path": "0", "offset": [22913, 22967]}, "1840": {"op": "JUMPDEST", "path": "0", "offset": [22824, 22978]}, "1841": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [24584, 24598], "fn": "CurveRewards.getReward"}, "1843": {"op": "PUSH2", "value": "0x73B", "path": "0", "offset": [24601, 24619], "fn": "CurveRewards.getReward"}, "1846": {"op": "CALLER", "path": "0", "offset": [24608, 24618], "fn": "CurveRewards.getReward"}, "1847": {"op": "PUSH2", "value": "0x353", "path": "0", "offset": [24601, 24607], "fn": "CurveRewards.getReward"}, "1850": {"op": "JUMP", "jump": "i", "path": "0", "offset": [24601, 24619], "fn": "CurveRewards.getReward"}, "1851": {"op": "JUMPDEST", "path": "0", "offset": [24601, 24619], "fn": "CurveRewards.getReward"}, "1852": {"op": "SWAP1", "path": "0", "offset": [24584, 24619], "fn": "CurveRewards.getReward"}, "1853": {"op": "POP"}, "1854": {"op": "DUP1", "path": "0", "offset": [24633, 24643], "fn": "CurveRewards.getReward"}, "1855": {"op": "ISZERO", "path": "0", "offset": [24633, 24643], "fn": "CurveRewards.getReward", "branch": 55}, "1856": {"op": "PUSH2", "value": "0x7A3", "path": "0", "offset": [24629, 24792], "fn": "CurveRewards.getReward"}, "1859": {"op": "JUMPI", "path": "0", "offset": [24629, 24792], "fn": "CurveRewards.getReward", "branch": 55}, "1860": {"op": "CALLER", "path": "0", "offset": [24667, 24677], "fn": "CurveRewards.getReward", "statement": 11}, "1861": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [24681, 24682], "fn": "CurveRewards.getReward"}, "1863": {"op": "DUP2", "path": "0", "offset": [24659, 24678], "fn": "CurveRewards.getReward"}, "1864": {"op": "DUP2", "path": "0", "offset": [24659, 24678], "fn": "CurveRewards.getReward"}, "1865": {"op": "MSTORE", "path": "0", "offset": [24659, 24678], "fn": "CurveRewards.getReward"}, "1866": {"op": "PUSH1", "value": "0xB", "path": "0", "offset": [24659, 24666], "fn": "CurveRewards.getReward"}, "1868": {"op": "PUSH1", "value": "0x20", "path": "0", "offset": [24659, 24678], "fn": "CurveRewards.getReward"}, "1870": {"op": "MSTORE", "path": "0", "offset": [24659, 24678], "fn": "CurveRewards.getReward"}, "1871": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [24659, 24678], "fn": "CurveRewards.getReward"}, "1873": {"op": "DUP2", "path": "0", "offset": [24659, 24678], "fn": "CurveRewards.getReward"}, "1874": {"op": "KECCAK256", "path": "0", "offset": [24659, 24678], "fn": "CurveRewards.getReward"}, "1875": {"op": "SSTORE", "path": "0", "offset": [24659, 24682], "fn": "CurveRewards.getReward"}, "1876": {"op": "PUSH1", "value": "0x5", "path": "0", "offset": [24696, 24699], "fn": "CurveRewards.getReward", "statement": 12}, "1878": {"op": "SLOAD", "path": "0", "offset": [24696, 24699], "fn": "CurveRewards.getReward"}, "1879": {"op": "PUSH2", "value": "0x76C", "path": "0", "offset": [24696, 24732], "fn": "CurveRewards.getReward"}, "1882": {"op": "SWAP2", "path": "0", "offset": [24696, 24732], "fn": "CurveRewards.getReward"}, "1883": {"op": "PUSH1", "value": "0x1"}, "1885": {"op": "PUSH1", "value": "0x1"}, "1887": {"op": "PUSH1", "value": "0xA0"}, "1889": {"op": "SHL"}, "1890": {"op": "SUB"}, "1891": {"op": "SWAP1", "path": "0", "offset": [24696, 24699], "fn": "CurveRewards.getReward"}, "1892": {"op": "SWAP2", "path": "0", "offset": [24696, 24699], "fn": "CurveRewards.getReward"}, "1893": {"op": "AND", "path": "0", "offset": [24696, 24699], "fn": "CurveRewards.getReward"}, "1894": {"op": "SWAP1", "path": "0", "offset": [24696, 24699], "fn": "CurveRewards.getReward"}, "1895": {"op": "DUP4", "path": "0", "offset": [24725, 24731], "fn": "CurveRewards.getReward"}, "1896": {"op": "PUSH2", "value": "0xC50", "path": "0", "offset": [24696, 24712], "fn": "CurveRewards.getReward"}, "1899": {"op": "JUMP", "jump": "i", "path": "0", "offset": [24696, 24732], "fn": "CurveRewards.getReward"}, "1900": {"op": "JUMPDEST", "path": "0", "offset": [24696, 24732], "fn": "CurveRewards.getReward"}, "1901": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [24751, 24781], "fn": "CurveRewards.getReward", "statement": 13}, "1903": {"op": "DUP1", "path": "0", "offset": [24751, 24781], "fn": "CurveRewards.getReward"}, "1904": {"op": "MLOAD", "path": "0", "offset": [24751, 24781], "fn": "CurveRewards.getReward"}, "1905": {"op": "DUP3", "path": "0", "offset": [24751, 24781], "fn": "CurveRewards.getReward"}, "1906": {"op": "DUP2", "path": "0", "offset": [24751, 24781], "fn": "CurveRewards.getReward"}, "1907": {"op": "MSTORE", "path": "0", "offset": [24751, 24781], "fn": "CurveRewards.getReward"}, "1908": {"op": "SWAP1", "path": "0", "offset": [24751, 24781], "fn": "CurveRewards.getReward"}, "1909": {"op": "MLOAD", "path": "0", "offset": [24751, 24781], "fn": "CurveRewards.getReward"}, "1910": {"op": "CALLER", "path": "0", "offset": [24762, 24772], "fn": "CurveRewards.getReward"}, "1911": {"op": "SWAP2", "path": "0", "offset": [24762, 24772], "fn": "CurveRewards.getReward"}, "1912": {"op": "PUSH32", "value": "0xE2403640BA68FED3A2F88B7557551D1993F84B99BB10FF833F0CF8DB0C5E0486", "path": "0", "offset": [24751, 24781], "fn": "CurveRewards.getReward"}, "1945": {"op": "SWAP2", "path": "0", "offset": [24751, 24781], "fn": "CurveRewards.getReward"}, "1946": {"op": "SWAP1", "path": "0", "offset": [24751, 24781], "fn": "CurveRewards.getReward"}, "1947": {"op": "DUP2", "path": "0", "offset": [24751, 24781], "fn": "CurveRewards.getReward"}, "1948": {"op": "SWAP1", "path": "0", "offset": [24751, 24781], "fn": "CurveRewards.getReward"}, "1949": {"op": "SUB", "path": "0", "offset": [24751, 24781], "fn": "CurveRewards.getReward"}, "1950": {"op": "PUSH1", "value": "0x20", "path": "0", "offset": [24751, 24781], "fn": "CurveRewards.getReward"}, "1952": {"op": "ADD", "path": "0", "offset": [24751, 24781], "fn": "CurveRewards.getReward"}, "1953": {"op": "SWAP1", "path": "0", "offset": [24751, 24781], "fn": "CurveRewards.getReward"}, "1954": {"op": "LOG2", "path": "0", "offset": [24751, 24781], "fn": "CurveRewards.getReward"}, "1955": {"op": "JUMPDEST", "path": "0", "offset": [24629, 24792], "fn": "CurveRewards.getReward"}, "1956": {"op": "POP", "path": "0", "offset": [22987, 22988]}, "1957": {"op": "POP", "path": "0", "offset": [24521, 24798], "fn": "CurveRewards.getReward"}, "1958": {"op": "JUMP", "jump": "o", "path": "0", "offset": [24521, 24798], "fn": "CurveRewards.getReward"}, "1959": {"op": "JUMPDEST", "path": "0", "offset": [21491, 21599], "fn": "LPTokenWrapper.balanceOf"}, "1960": {"op": "PUSH1", "value": "0x1"}, "1962": {"op": "PUSH1", "value": "0x1"}, "1964": {"op": "PUSH1", "value": "0xA0"}, "1966": {"op": "SHL"}, "1967": {"op": "SUB"}, "1968": {"op": "AND", "path": "0", "offset": [21574, 21592], "fn": "LPTokenWrapper.balanceOf", "statement": 14}, "1969": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [21548, 21555], "fn": "LPTokenWrapper.balanceOf"}, "1971": {"op": "SWAP1", "path": "0", "offset": [21574, 21592], "fn": "LPTokenWrapper.balanceOf"}, "1972": {"op": "DUP2", "path": "0", "offset": [21574, 21592], "fn": "LPTokenWrapper.balanceOf"}, "1973": {"op": "MSTORE", "path": "0", "offset": [21574, 21592], "fn": "LPTokenWrapper.balanceOf"}, "1974": {"op": "PUSH1", "value": "0x2", "path": "0", "offset": [21574, 21583], "fn": "LPTokenWrapper.balanceOf"}, "1976": {"op": "PUSH1", "value": "0x20", "path": "0", "offset": [21574, 21592], "fn": "LPTokenWrapper.balanceOf"}, "1978": {"op": "MSTORE", "path": "0", "offset": [21574, 21592], "fn": "LPTokenWrapper.balanceOf"}, "1979": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [21574, 21592], "fn": "LPTokenWrapper.balanceOf"}, "1981": {"op": "SWAP1", "path": "0", "offset": [21574, 21592], "fn": "LPTokenWrapper.balanceOf"}, "1982": {"op": "KECCAK256", "path": "0", "offset": [21574, 21592], "fn": "LPTokenWrapper.balanceOf"}, "1983": {"op": "SLOAD", "path": "0", "offset": [21574, 21592], "fn": "LPTokenWrapper.balanceOf"}, "1984": {"op": "SWAP1", "path": "0", "offset": [21574, 21592], "fn": "LPTokenWrapper.balanceOf"}, "1985": {"op": "JUMP", "jump": "o", "path": "0", "offset": [21491, 21599], "fn": "LPTokenWrapper.balanceOf"}, "1986": {"op": "JUMPDEST", "path": "0", "offset": [10378, 10515], "fn": "Ownable.renounceOwnership"}, "1987": {"op": "PUSH2", "value": "0x7CA", "path": "0", "offset": [9797, 9806]}, "1990": {"op": "PUSH2", "value": "0x89F", "path": "0", "offset": [9797, 9804]}, "1993": {"op": "JUMP", "jump": "i", "path": "0", "offset": [9797, 9806]}, "1994": {"op": "JUMPDEST", "path": "0", "offset": [9797, 9806], "fn": "Ownable.renounceOwnership"}, "1995": {"op": "PUSH2", "value": "0x81B", "path": "0", "offset": [9789, 9843]}, "1998": {"op": "JUMPI", "path": "0", "offset": [9789, 9843]}, "1999": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [9789, 9843], "fn": "Ownable.renounceOwnership"}, "2001": {"op": "DUP1", "path": "0", "offset": [9789, 9843], "fn": "Ownable.renounceOwnership"}, "2002": {"op": "MLOAD", "path": "0", "offset": [9789, 9843], "fn": "Ownable.renounceOwnership"}, "2003": {"op": "PUSH3", "value": "0x461BCD"}, "2007": {"op": "PUSH1", "value": "0xE5"}, "2009": {"op": "SHL"}, "2010": {"op": "DUP2", "path": "0", "offset": [9789, 9843]}, "2011": {"op": "MSTORE", "path": "0", "offset": [9789, 9843], "fn": "Ownable.renounceOwnership"}, "2012": {"op": "PUSH1", "value": "0x20", "path": "0", "offset": [9789, 9843], "fn": "Ownable.renounceOwnership"}, "2014": {"op": "PUSH1", "value": "0x4", "path": "0", "offset": [9789, 9843], "fn": "Ownable.renounceOwnership"}, "2016": {"op": "DUP3", "path": "0", "offset": [9789, 9843], "fn": "Ownable.renounceOwnership"}, "2017": {"op": "ADD", "path": "0", "offset": [9789, 9843], "fn": "Ownable.renounceOwnership"}, "2018": {"op": "DUP2", "path": "0", "offset": [9789, 9843], "fn": "Ownable.renounceOwnership"}, "2019": {"op": "SWAP1", "path": "0", "offset": [9789, 9843], "fn": "Ownable.renounceOwnership"}, "2020": {"op": "MSTORE", "path": "0", "offset": [9789, 9843], "fn": "Ownable.renounceOwnership"}, "2021": {"op": "PUSH1", "value": "0x24", "path": "0", "offset": [9789, 9843], "fn": "Ownable.renounceOwnership"}, "2023": {"op": "DUP3", "path": "0", "offset": [9789, 9843], "fn": "Ownable.renounceOwnership"}, "2024": {"op": "ADD", "path": "0", "offset": [9789, 9843], "fn": "Ownable.renounceOwnership"}, "2025": {"op": "MSTORE", "path": "0", "offset": [9789, 9843], "fn": "Ownable.renounceOwnership"}, "2026": {"op": "PUSH32", "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572", "path": "0", "offset": [9789, 9843], "fn": "Ownable.renounceOwnership"}, "2059": {"op": "PUSH1", "value": "0x44", "path": "0", "offset": [9789, 9843], "fn": "Ownable.renounceOwnership"}, "2061": {"op": "DUP3", "path": "0", "offset": [9789, 9843], "fn": "Ownable.renounceOwnership"}, "2062": {"op": "ADD", "path": "0", "offset": [9789, 9843], "fn": "Ownable.renounceOwnership"}, "2063": {"op": "MSTORE", "path": "0", "offset": [9789, 9843], "fn": "Ownable.renounceOwnership"}, "2064": {"op": "SWAP1", "path": "0", "offset": [9789, 9843], "fn": "Ownable.renounceOwnership"}, "2065": {"op": "MLOAD", "path": "0", "offset": [9789, 9843], "fn": "Ownable.renounceOwnership"}, "2066": {"op": "SWAP1", "path": "0", "offset": [9789, 9843], "fn": "Ownable.renounceOwnership"}, "2067": {"op": "DUP2", "path": "0", "offset": [9789, 9843], "fn": "Ownable.renounceOwnership"}, "2068": {"op": "SWAP1", "path": "0", "offset": [9789, 9843], "fn": "Ownable.renounceOwnership"}, "2069": {"op": "SUB", "path": "0", "offset": [9789, 9843], "fn": "Ownable.renounceOwnership"}, "2070": {"op": "PUSH1", "value": "0x64", "path": "0", "offset": [9789, 9843], "fn": "Ownable.renounceOwnership"}, "2072": {"op": "ADD", "path": "0", "offset": [9789, 9843], "fn": "Ownable.renounceOwnership"}, "2073": {"op": "SWAP1", "path": "0", "offset": [9789, 9843], "fn": "Ownable.renounceOwnership"}, "2074": {"op": "REVERT", "path": "0", "offset": [9789, 9843], "fn": "Ownable.renounceOwnership"}, "2075": {"op": "JUMPDEST", "path": "0", "offset": [9789, 9843], "fn": "Ownable.renounceOwnership"}, "2076": {"op": "PUSH1", "value": "0x3", "path": "0", "offset": [10460, 10466], "fn": "Ownable.renounceOwnership", "statement": 15}, "2078": {"op": "SLOAD", "path": "0", "offset": [10460, 10466], "fn": "Ownable.renounceOwnership"}, "2079": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [10439, 10479], "fn": "Ownable.renounceOwnership"}, "2081": {"op": "MLOAD", "path": "0", "offset": [10439, 10479], "fn": "Ownable.renounceOwnership"}, "2082": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [10476, 10477], "fn": "Ownable.renounceOwnership"}, "2084": {"op": "SWAP2", "path": "0", "offset": [10476, 10477], "fn": "Ownable.renounceOwnership"}, "2085": {"op": "PUSH1", "value": "0x1"}, "2087": {"op": "PUSH1", "value": "0x1"}, "2089": {"op": "PUSH1", "value": "0xA0"}, "2091": {"op": "SHL"}, "2092": {"op": "SUB"}, "2093": {"op": "AND", "path": "0", "offset": [10460, 10466], "fn": "Ownable.renounceOwnership"}, "2094": {"op": "SWAP1", "path": "0", "offset": [10460, 10466], "fn": "Ownable.renounceOwnership"}, "2095": {"op": "PUSH32", "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0", "path": "0", "offset": [10439, 10479], "fn": "Ownable.renounceOwnership"}, "2128": {"op": "SWAP1", "path": "0", "offset": [10439, 10479], "fn": "Ownable.renounceOwnership"}, "2129": {"op": "DUP4", "path": "0", "offset": [10476, 10477], "fn": "Ownable.renounceOwnership"}, "2130": {"op": "SWAP1", "path": "0", "offset": [10476, 10477], "fn": "Ownable.renounceOwnership"}, "2131": {"op": "LOG3", "path": "0", "offset": [10439, 10479], "fn": "Ownable.renounceOwnership"}, "2132": {"op": "PUSH1", "value": "0x3", "path": "0", "offset": [10489, 10495], "fn": "Ownable.renounceOwnership", "statement": 16}, "2134": {"op": "DUP1", "path": "0", "offset": [10489, 10508], "fn": "Ownable.renounceOwnership"}, "2135": {"op": "SLOAD", "path": "0", "offset": [10489, 10508], "fn": "Ownable.renounceOwnership"}, "2136": {"op": "PUSH1", "value": "0x1"}, "2138": {"op": "PUSH1", "value": "0x1"}, "2140": {"op": "PUSH1", "value": "0xA0"}, "2142": {"op": "SHL"}, "2143": {"op": "SUB"}, "2144": {"op": "NOT"}, "2145": {"op": "AND", "path": "0", "offset": [10489, 10508], "fn": "Ownable.renounceOwnership"}, "2146": {"op": "SWAP1", "path": "0", "offset": [10489, 10508], "fn": "Ownable.renounceOwnership"}, "2147": {"op": "SSTORE", "path": "0", "offset": [10489, 10508], "fn": "Ownable.renounceOwnership"}, "2148": {"op": "JUMP", "jump": "o", "path": "0", "offset": [10378, 10515], "fn": "Ownable.renounceOwnership"}, "2149": {"op": "JUMPDEST", "path": "0", "offset": [22235, 22264]}, "2150": {"op": "PUSH1", "value": "0x7", "path": "0", "offset": [22235, 22264], "fn": "Ownable.renounceOwnership"}, "2152": {"op": "SLOAD", "path": "0", "offset": [22235, 22264], "fn": "Ownable.renounceOwnership"}, "2153": {"op": "DUP2", "path": "0", "offset": [22235, 22264], "fn": "Ownable.renounceOwnership"}, "2154": {"op": "JUMP", "jump": "o", "path": "0", "offset": [22235, 22264], "fn": "Ownable.renounceOwnership"}, "2155": {"op": "JUMPDEST", "path": "0", "offset": [23127, 23256], "fn": "CurveRewards.lastTimeRewardApplicable"}, "2156": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [23184, 23191], "fn": "CurveRewards.lastTimeRewardApplicable"}, "2158": {"op": "PUSH2", "value": "0x879", "path": "0", "offset": [23210, 23249], "fn": "CurveRewards.lastTimeRewardApplicable", "statement": 17}, "2161": {"op": "TIMESTAMP", "path": "0", "offset": [23219, 23234], "fn": "CurveRewards.lastTimeRewardApplicable"}, "2162": {"op": "PUSH1", "value": "0x6", "path": "0", "offset": [23236, 23248], "fn": "CurveRewards.lastTimeRewardApplicable"}, "2164": {"op": "SLOAD", "path": "0", "offset": [23236, 23248], "fn": "CurveRewards.lastTimeRewardApplicable"}, "2165": {"op": "PUSH2", "value": "0xCA7", "path": "0", "offset": [23210, 23218], "fn": "CurveRewards.lastTimeRewardApplicable"}, "2168": {"op": "JUMP", "jump": "i", "path": "0", "offset": [23210, 23249], "fn": "CurveRewards.lastTimeRewardApplicable"}, "2169": {"op": "JUMPDEST", "path": "0", "offset": [23210, 23249], "fn": "CurveRewards.lastTimeRewardApplicable"}, "2170": {"op": "SWAP1", "path": "0", "offset": [23203, 23249], "fn": "CurveRewards.lastTimeRewardApplicable"}, "2171": {"op": "POP", "path": "0", "offset": [23203, 23249], "fn": "CurveRewards.lastTimeRewardApplicable"}, "2172": {"op": "SWAP1", "path": "0", "offset": [23127, 23256], "fn": "CurveRewards.lastTimeRewardApplicable"}, "2173": {"op": "JUMP", "jump": "o", "path": "0", "offset": [23127, 23256], "fn": "CurveRewards.lastTimeRewardApplicable"}, "2174": {"op": "JUMPDEST", "path": "0", "offset": [22346, 22403]}, "2175": {"op": "PUSH1", "value": "0xA", "path": "0", "offset": [22346, 22403], "fn": "CurveRewards.lastTimeRewardApplicable"}, "2177": {"op": "PUSH1", "value": "0x20", "path": "0", "offset": [22346, 22403], "fn": "CurveRewards.lastTimeRewardApplicable"}, "2179": {"op": "MSTORE", "path": "0", "offset": [22346, 22403], "fn": "CurveRewards.lastTimeRewardApplicable"}, "2180": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [22346, 22403], "fn": "CurveRewards.lastTimeRewardApplicable"}, "2182": {"op": "SWAP1", "path": "0", "offset": [22346, 22403], "fn": "CurveRewards.lastTimeRewardApplicable"}, "2183": {"op": "DUP2", "path": "0", "offset": [22346, 22403], "fn": "CurveRewards.lastTimeRewardApplicable"}, "2184": {"op": "MSTORE", "path": "0", "offset": [22346, 22403], "fn": "CurveRewards.lastTimeRewardApplicable"}, "2185": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [22346, 22403], "fn": "CurveRewards.lastTimeRewardApplicable"}, "2187": {"op": "SWAP1", "path": "0", "offset": [22346, 22403], "fn": "CurveRewards.lastTimeRewardApplicable"}, "2188": {"op": "KECCAK256", "path": "0", "offset": [22346, 22403], "fn": "CurveRewards.lastTimeRewardApplicable"}, "2189": {"op": "SLOAD", "path": "0", "offset": [22346, 22403], "fn": "CurveRewards.lastTimeRewardApplicable"}, "2190": {"op": "DUP2", "path": "0", "offset": [22346, 22403], "fn": "CurveRewards.lastTimeRewardApplicable"}, "2191": {"op": "JUMP", "jump": "o", "path": "0", "offset": [22346, 22403], "fn": "CurveRewards.lastTimeRewardApplicable"}, "2192": {"op": "JUMPDEST", "path": "0", "offset": [9593, 9670], "fn": "Ownable.owner"}, "2193": {"op": "PUSH1", "value": "0x3", "path": "0", "offset": [9657, 9663], "fn": "Ownable.owner", "statement": 18}, "2195": {"op": "SLOAD", "path": "0", "offset": [9657, 9663], "fn": "Ownable.owner"}, "2196": {"op": "PUSH1", "value": "0x1"}, "2198": {"op": "PUSH1", "value": "0x1"}, "2200": {"op": "PUSH1", "value": "0xA0"}, "2202": {"op": "SHL"}, "2203": {"op": "SUB"}, "2204": {"op": "AND", "path": "0", "offset": [9657, 9663], "fn": "Ownable.owner"}, "2205": {"op": "SWAP1", "path": "0", "offset": [9593, 9670], "fn": "Ownable.owner"}, "2206": {"op": "JUMP", "jump": "o", "path": "0", "offset": [9593, 9670], "fn": "Ownable.owner"}, "2207": {"op": "JUMPDEST", "path": "0", "offset": [9944, 10036], "fn": "Ownable.isOwner"}, "2208": {"op": "PUSH1", "value": "0x3", "path": "0", "offset": [10023, 10029], "fn": "Ownable.isOwner", "statement": 19}, "2210": {"op": "SLOAD", "path": "0", "offset": [10023, 10029], "fn": "Ownable.isOwner"}, "2211": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [9984, 9988], "fn": "Ownable.isOwner"}, "2213": {"op": "SWAP1", "path": "0", "offset": [9984, 9988], "fn": "Ownable.isOwner"}, "2214": {"op": "PUSH1", "value": "0x1"}, "2216": {"op": "PUSH1", "value": "0x1"}, "2218": {"op": "PUSH1", "value": "0xA0"}, "2220": {"op": "SHL"}, "2221": {"op": "SUB"}, "2222": {"op": "AND", "path": "0", "offset": [10023, 10029], "fn": "Ownable.isOwner"}, "2223": {"op": "PUSH2", "value": "0x8B6", "path": "0", "offset": [10007, 10019], "fn": "Ownable.isOwner"}, "2226": {"op": "PUSH2", "value": "0xC4C", "path": "0", "offset": [10007, 10017], "fn": "Ownable.isOwner"}, "2229": {"op": "JUMP", "jump": "i", "path": "0", "offset": [10007, 10019], "fn": "Ownable.isOwner"}, "2230": {"op": "JUMPDEST", "path": "0", "offset": [10007, 10019], "fn": "Ownable.isOwner"}, "2231": {"op": "PUSH1", "value": "0x1"}, "2233": {"op": "PUSH1", "value": "0x1"}, "2235": {"op": "PUSH1", "value": "0xA0"}, "2237": {"op": "SHL"}, "2238": {"op": "SUB"}, "2239": {"op": "AND", "path": "0", "offset": [10007, 10029], "fn": "Ownable.isOwner"}, "2240": {"op": "EQ", "path": "0", "offset": [10007, 10029], "fn": "Ownable.isOwner"}, "2241": {"op": "SWAP1", "path": "0", "offset": [10000, 10029], "fn": "Ownable.isOwner"}, "2242": {"op": "POP", "path": "0", "offset": [10000, 10029], "fn": "Ownable.isOwner"}, "2243": {"op": "SWAP1", "path": "0", "offset": [9944, 10036], "fn": "Ownable.isOwner"}, "2244": {"op": "JUMP", "jump": "o", "path": "0", "offset": [9944, 10036], "fn": "Ownable.isOwner"}, "2245": {"op": "JUMPDEST", "path": "0", "offset": [24023, 24210], "fn": "CurveRewards.stake"}, "2246": {"op": "CALLER", "path": "0", "offset": [24074, 24084], "fn": "CurveRewards.stake"}, "2247": {"op": "PUSH2", "value": "0x8CE", "path": "0", "offset": [22745, 22761]}, "2250": {"op": "PUSH2", "value": "0x9AF", "path": "0", "offset": [22745, 22759]}, "2253": {"op": "JUMP", "jump": "i", "path": "0", "offset": [22745, 22761]}, "2254": {"op": "JUMPDEST", "path": "0", "offset": [22745, 22761], "fn": "CurveRewards.stake"}, "2255": {"op": "PUSH1", "value": "0x9", "path": "0", "offset": [22722, 22742]}, "2257": {"op": "SSTORE", "path": "0", "offset": [22722, 22761]}, "2258": {"op": "PUSH2", "value": "0x8D9", "path": "0", "offset": [22788, 22814]}, "2261": {"op": "PUSH2", "value": "0x86B", "path": "0", "offset": [22788, 22812]}, "2264": {"op": "JUMP", "jump": "i", "path": "0", "offset": [22788, 22814]}, "2265": {"op": "JUMPDEST", "path": "0", "offset": [22788, 22814], "fn": "CurveRewards.stake"}, "2266": {"op": "PUSH1", "value": "0x8", "path": "0", "offset": [22771, 22785]}, "2268": {"op": "SSTORE", "path": "0", "offset": [22771, 22814]}, "2269": {"op": "PUSH1", "value": "0x1"}, "2271": {"op": "PUSH1", "value": "0x1"}, "2273": {"op": "PUSH1", "value": "0xA0"}, "2275": {"op": "SHL"}, "2276": {"op": "SUB"}, "2277": {"op": "DUP2", "path": "0", "offset": [22828, 22849]}, "2278": {"op": "AND", "path": "0", "offset": [22828, 22849], "fn": "CurveRewards.stake"}, "2279": {"op": "ISZERO", "path": "0", "offset": [22828, 22849], "fn": "CurveRewards.stake", "branch": 56}, "2280": {"op": "PUSH2", "value": "0x920", "path": "0", "offset": [22824, 22978]}, "2283": {"op": "JUMPI", "path": "0", "offset": [22824, 22978], "branch": 56}, "2284": {"op": "PUSH2", "value": "0x8F4", "path": "0", "offset": [22884, 22899]}, "2287": {"op": "DUP2", "path": "0", "offset": [22891, 22898]}, "2288": {"op": "PUSH2", "value": "0x353", "path": "0", "offset": [22884, 22890]}, "2291": {"op": "JUMP", "jump": "i", "path": "0", "offset": [22884, 22899]}, "2292": {"op": "JUMPDEST", "path": "0", "offset": [22884, 22899], "fn": "CurveRewards.stake"}, "2293": {"op": "PUSH1", "value": "0x1"}, "2295": {"op": "PUSH1", "value": "0x1"}, "2297": {"op": "PUSH1", "value": "0xA0"}, "2299": {"op": "SHL"}, "2300": {"op": "SUB"}, "2301": {"op": "DUP3", "path": "0", "offset": [22865, 22881]}, "2302": {"op": "AND", "path": "0", "offset": [22865, 22881], "fn": "CurveRewards.stake"}, "2303": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [22865, 22881], "fn": "CurveRewards.stake"}, "2305": {"op": "SWAP1", "path": "0", "offset": [22865, 22881], "fn": "CurveRewards.stake"}, "2306": {"op": "DUP2", "path": "0", "offset": [22865, 22881], "fn": "CurveRewards.stake"}, "2307": {"op": "MSTORE", "path": "0", "offset": [22865, 22881], "fn": "CurveRewards.stake"}, "2308": {"op": "PUSH1", "value": "0xB", "path": "0", "offset": [22865, 22872]}, "2310": {"op": "PUSH1", "value": "0x20", "path": "0", "offset": [22865, 22881]}, "2312": {"op": "SWAP1", "path": "0", "offset": [22865, 22881], "fn": "CurveRewards.stake"}, "2313": {"op": "DUP2", "path": "0", "offset": [22865, 22881], "fn": "CurveRewards.stake"}, "2314": {"op": "MSTORE", "path": "0", "offset": [22865, 22881], "fn": "CurveRewards.stake"}, "2315": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [22865, 22881], "fn": "CurveRewards.stake"}, "2317": {"op": "DUP1", "path": "0", "offset": [22865, 22881], "fn": "CurveRewards.stake"}, "2318": {"op": "DUP4", "path": "0", "offset": [22865, 22881], "fn": "CurveRewards.stake"}, "2319": {"op": "KECCAK256", "path": "0", "offset": [22865, 22881], "fn": "CurveRewards.stake"}, "2320": {"op": "SWAP4", "path": "0", "offset": [22865, 22899]}, "2321": {"op": "SWAP1", "path": "0", "offset": [22865, 22899], "fn": "CurveRewards.stake"}, "2322": {"op": "SWAP4", "path": "0", "offset": [22865, 22899], "fn": "CurveRewards.stake"}, "2323": {"op": "SSTORE", "path": "0", "offset": [22865, 22899], "fn": "CurveRewards.stake"}, "2324": {"op": "PUSH1", "value": "0x9", "path": "0", "offset": [22947, 22967]}, "2326": {"op": "SLOAD", "path": "0", "offset": [22947, 22967], "fn": "CurveRewards.stake"}, "2327": {"op": "PUSH1", "value": "0xA", "path": "0", "offset": [22913, 22935]}, "2329": {"op": "SWAP1", "path": "0", "offset": [22913, 22944]}, "2330": {"op": "SWAP2", "path": "0", "offset": [22913, 22944], "fn": "CurveRewards.stake"}, "2331": {"op": "MSTORE", "path": "0", "offset": [22913, 22944], "fn": "CurveRewards.stake"}, "2332": {"op": "SWAP2", "path": "0", "offset": [22913, 22944], "fn": "CurveRewards.stake"}, "2333": {"op": "SWAP1", "path": "0", "offset": [22913, 22944], "fn": "CurveRewards.stake"}, "2334": {"op": "KECCAK256", "path": "0", "offset": [22913, 22944], "fn": "CurveRewards.stake"}, "2335": {"op": "SSTORE", "path": "0", "offset": [22913, 22967]}, "2336": {"op": "JUMPDEST", "path": "0", "offset": [22824, 22978]}, "2337": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [24113, 24114], "fn": "CurveRewards.stake", "statement": 20}, "2339": {"op": "DUP3", "path": "0", "offset": [24104, 24110], "fn": "CurveRewards.stake"}, "2340": {"op": "GT", "path": "0", "offset": [24104, 24114], "fn": "CurveRewards.stake", "branch": 57}, "2341": {"op": "PUSH2", "value": "0x966", "path": "0", "offset": [24096, 24133], "fn": "CurveRewards.stake"}, "2344": {"op": "JUMPI", "path": "0", "offset": [24096, 24133], "fn": "CurveRewards.stake", "branch": 57}, "2345": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [24096, 24133], "fn": "CurveRewards.stake"}, "2347": {"op": "DUP1", "path": "0", "offset": [24096, 24133], "fn": "CurveRewards.stake"}, "2348": {"op": "MLOAD", "path": "0", "offset": [24096, 24133], "fn": "CurveRewards.stake"}, "2349": {"op": "PUSH3", "value": "0x461BCD"}, "2353": {"op": "PUSH1", "value": "0xE5"}, "2355": {"op": "SHL"}, "2356": {"op": "DUP2", "path": "0", "offset": [24096, 24133], "fn": "CurveRewards.stake"}, "2357": {"op": "MSTORE", "path": "0", "offset": [24096, 24133], "fn": "CurveRewards.stake"}, "2358": {"op": "PUSH1", "value": "0x20", "path": "0", "offset": [24096, 24133], "fn": "CurveRewards.stake"}, "2360": {"op": "PUSH1", "value": "0x4", "path": "0", "offset": [24096, 24133], "fn": "CurveRewards.stake"}, "2362": {"op": "DUP3", "path": "0", "offset": [24096, 24133], "fn": "CurveRewards.stake"}, "2363": {"op": "ADD", "path": "0", "offset": [24096, 24133], "fn": "CurveRewards.stake"}, "2364": {"op": "MSTORE", "path": "0", "offset": [24096, 24133], "fn": "CurveRewards.stake"}, "2365": {"op": "PUSH1", "value": "0xE", "path": "0", "offset": [24096, 24133], "fn": "CurveRewards.stake"}, "2367": {"op": "PUSH1", "value": "0x24", "path": "0", "offset": [24096, 24133], "fn": "CurveRewards.stake"}, "2369": {"op": "DUP3", "path": "0", "offset": [24096, 24133], "fn": "CurveRewards.stake"}, "2370": {"op": "ADD", "path": "0", "offset": [24096, 24133], "fn": "CurveRewards.stake"}, "2371": {"op": "MSTORE", "path": "0", "offset": [24096, 24133], "fn": "CurveRewards.stake"}, "2372": {"op": "PUSH14", "value": "0x43616E6E6F74207374616B65203"}, "2387": {"op": "PUSH1", "value": "0x94"}, "2389": {"op": "SHL"}, "2390": {"op": "PUSH1", "value": "0x44", "path": "0", "offset": [24096, 24133], "fn": "CurveRewards.stake"}, "2392": {"op": "DUP3", "path": "0", "offset": [24096, 24133], "fn": "CurveRewards.stake"}, "2393": {"op": "ADD", "path": "0", "offset": [24096, 24133], "fn": "CurveRewards.stake"}, "2394": {"op": "MSTORE", "path": "0", "offset": [24096, 24133], "fn": "CurveRewards.stake"}, "2395": {"op": "SWAP1", "path": "0", "offset": [24096, 24133], "fn": "CurveRewards.stake"}, "2396": {"op": "MLOAD", "path": "0", "offset": [24096, 24133], "fn": "CurveRewards.stake"}, "2397": {"op": "SWAP1", "path": "0", "offset": [24096, 24133], "fn": "CurveRewards.stake"}, "2398": {"op": "DUP2", "path": "0", "offset": [24096, 24133], "fn": "CurveRewards.stake"}, "2399": {"op": "SWAP1", "path": "0", "offset": [24096, 24133], "fn": "CurveRewards.stake"}, "2400": {"op": "SUB", "path": "0", "offset": [24096, 24133], "fn": "CurveRewards.stake"}, "2401": {"op": "PUSH1", "value": "0x64", "path": "0", "offset": [24096, 24133], "fn": "CurveRewards.stake"}, "2403": {"op": "ADD", "path": "0", "offset": [24096, 24133], "fn": "CurveRewards.stake"}, "2404": {"op": "SWAP1", "path": "0", "offset": [24096, 24133], "fn": "CurveRewards.stake"}, "2405": {"op": "REVERT", "path": "0", "offset": [24096, 24133], "fn": "CurveRewards.stake"}, "2406": {"op": "JUMPDEST", "path": "0", "offset": [24096, 24133], "fn": "CurveRewards.stake"}, "2407": {"op": "PUSH2", "value": "0x96F", "path": "0", "offset": [24143, 24162], "fn": "CurveRewards.stake", "statement": 21}, "2410": {"op": "DUP3", "path": "0", "offset": [24155, 24161], "fn": "CurveRewards.stake"}, "2411": {"op": "PUSH2", "value": "0xCBD", "path": "0", "offset": [24143, 24154], "fn": "CurveRewards.stake"}, "2414": {"op": "JUMP", "jump": "i", "path": "0", "offset": [24143, 24162], "fn": "CurveRewards.stake"}, "2415": {"op": "JUMPDEST", "path": "0", "offset": [24143, 24162], "fn": "CurveRewards.stake"}, "2416": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [24177, 24203], "fn": "CurveRewards.stake", "statement": 22}, "2418": {"op": "DUP1", "path": "0", "offset": [24177, 24203], "fn": "CurveRewards.stake"}, "2419": {"op": "MLOAD", "path": "0", "offset": [24177, 24203], "fn": "CurveRewards.stake"}, "2420": {"op": "DUP4", "path": "0", "offset": [24177, 24203], "fn": "CurveRewards.stake"}, "2421": {"op": "DUP2", "path": "0", "offset": [24177, 24203], "fn": "CurveRewards.stake"}, "2422": {"op": "MSTORE", "path": "0", "offset": [24177, 24203], "fn": "CurveRewards.stake"}, "2423": {"op": "SWAP1", "path": "0", "offset": [24177, 24203], "fn": "CurveRewards.stake"}, "2424": {"op": "MLOAD", "path": "0", "offset": [24177, 24203], "fn": "CurveRewards.stake"}, "2425": {"op": "CALLER", "path": "0", "offset": [24184, 24194], "fn": "CurveRewards.stake"}, "2426": {"op": "SWAP2", "path": "0", "offset": [24184, 24194], "fn": "CurveRewards.stake"}, "2427": {"op": "PUSH32", "value": "0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D", "path": "0", "offset": [24177, 24203], "fn": "CurveRewards.stake"}, "2460": {"op": "SWAP2", "path": "0", "offset": [24177, 24203], "fn": "CurveRewards.stake"}, "2461": {"op": "SWAP1", "path": "0", "offset": [24177, 24203], "fn": "CurveRewards.stake"}, "2462": {"op": "DUP2", "path": "0", "offset": [24177, 24203], "fn": "CurveRewards.stake"}, "2463": {"op": "SWAP1", "path": "0", "offset": [24177, 24203], "fn": "CurveRewards.stake"}, "2464": {"op": "SUB", "path": "0", "offset": [24177, 24203], "fn": "CurveRewards.stake"}, "2465": {"op": "PUSH1", "value": "0x20", "path": "0", "offset": [24177, 24203], "fn": "CurveRewards.stake"}, "2467": {"op": "ADD", "path": "0", "offset": [24177, 24203], "fn": "CurveRewards.stake"}, "2468": {"op": "SWAP1", "path": "0", "offset": [24177, 24203], "fn": "CurveRewards.stake"}, "2469": {"op": "LOG2", "path": "0", "offset": [24177, 24203], "fn": "CurveRewards.stake"}, "2470": {"op": "POP", "path": "0", "offset": [24023, 24210], "fn": "CurveRewards.stake"}, "2471": {"op": "POP", "path": "0", "offset": [24023, 24210], "fn": "CurveRewards.stake"}, "2472": {"op": "JUMP", "jump": "o", "path": "0", "offset": [24023, 24210], "fn": "CurveRewards.stake"}, "2473": {"op": "JUMPDEST", "path": "0", "offset": [22270, 22299]}, "2474": {"op": "PUSH1", "value": "0x8", "path": "0", "offset": [22270, 22299], "fn": "CurveRewards.stake"}, "2476": {"op": "SLOAD", "path": "0", "offset": [22270, 22299], "fn": "CurveRewards.stake"}, "2477": {"op": "DUP2", "path": "0", "offset": [22270, 22299], "fn": "CurveRewards.stake"}, "2478": {"op": "JUMP", "jump": "o", "path": "0", "offset": [22270, 22299], "fn": "CurveRewards.stake"}, "2479": {"op": "JUMPDEST", "path": "0", "offset": [23262, 23670], "fn": "CurveRewards.rewardPerToken"}, "2480": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [23309, 23316], "fn": "CurveRewards.rewardPerToken"}, "2482": {"op": "PUSH2", "value": "0x9B9", "path": "0", "offset": [23332, 23345], "fn": "CurveRewards.rewardPerToken"}, "2485": {"op": "PUSH2", "value": "0x466", "path": "0", "offset": [23332, 23343], "fn": "CurveRewards.rewardPerToken"}, "2488": {"op": "JUMP", "jump": "i", "path": "0", "offset": [23332, 23345], "fn": "CurveRewards.rewardPerToken"}, "2489": {"op": "JUMPDEST", "path": "0", "offset": [23332, 23345], "fn": "CurveRewards.rewardPerToken"}, "2490": {"op": "PUSH2", "value": "0x9C6", "path": "0", "offset": [23328, 23404], "fn": "CurveRewards.rewardPerToken"}, "2493": {"op": "JUMPI", "path": "0", "offset": [23328, 23404], "fn": "CurveRewards.rewardPerToken"}, "2494": {"op": "POP"}, "2495": {"op": "PUSH1", "value": "0x9", "path": "0", "offset": [23373, 23393], "fn": "CurveRewards.rewardPerToken", "statement": 23}, "2497": {"op": "SLOAD", "path": "0", "offset": [23373, 23393], "fn": "CurveRewards.rewardPerToken"}, "2498": {"op": "PUSH2", "value": "0x46A", "path": "0", "offset": [23366, 23393], "fn": "CurveRewards.rewardPerToken"}, "2501": {"op": "JUMP", "path": "0", "offset": [23366, 23393], "fn": "CurveRewards.rewardPerToken"}, "2502": {"op": "JUMPDEST", "path": "0", "offset": [23328, 23404], "fn": "CurveRewards.rewardPerToken"}, "2503": {"op": "PUSH2", "value": "0x879", "path": "0", "offset": [23432, 23663], "fn": "CurveRewards.rewardPerToken", "statement": 24}, "2506": {"op": "PUSH2", "value": "0x9F4", "path": "0", "offset": [23474, 23649], "fn": "CurveRewards.rewardPerToken"}, "2509": {"op": "PUSH2", "value": "0x9D4", "path": "0", "offset": [23635, 23648], "fn": "CurveRewards.rewardPerToken"}, "2512": {"op": "PUSH2", "value": "0x466", "path": "0", "offset": [23635, 23646], "fn": "CurveRewards.rewardPerToken"}, "2515": {"op": "JUMP", "jump": "i", "path": "0", "offset": [23635, 23648], "fn": "CurveRewards.rewardPerToken"}, "2516": {"op": "JUMPDEST", "path": "0", "offset": [23635, 23648], "fn": "CurveRewards.rewardPerToken"}, "2517": {"op": "PUSH2", "value": "0x3BB", "path": "0", "offset": [23474, 23609], "fn": "CurveRewards.rewardPerToken"}, "2520": {"op": "PUSH8", "value": "0xDE0B6B3A7640000", "path": "0", "offset": [23604, 23608], "fn": "CurveRewards.rewardPerToken"}, "2529": {"op": "PUSH2", "value": "0x3AF", "path": "0", "offset": [23474, 23578], "fn": "CurveRewards.rewardPerToken"}, "2532": {"op": "PUSH1", "value": "0x7", "path": "0", "offset": [23567, 23577], "fn": "CurveRewards.rewardPerToken"}, "2534": {"op": "SLOAD", "path": "0", "offset": [23567, 23577], "fn": "CurveRewards.rewardPerToken"}, "2535": {"op": "PUSH2", "value": "0x3AF", "path": "0", "offset": [23474, 23541], "fn": "CurveRewards.rewardPerToken"}, "2538": {"op": "PUSH1", "value": "0x8", "path": "0", "offset": [23526, 23540], "fn": "CurveRewards.rewardPerToken"}, "2540": {"op": "SLOAD", "path": "0", "offset": [23526, 23540], "fn": "CurveRewards.rewardPerToken"}, "2541": {"op": "PUSH2", "value": "0x39A", "path": "0", "offset": [23474, 23500], "fn": "CurveRewards.rewardPerToken"}, "2544": {"op": "PUSH2", "value": "0x86B", "path": "0", "offset": [23474, 23498], "fn": "CurveRewards.rewardPerToken"}, "2547": {"op": "JUMP", "jump": "i", "path": "0", "offset": [23474, 23500], "fn": "CurveRewards.rewardPerToken"}, "2548": {"op": "JUMPDEST", "path": "0", "offset": [23474, 23649], "fn": "CurveRewards.rewardPerToken"}, "2549": {"op": "PUSH1", "value": "0x9", "path": "0", "offset": [23432, 23452], "fn": "CurveRewards.rewardPerToken"}, "2551": {"op": "SLOAD", "path": "0", "offset": [23432, 23452], "fn": "CurveRewards.rewardPerToken"}, "2552": {"op": "SWAP1", "path": "0", "offset": [23432, 23452], "fn": "CurveRewards.rewardPerToken"}, "2553": {"op": "PUSH4", "value": "0xFFFFFFFF", "path": "0", "offset": [23432, 23663], "fn": "CurveRewards.rewardPerToken"}, "2558": {"op": "PUSH2", "value": "0xB91", "path": "0", "offset": [23432, 23456], "fn": "CurveRewards.rewardPerToken"}, "2561": {"op": "AND", "path": "0", "offset": [23432, 23663], "fn": "CurveRewards.rewardPerToken"}, "2562": {"op": "JUMP", "jump": "i", "path": "0", "offset": [23432, 23663], "fn": "CurveRewards.rewardPerToken"}, "2563": {"op": "JUMPDEST", "path": "0", "offset": [22305, 22340]}, "2564": {"op": "PUSH1", "value": "0x9", "path": "0", "offset": [22305, 22340], "fn": "CurveRewards.rewardPerToken"}, "2566": {"op": "SLOAD", "path": "0", "offset": [22305, 22340], "fn": "CurveRewards.rewardPerToken"}, "2567": {"op": "DUP2", "path": "0", "offset": [22305, 22340], "fn": "CurveRewards.rewardPerToken"}, "2568": {"op": "JUMP", "jump": "o", "path": "0", "offset": [22305, 22340], "fn": "CurveRewards.rewardPerToken"}, "2569": {"op": "JUMPDEST", "path": "0", "offset": [22127, 22144]}, "2570": {"op": "PUSH1", "value": "0x5", "path": "0", "offset": [22127, 22144], "fn": "CurveRewards.rewardPerToken"}, "2572": {"op": "SLOAD", "path": "0", "offset": [22127, 22144], "fn": "CurveRewards.rewardPerToken"}, "2573": {"op": "PUSH1", "value": "0x1"}, "2575": {"op": "PUSH1", "value": "0x1"}, "2577": {"op": "PUSH1", "value": "0xA0"}, "2579": {"op": "SHL"}, "2580": {"op": "SUB"}, "2581": {"op": "AND", "path": "0", "offset": [22127, 22144]}, "2582": {"op": "DUP2", "path": "0", "offset": [22127, 22144], "fn": "CurveRewards.rewardPerToken"}, "2583": {"op": "JUMP", "jump": "o", "path": "0", "offset": [22127, 22144], "fn": "CurveRewards.rewardPerToken"}, "2584": {"op": "JUMPDEST", "path": "0", "offset": [24421, 24515], "fn": "CurveRewards.exit"}, "2585": {"op": "PUSH2", "value": "0xA29", "path": "0", "offset": [24456, 24487], "fn": "CurveRewards.exit", "statement": 25}, "2588": {"op": "PUSH2", "value": "0xA24", "path": "0", "offset": [24465, 24486], "fn": "CurveRewards.exit"}, "2591": {"op": "CALLER", "path": "0", "offset": [24475, 24485], "fn": "CurveRewards.exit"}, "2592": {"op": "PUSH2", "value": "0x7A7", "path": "0", "offset": [24465, 24474], "fn": "CurveRewards.exit"}, "2595": {"op": "JUMP", "jump": "i", "path": "0", "offset": [24465, 24486], "fn": "CurveRewards.exit"}, "2596": {"op": "JUMPDEST", "path": "0", "offset": [24465, 24486], "fn": "CurveRewards.exit"}, "2597": {"op": "PUSH2", "value": "0x474", "path": "0", "offset": [24456, 24464], "fn": "CurveRewards.exit"}, "2600": {"op": "JUMP", "jump": "i", "path": "0", "offset": [24456, 24487], "fn": "CurveRewards.exit"}, "2601": {"op": "JUMPDEST", "path": "0", "offset": [24456, 24487], "fn": "CurveRewards.exit"}, "2602": {"op": "PUSH2", "value": "0xA31", "path": "0", "offset": [24497, 24508], "fn": "CurveRewards.exit", "statement": 26}, "2605": {"op": "PUSH2", "value": "0x6D5", "path": "0", "offset": [24497, 24506], "fn": "CurveRewards.exit"}, "2608": {"op": "JUMP", "jump": "i", "path": "0", "offset": [24497, 24508], "fn": "CurveRewards.exit"}, "2609": {"op": "JUMPDEST", "path": "0", "offset": [24497, 24508], "fn": "CurveRewards.exit"}, "2610": {"op": "JUMP", "jump": "o", "path": "0", "offset": [24421, 24515], "fn": "CurveRewards.exit"}, "2611": {"op": "JUMPDEST", "path": "0", "offset": [22198, 22229]}, "2612": {"op": "PUSH1", "value": "0x6", "path": "0", "offset": [22198, 22229], "fn": "CurveRewards.exit"}, "2614": {"op": "SLOAD", "path": "0", "offset": [22198, 22229], "fn": "CurveRewards.exit"}, "2615": {"op": "DUP2", "path": "0", "offset": [22198, 22229], "fn": "CurveRewards.exit"}, "2616": {"op": "JUMP", "jump": "o", "path": "0", "offset": [22198, 22229], "fn": "CurveRewards.exit"}, "2617": {"op": "JUMPDEST", "path": "0", "offset": [21286, 21303]}, "2618": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [21286, 21303], "fn": "CurveRewards.exit"}, "2620": {"op": "SLOAD", "path": "0", "offset": [21286, 21303], "fn": "CurveRewards.exit"}, "2621": {"op": "PUSH1", "value": "0x1"}, "2623": {"op": "PUSH1", "value": "0x1"}, "2625": {"op": "PUSH1", "value": "0xA0"}, "2627": {"op": "SHL"}, "2628": {"op": "SUB"}, "2629": {"op": "AND", "path": "0", "offset": [21286, 21303]}, "2630": {"op": "DUP2", "path": "0", "offset": [21286, 21303], "fn": "CurveRewards.exit"}, "2631": {"op": "JUMP", "jump": "o", "path": "0", "offset": [21286, 21303], "fn": "CurveRewards.exit"}, "2632": {"op": "JUMPDEST", "path": "0", "offset": [10664, 10771], "fn": "Ownable.transferOwnership"}, "2633": {"op": "PUSH2", "value": "0xA50", "path": "0", "offset": [9797, 9806]}, "2636": {"op": "PUSH2", "value": "0x89F", "path": "0", "offset": [9797, 9804]}, "2639": {"op": "JUMP", "jump": "i", "path": "0", "offset": [9797, 9806]}, "2640": {"op": "JUMPDEST", "path": "0", "offset": [9797, 9806], "fn": "Ownable.transferOwnership", "branch": 58}, "2641": {"op": "PUSH2", "value": "0xAA1", "path": "0", "offset": [9789, 9843]}, "2644": {"op": "JUMPI", "path": "0", "offset": [9789, 9843], "branch": 58}, "2645": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [9789, 9843], "fn": "Ownable.transferOwnership"}, "2647": {"op": "DUP1", "path": "0", "offset": [9789, 9843], "fn": "Ownable.transferOwnership"}, "2648": {"op": "MLOAD", "path": "0", "offset": [9789, 9843], "fn": "Ownable.transferOwnership"}, "2649": {"op": "PUSH3", "value": "0x461BCD"}, "2653": {"op": "PUSH1", "value": "0xE5"}, "2655": {"op": "SHL"}, "2656": {"op": "DUP2", "path": "0", "offset": [9789, 9843]}, "2657": {"op": "MSTORE", "path": "0", "offset": [9789, 9843], "fn": "Ownable.transferOwnership"}, "2658": {"op": "PUSH1", "value": "0x20", "path": "0", "offset": [9789, 9843], "fn": "Ownable.transferOwnership"}, "2660": {"op": "PUSH1", "value": "0x4", "path": "0", "offset": [9789, 9843], "fn": "Ownable.transferOwnership"}, "2662": {"op": "DUP3", "path": "0", "offset": [9789, 9843], "fn": "Ownable.transferOwnership"}, "2663": {"op": "ADD", "path": "0", "offset": [9789, 9843], "fn": "Ownable.transferOwnership"}, "2664": {"op": "DUP2", "path": "0", "offset": [9789, 9843], "fn": "Ownable.transferOwnership"}, "2665": {"op": "SWAP1", "path": "0", "offset": [9789, 9843], "fn": "Ownable.transferOwnership"}, "2666": {"op": "MSTORE", "path": "0", "offset": [9789, 9843], "fn": "Ownable.transferOwnership"}, "2667": {"op": "PUSH1", "value": "0x24", "path": "0", "offset": [9789, 9843], "fn": "Ownable.transferOwnership"}, "2669": {"op": "DUP3", "path": "0", "offset": [9789, 9843], "fn": "Ownable.transferOwnership"}, "2670": {"op": "ADD", "path": "0", "offset": [9789, 9843], "fn": "Ownable.transferOwnership"}, "2671": {"op": "MSTORE", "path": "0", "offset": [9789, 9843], "fn": "Ownable.transferOwnership"}, "2672": {"op": "PUSH32", "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572", "path": "0", "offset": [9789, 9843], "fn": "Ownable.transferOwnership"}, "2705": {"op": "PUSH1", "value": "0x44", "path": "0", "offset": [9789, 9843], "fn": "Ownable.transferOwnership"}, "2707": {"op": "DUP3", "path": "0", "offset": [9789, 9843], "fn": "Ownable.transferOwnership"}, "2708": {"op": "ADD", "path": "0", "offset": [9789, 9843], "fn": "Ownable.transferOwnership"}, "2709": {"op": "MSTORE", "path": "0", "offset": [9789, 9843], "fn": "Ownable.transferOwnership"}, "2710": {"op": "SWAP1", "path": "0", "offset": [9789, 9843], "fn": "Ownable.transferOwnership"}, "2711": {"op": "MLOAD", "path": "0", "offset": [9789, 9843], "fn": "Ownable.transferOwnership"}, "2712": {"op": "SWAP1", "path": "0", "offset": [9789, 9843], "fn": "Ownable.transferOwnership"}, "2713": {"op": "DUP2", "path": "0", "offset": [9789, 9843], "fn": "Ownable.transferOwnership"}, "2714": {"op": "SWAP1", "path": "0", "offset": [9789, 9843], "fn": "Ownable.transferOwnership"}, "2715": {"op": "SUB", "path": "0", "offset": [9789, 9843], "fn": "Ownable.transferOwnership"}, "2716": {"op": "PUSH1", "value": "0x64", "path": "0", "offset": [9789, 9843], "fn": "Ownable.transferOwnership"}, "2718": {"op": "ADD", "path": "0", "offset": [9789, 9843], "fn": "Ownable.transferOwnership"}, "2719": {"op": "SWAP1", "path": "0", "offset": [9789, 9843], "fn": "Ownable.transferOwnership"}, "2720": {"op": "REVERT", "path": "0", "offset": [9789, 9843], "fn": "Ownable.transferOwnership"}, "2721": {"op": "JUMPDEST", "path": "0", "offset": [9789, 9843], "fn": "Ownable.transferOwnership"}, "2722": {"op": "PUSH2", "value": "0xAAA", "path": "0", "offset": [10736, 10764], "fn": "Ownable.transferOwnership", "statement": 27}, "2725": {"op": "DUP2", "path": "0", "offset": [10755, 10763], "fn": "Ownable.transferOwnership"}, "2726": {"op": "PUSH2", "value": "0xD1F", "path": "0", "offset": [10736, 10754], "fn": "Ownable.transferOwnership"}, "2729": {"op": "JUMP", "jump": "i", "path": "0", "offset": [10736, 10764], "fn": "Ownable.transferOwnership"}, "2730": {"op": "JUMPDEST", "path": "0", "offset": [10736, 10764], "fn": "Ownable.transferOwnership"}, "2731": {"op": "POP", "path": "0", "offset": [10664, 10771], "fn": "Ownable.transferOwnership"}, "2732": {"op": "JUMP", "jump": "o", "path": "0", "offset": [10664, 10771], "fn": "Ownable.transferOwnership"}, "2733": {"op": "JUMPDEST", "path": "0", "offset": [3564, 3698], "fn": "SafeMath.sub"}, "2734": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [3622, 3629], "fn": "SafeMath.sub"}, "2736": {"op": "PUSH2", "value": "0xAEF", "path": "0", "offset": [3648, 3691], "fn": "SafeMath.sub", "statement": 28}, "2739": {"op": "DUP4", "path": "0", "offset": [3652, 3653], "fn": "SafeMath.sub"}, "2740": {"op": "DUP4", "path": "0", "offset": [3655, 3656], "fn": "SafeMath.sub"}, "2741": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [3648, 3691], "fn": "SafeMath.sub"}, "2743": {"op": "MLOAD", "path": "0", "offset": [3648, 3691], "fn": "SafeMath.sub"}, "2744": {"op": "DUP1", "path": "0", "offset": [3648, 3691], "fn": "SafeMath.sub"}, "2745": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [3648, 3691], "fn": "SafeMath.sub"}, "2747": {"op": "ADD", "path": "0", "offset": [3648, 3691], "fn": "SafeMath.sub"}, "2748": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [3648, 3691], "fn": "SafeMath.sub"}, "2750": {"op": "MSTORE", "path": "0", "offset": [3648, 3691], "fn": "SafeMath.sub"}, "2751": {"op": "DUP1", "path": "0", "offset": [3648, 3691], "fn": "SafeMath.sub"}, "2752": {"op": "PUSH1", "value": "0x1E", "path": "0", "offset": [3648, 3691], "fn": "SafeMath.sub"}, "2754": {"op": "DUP2", "path": "0", "offset": [3648, 3691], "fn": "SafeMath.sub"}, "2755": {"op": "MSTORE", "path": "0", "offset": [3648, 3691], "fn": "SafeMath.sub"}, "2756": {"op": "PUSH1", "value": "0x20", "path": "0", "offset": [3648, 3691], "fn": "SafeMath.sub"}, "2758": {"op": "ADD", "path": "0", "offset": [3648, 3691], "fn": "SafeMath.sub"}, "2759": {"op": "PUSH32", "value": "0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000", "path": "0", "offset": [3648, 3691], "fn": "SafeMath.sub"}, "2792": {"op": "DUP2", "path": "0", "offset": [3648, 3691], "fn": "SafeMath.sub"}, "2793": {"op": "MSTORE", "path": "0", "offset": [3648, 3691], "fn": "SafeMath.sub"}, "2794": {"op": "POP", "path": "0", "offset": [3648, 3691], "fn": "SafeMath.sub"}, "2795": {"op": "PUSH2", "value": "0xDC0", "path": "0", "offset": [3648, 3651], "fn": "SafeMath.sub"}, "2798": {"op": "JUMP", "jump": "i", "path": "0", "offset": [3648, 3691], "fn": "SafeMath.sub"}, "2799": {"op": "JUMPDEST", "path": "0", "offset": [3648, 3691], "fn": "SafeMath.sub"}, "2800": {"op": "SWAP4", "path": "0", "offset": [3641, 3691], "fn": "SafeMath.sub"}, "2801": {"op": "SWAP3", "path": "0", "offset": [3564, 3698], "fn": "SafeMath.sub"}, "2802": {"op": "POP"}, "2803": {"op": "POP"}, "2804": {"op": "POP"}, "2805": {"op": "JUMP", "jump": "o", "path": "0", "offset": [3564, 3698], "fn": "SafeMath.sub"}, "2806": {"op": "JUMPDEST", "path": "0", "offset": [4449, 4908], "fn": "SafeMath.mul"}, "2807": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [4507, 4514], "fn": "SafeMath.mul"}, "2809": {"op": "DUP3", "path": "0", "offset": [4748, 4754], "fn": "SafeMath.mul", "branch": 59}, "2810": {"op": "PUSH2", "value": "0xB05", "path": "0", "offset": [4744, 4789], "fn": "SafeMath.mul"}, "2813": {"op": "JUMPI", "path": "0", "offset": [4744, 4789], "fn": "SafeMath.mul", "branch": 59}, "2814": {"op": "POP"}, "2815": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [4777, 4778], "fn": "SafeMath.mul", "statement": 29}, "2817": {"op": "PUSH2", "value": "0x3D3", "path": "0", "offset": [4770, 4778], "fn": "SafeMath.mul"}, "2820": {"op": "JUMP", "path": "0", "offset": [4770, 4778], "fn": "SafeMath.mul"}, "2821": {"op": "JUMPDEST", "path": "0", "offset": [4744, 4789], "fn": "SafeMath.mul"}, "2822": {"op": "DUP3", "path": "0", "offset": [4811, 4816], "fn": "SafeMath.mul"}, "2823": {"op": "DUP3", "path": "0", "offset": [4811, 4816], "fn": "SafeMath.mul"}, "2824": {"op": "MUL", "path": "0", "offset": [4811, 4816], "fn": "SafeMath.mul"}, "2825": {"op": "DUP3", "path": "0", "offset": [4815, 4816], "fn": "SafeMath.mul"}, "2826": {"op": "DUP5", "path": "0", "offset": [4811, 4812], "fn": "SafeMath.mul"}, "2827": {"op": "DUP3", "path": "0", "offset": [4811, 4816], "fn": "SafeMath.mul"}, "2828": {"op": "DUP2", "path": "0", "offset": [4811, 4812], "fn": "SafeMath.mul"}, "2829": {"op": "PUSH2", "value": "0xB12", "path": "0", "offset": [4834, 4839], "fn": "SafeMath.mul", "statement": 30}, "2832": {"op": "JUMPI", "path": "0", "offset": [4834, 4839], "fn": "SafeMath.mul"}, "2833": {"op": "INVALID", "path": "0", "offset": [4834, 4839], "dev": "Division by zero", "fn": "SafeMath.mul"}, "2834": {"op": "JUMPDEST", "path": "0", "offset": [4834, 4839], "fn": "SafeMath.mul"}, "2835": {"op": "DIV", "path": "0", "offset": [4834, 4839], "fn": "SafeMath.mul"}, "2836": {"op": "EQ", "path": "0", "offset": [4834, 4844], "fn": "SafeMath.mul", "branch": 60}, "2837": {"op": "PUSH2", "value": "0xAEF", "path": "0", "offset": [4826, 4882], "fn": "SafeMath.mul"}, "2840": {"op": "JUMPI", "path": "0", "offset": [4826, 4882], "fn": "SafeMath.mul", "branch": 60}, "2841": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [4826, 4882], "fn": "SafeMath.mul"}, "2843": {"op": "MLOAD", "path": "0", "offset": [4826, 4882], "fn": "SafeMath.mul"}, "2844": {"op": "PUSH3", "value": "0x461BCD"}, "2848": {"op": "PUSH1", "value": "0xE5"}, "2850": {"op": "SHL"}, "2851": {"op": "DUP2", "path": "0", "offset": [4826, 4882], "fn": "SafeMath.mul"}, "2852": {"op": "MSTORE", "path": "0", "offset": [4826, 4882], "fn": "SafeMath.mul"}, "2853": {"op": "PUSH1", "value": "0x4", "path": "0", "offset": [4826, 4882], "fn": "SafeMath.mul"}, "2855": {"op": "ADD", "path": "0", "offset": [4826, 4882], "fn": "SafeMath.mul"}, "2856": {"op": "DUP1", "path": "0", "offset": [4826, 4882], "fn": "SafeMath.mul"}, "2857": {"op": "DUP1", "path": "0", "offset": [4826, 4882], "fn": "SafeMath.mul"}, "2858": {"op": "PUSH1", "value": "0x20", "path": "0", "offset": [4826, 4882], "fn": "SafeMath.mul"}, "2860": {"op": "ADD", "path": "0", "offset": [4826, 4882], "fn": "SafeMath.mul"}, "2861": {"op": "DUP3", "path": "0", "offset": [4826, 4882], "fn": "SafeMath.mul"}, "2862": {"op": "DUP2", "path": "0", "offset": [4826, 4882], "fn": "SafeMath.mul"}, "2863": {"op": "SUB", "path": "0", "offset": [4826, 4882], "fn": "SafeMath.mul"}, "2864": {"op": "DUP3", "path": "0", "offset": [4826, 4882], "fn": "SafeMath.mul"}, "2865": {"op": "MSTORE", "path": "0", "offset": [4826, 4882], "fn": "SafeMath.mul"}, "2866": {"op": "PUSH1", "value": "0x21", "path": "0", "offset": [4826, 4882], "fn": "SafeMath.mul"}, "2868": {"op": "DUP2", "path": "0", "offset": [4826, 4882], "fn": "SafeMath.mul"}, "2869": {"op": "MSTORE", "path": "0", "offset": [4826, 4882], "fn": "SafeMath.mul"}, "2870": {"op": "PUSH1", "value": "0x20", "path": "0", "offset": [4826, 4882], "fn": "SafeMath.mul"}, "2872": {"op": "ADD", "path": "0", "offset": [4826, 4882], "fn": "SafeMath.mul"}, "2873": {"op": "DUP1", "path": "0", "offset": [4826, 4882], "fn": "SafeMath.mul"}, "2874": {"op": "PUSH2", "value": "0x1137", "path": "0", "offset": [4826, 4882], "fn": "SafeMath.mul"}, "2877": {"op": "PUSH1", "value": "0x21", "path": "0", "offset": [4826, 4882], "fn": "SafeMath.mul"}, "2879": {"op": "SWAP2", "path": "0", "offset": [4826, 4882], "fn": "SafeMath.mul"}, "2880": {"op": "CODECOPY", "path": "0", "offset": [4826, 4882], "fn": "SafeMath.mul"}, "2881": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [4826, 4882], "fn": "SafeMath.mul"}, "2883": {"op": "ADD", "path": "0", "offset": [4826, 4882], "fn": "SafeMath.mul"}, "2884": {"op": "SWAP2", "path": "0", "offset": [4826, 4882], "fn": "SafeMath.mul"}, "2885": {"op": "POP", "path": "0", "offset": [4826, 4882], "fn": "SafeMath.mul"}, "2886": {"op": "POP", "path": "0", "offset": [4826, 4882], "fn": "SafeMath.mul"}, "2887": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [4826, 4882], "fn": "SafeMath.mul"}, "2889": {"op": "MLOAD", "path": "0", "offset": [4826, 4882], "fn": "SafeMath.mul"}, "2890": {"op": "DUP1", "path": "0", "offset": [4826, 4882], "fn": "SafeMath.mul"}, "2891": {"op": "SWAP2", "path": "0", "offset": [4826, 4882], "fn": "SafeMath.mul"}, "2892": {"op": "SUB", "path": "0", "offset": [4826, 4882], "fn": "SafeMath.mul"}, "2893": {"op": "SWAP1", "path": "0", "offset": [4826, 4882], "fn": "SafeMath.mul"}, "2894": {"op": "REVERT", "path": "0", "offset": [4826, 4882], "fn": "SafeMath.mul"}, "2895": {"op": "JUMPDEST", "path": "0", "offset": [5363, 5493], "fn": "SafeMath.div"}, "2896": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [5421, 5428], "fn": "SafeMath.div"}, "2898": {"op": "PUSH2", "value": "0xAEF", "path": "0", "offset": [5447, 5486], "fn": "SafeMath.div", "statement": 31}, "2901": {"op": "DUP4", "path": "0", "offset": [5451, 5452], "fn": "SafeMath.div"}, "2902": {"op": "DUP4", "path": "0", "offset": [5454, 5455], "fn": "SafeMath.div"}, "2903": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [5447, 5486], "fn": "SafeMath.div"}, "2905": {"op": "MLOAD", "path": "0", "offset": [5447, 5486], "fn": "SafeMath.div"}, "2906": {"op": "DUP1", "path": "0", "offset": [5447, 5486], "fn": "SafeMath.div"}, "2907": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [5447, 5486], "fn": "SafeMath.div"}, "2909": {"op": "ADD", "path": "0", "offset": [5447, 5486], "fn": "SafeMath.div"}, "2910": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [5447, 5486], "fn": "SafeMath.div"}, "2912": {"op": "MSTORE", "path": "0", "offset": [5447, 5486], "fn": "SafeMath.div"}, "2913": {"op": "DUP1", "path": "0", "offset": [5447, 5486], "fn": "SafeMath.div"}, "2914": {"op": "PUSH1", "value": "0x1A", "path": "0", "offset": [5447, 5486], "fn": "SafeMath.div"}, "2916": {"op": "DUP2", "path": "0", "offset": [5447, 5486], "fn": "SafeMath.div"}, "2917": {"op": "MSTORE", "path": "0", "offset": [5447, 5486], "fn": "SafeMath.div"}, "2918": {"op": "PUSH1", "value": "0x20", "path": "0", "offset": [5447, 5486], "fn": "SafeMath.div"}, "2920": {"op": "ADD", "path": "0", "offset": [5447, 5486], "fn": "SafeMath.div"}, "2921": {"op": "PUSH32", "value": "0x536166654D6174683A206469766973696F6E206279207A65726F000000000000", "path": "0", "offset": [5447, 5486], "fn": "SafeMath.div"}, "2954": {"op": "DUP2", "path": "0", "offset": [5447, 5486], "fn": "SafeMath.div"}, "2955": {"op": "MSTORE", "path": "0", "offset": [5447, 5486], "fn": "SafeMath.div"}, "2956": {"op": "POP", "path": "0", "offset": [5447, 5486], "fn": "SafeMath.div"}, "2957": {"op": "PUSH2", "value": "0xE57", "path": "0", "offset": [5447, 5450], "fn": "SafeMath.div"}, "2960": {"op": "JUMP", "jump": "i", "path": "0", "offset": [5447, 5486], "fn": "SafeMath.div"}, "2961": {"op": "JUMPDEST", "path": "0", "offset": [3124, 3300], "fn": "SafeMath.add"}, "2962": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [3182, 3189], "fn": "SafeMath.add"}, "2964": {"op": "DUP3", "path": "0", "offset": [3213, 3218], "fn": "SafeMath.add"}, "2965": {"op": "DUP3", "path": "0", "offset": [3213, 3218], "fn": "SafeMath.add"}, "2966": {"op": "ADD", "path": "0", "offset": [3213, 3218], "fn": "SafeMath.add"}, "2967": {"op": "DUP4", "path": "0", "offset": [3236, 3242], "fn": "SafeMath.add", "statement": 32}, "2968": {"op": "DUP2", "path": "0", "offset": [3236, 3242], "fn": "SafeMath.add"}, "2969": {"op": "LT", "path": "0", "offset": [3236, 3242], "fn": "SafeMath.add"}, "2970": {"op": "ISZERO", "path": "0", "offset": [3236, 3242], "fn": "SafeMath.add", "branch": 61}, "2971": {"op": "PUSH2", "value": "0xAEF", "path": "0", "offset": [3228, 3274], "fn": "SafeMath.add"}, "2974": {"op": "JUMPI", "path": "0", "offset": [3228, 3274], "fn": "SafeMath.add", "branch": 61}, "2975": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [3228, 3274], "fn": "SafeMath.add"}, "2977": {"op": "DUP1", "path": "0", "offset": [3228, 3274], "fn": "SafeMath.add"}, "2978": {"op": "MLOAD", "path": "0", "offset": [3228, 3274], "fn": "SafeMath.add"}, "2979": {"op": "PUSH3", "value": "0x461BCD"}, "2983": {"op": "PUSH1", "value": "0xE5"}, "2985": {"op": "SHL"}, "2986": {"op": "DUP2", "path": "0", "offset": [3228, 3274], "fn": "SafeMath.add"}, "2987": {"op": "MSTORE", "path": "0", "offset": [3228, 3274], "fn": "SafeMath.add"}, "2988": {"op": "PUSH1", "value": "0x20", "path": "0", "offset": [3228, 3274], "fn": "SafeMath.add"}, "2990": {"op": "PUSH1", "value": "0x4", "path": "0", "offset": [3228, 3274], "fn": "SafeMath.add"}, "2992": {"op": "DUP3", "path": "0", "offset": [3228, 3274], "fn": "SafeMath.add"}, "2993": {"op": "ADD", "path": "0", "offset": [3228, 3274], "fn": "SafeMath.add"}, "2994": {"op": "MSTORE", "path": "0", "offset": [3228, 3274], "fn": "SafeMath.add"}, "2995": {"op": "PUSH1", "value": "0x1B", "path": "0", "offset": [3228, 3274], "fn": "SafeMath.add"}, "2997": {"op": "PUSH1", "value": "0x24", "path": "0", "offset": [3228, 3274], "fn": "SafeMath.add"}, "2999": {"op": "DUP3", "path": "0", "offset": [3228, 3274], "fn": "SafeMath.add"}, "3000": {"op": "ADD", "path": "0", "offset": [3228, 3274], "fn": "SafeMath.add"}, "3001": {"op": "MSTORE", "path": "0", "offset": [3228, 3274], "fn": "SafeMath.add"}, "3002": {"op": "PUSH32", "value": "0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000", "path": "0", "offset": [3228, 3274], "fn": "SafeMath.add"}, "3035": {"op": "PUSH1", "value": "0x44", "path": "0", "offset": [3228, 3274], "fn": "SafeMath.add"}, "3037": {"op": "DUP3", "path": "0", "offset": [3228, 3274], "fn": "SafeMath.add"}, "3038": {"op": "ADD", "path": "0", "offset": [3228, 3274], "fn": "SafeMath.add"}, "3039": {"op": "MSTORE", "path": "0", "offset": [3228, 3274], "fn": "SafeMath.add"}, "3040": {"op": "SWAP1", "path": "0", "offset": [3228, 3274], "fn": "SafeMath.add"}, "3041": {"op": "MLOAD", "path": "0", "offset": [3228, 3274], "fn": "SafeMath.add"}, "3042": {"op": "SWAP1", "path": "0", "offset": [3228, 3274], "fn": "SafeMath.add"}, "3043": {"op": "DUP2", "path": "0", "offset": [3228, 3274], "fn": "SafeMath.add"}, "3044": {"op": "SWAP1", "path": "0", "offset": [3228, 3274], "fn": "SafeMath.add"}, "3045": {"op": "SUB", "path": "0", "offset": [3228, 3274], "fn": "SafeMath.add"}, "3046": {"op": "PUSH1", "value": "0x64", "path": "0", "offset": [3228, 3274], "fn": "SafeMath.add"}, "3048": {"op": "ADD", "path": "0", "offset": [3228, 3274], "fn": "SafeMath.add"}, "3049": {"op": "SWAP1", "path": "0", "offset": [3228, 3274], "fn": "SafeMath.add"}, "3050": {"op": "REVERT", "path": "0", "offset": [3228, 3274], "fn": "SafeMath.add"}, "3051": {"op": "JUMPDEST", "path": "0", "offset": [21837, 22047], "fn": "LPTokenWrapper.withdraw"}, "3052": {"op": "PUSH1", "value": "0x1", "path": "0", "offset": [21903, 21915], "fn": "LPTokenWrapper.withdraw", "statement": 33}, "3054": {"op": "SLOAD", "path": "0", "offset": [21903, 21915], "fn": "LPTokenWrapper.withdraw"}, "3055": {"op": "PUSH2", "value": "0xBFE", "path": "0", "offset": [21903, 21927], "fn": "LPTokenWrapper.withdraw"}, "3058": {"op": "SWAP1", "path": "0", "offset": [21903, 21927], "fn": "LPTokenWrapper.withdraw"}, "3059": {"op": "DUP3", "path": "0", "offset": [21920, 21926], "fn": "LPTokenWrapper.withdraw"}, "3060": {"op": "PUSH4", "value": "0xFFFFFFFF", "path": "0", "offset": [21903, 21927], "fn": "LPTokenWrapper.withdraw"}, "3065": {"op": "PUSH2", "value": "0xAAD", "path": "0", "offset": [21903, 21919], "fn": "LPTokenWrapper.withdraw"}, "3068": {"op": "AND", "path": "0", "offset": [21903, 21927], "fn": "LPTokenWrapper.withdraw"}, "3069": {"op": "JUMP", "jump": "i", "path": "0", "offset": [21903, 21927], "fn": "LPTokenWrapper.withdraw"}, "3070": {"op": "JUMPDEST", "path": "0", "offset": [21903, 21927], "fn": "LPTokenWrapper.withdraw"}, "3071": {"op": "PUSH1", "value": "0x1", "path": "0", "offset": [21888, 21900], "fn": "LPTokenWrapper.withdraw"}, "3073": {"op": "SSTORE", "path": "0", "offset": [21888, 21927], "fn": "LPTokenWrapper.withdraw"}, "3074": {"op": "CALLER", "path": "0", "offset": [21971, 21981], "fn": "LPTokenWrapper.withdraw", "statement": 34}, "3075": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [21961, 21982], "fn": "LPTokenWrapper.withdraw"}, "3077": {"op": "SWAP1", "path": "0", "offset": [21961, 21982], "fn": "LPTokenWrapper.withdraw"}, "3078": {"op": "DUP2", "path": "0", "offset": [21961, 21982], "fn": "LPTokenWrapper.withdraw"}, "3079": {"op": "MSTORE", "path": "0", "offset": [21961, 21982], "fn": "LPTokenWrapper.withdraw"}, "3080": {"op": "PUSH1", "value": "0x2", "path": "0", "offset": [21961, 21970], "fn": "LPTokenWrapper.withdraw"}, "3082": {"op": "PUSH1", "value": "0x20", "path": "0", "offset": [21961, 21982], "fn": "LPTokenWrapper.withdraw"}, "3084": {"op": "MSTORE", "path": "0", "offset": [21961, 21982], "fn": "LPTokenWrapper.withdraw"}, "3085": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [21961, 21982], "fn": "LPTokenWrapper.withdraw"}, "3087": {"op": "SWAP1", "path": "0", "offset": [21961, 21982], "fn": "LPTokenWrapper.withdraw"}, "3088": {"op": "KECCAK256", "path": "0", "offset": [21961, 21982], "fn": "LPTokenWrapper.withdraw"}, "3089": {"op": "SLOAD", "path": "0", "offset": [21961, 21982], "fn": "LPTokenWrapper.withdraw"}, "3090": {"op": "PUSH2", "value": "0xC21", "path": "0", "offset": [21961, 21994], "fn": "LPTokenWrapper.withdraw"}, "3093": {"op": "SWAP1", "path": "0", "offset": [21961, 21994], "fn": "LPTokenWrapper.withdraw"}, "3094": {"op": "DUP3", "path": "0", "offset": [21987, 21993], "fn": "LPTokenWrapper.withdraw"}, "3095": {"op": "PUSH4", "value": "0xFFFFFFFF", "path": "0", "offset": [21961, 21994], "fn": "LPTokenWrapper.withdraw"}, "3100": {"op": "PUSH2", "value": "0xAAD", "path": "0", "offset": [21961, 21986], "fn": "LPTokenWrapper.withdraw"}, "3103": {"op": "AND", "path": "0", "offset": [21961, 21994], "fn": "LPTokenWrapper.withdraw"}, "3104": {"op": "JUMP", "jump": "i", "path": "0", "offset": [21961, 21994], "fn": "LPTokenWrapper.withdraw"}, "3105": {"op": "JUMPDEST", "path": "0", "offset": [21961, 21994], "fn": "LPTokenWrapper.withdraw"}, "3106": {"op": "CALLER", "path": "0", "offset": [21947, 21957], "fn": "LPTokenWrapper.withdraw"}, "3107": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [21937, 21958], "fn": "LPTokenWrapper.withdraw"}, "3109": {"op": "DUP2", "path": "0", "offset": [21937, 21958], "fn": "LPTokenWrapper.withdraw"}, "3110": {"op": "DUP2", "path": "0", "offset": [21937, 21958], "fn": "LPTokenWrapper.withdraw"}, "3111": {"op": "MSTORE", "path": "0", "offset": [21937, 21958], "fn": "LPTokenWrapper.withdraw"}, "3112": {"op": "PUSH1", "value": "0x2", "path": "0", "offset": [21937, 21946], "fn": "LPTokenWrapper.withdraw"}, "3114": {"op": "PUSH1", "value": "0x20", "path": "0", "offset": [21937, 21958], "fn": "LPTokenWrapper.withdraw"}, "3116": {"op": "MSTORE", "path": "0", "offset": [21937, 21958], "fn": "LPTokenWrapper.withdraw"}, "3117": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [21937, 21958], "fn": "LPTokenWrapper.withdraw"}, "3119": {"op": "DUP2", "path": "0", "offset": [21937, 21958], "fn": "LPTokenWrapper.withdraw"}, "3120": {"op": "KECCAK256", "path": "0", "offset": [21937, 21958], "fn": "LPTokenWrapper.withdraw"}, "3121": {"op": "SWAP3", "path": "0", "offset": [21937, 21994], "fn": "LPTokenWrapper.withdraw"}, "3122": {"op": "SWAP1", "path": "0", "offset": [21937, 21994], "fn": "LPTokenWrapper.withdraw"}, "3123": {"op": "SWAP3", "path": "0", "offset": [21937, 21994], "fn": "LPTokenWrapper.withdraw"}, "3124": {"op": "SSTORE", "path": "0", "offset": [21937, 21994], "fn": "LPTokenWrapper.withdraw"}, "3125": {"op": "SWAP1", "path": "0", "offset": [22004, 22007], "fn": "LPTokenWrapper.withdraw", "statement": 35}, "3126": {"op": "SLOAD", "path": "0", "offset": [22004, 22007], "fn": "LPTokenWrapper.withdraw"}, "3127": {"op": "PUSH2", "value": "0xAAA", "path": "0", "offset": [22004, 22040], "fn": "LPTokenWrapper.withdraw"}, "3130": {"op": "SWAP2", "path": "0", "offset": [22004, 22040], "fn": "LPTokenWrapper.withdraw"}, "3131": {"op": "PUSH1", "value": "0x1"}, "3133": {"op": "PUSH1", "value": "0x1"}, "3135": {"op": "PUSH1", "value": "0xA0"}, "3137": {"op": "SHL"}, "3138": {"op": "SUB"}, "3139": {"op": "SWAP1", "path": "0", "offset": [22004, 22007], "fn": "LPTokenWrapper.withdraw"}, "3140": {"op": "SWAP2", "path": "0", "offset": [22004, 22007], "fn": "LPTokenWrapper.withdraw"}, "3141": {"op": "AND", "path": "0", "offset": [22004, 22007], "fn": "LPTokenWrapper.withdraw"}, "3142": {"op": "SWAP1", "path": "0", "offset": [22004, 22007], "fn": "LPTokenWrapper.withdraw"}, "3143": {"op": "DUP4", "path": "0", "offset": [22033, 22039], "fn": "LPTokenWrapper.withdraw"}, "3144": {"op": "PUSH2", "value": "0xC50", "path": "0", "offset": [22004, 22020], "fn": "LPTokenWrapper.withdraw"}, "3147": {"op": "JUMP", "jump": "i", "path": "0", "offset": [22004, 22040], "fn": "LPTokenWrapper.withdraw"}, "3148": {"op": "JUMPDEST", "path": "0", "offset": [8404, 8500], "fn": "Context._msgSender"}, "3149": {"op": "CALLER", "path": "0", "offset": [8483, 8493], "fn": "Context._msgSender", "statement": 36}, "3150": {"op": "SWAP1", "path": "0", "offset": [8404, 8500], "fn": "Context._msgSender"}, "3151": {"op": "JUMP", "jump": "o", "path": "0", "offset": [8404, 8500], "fn": "Context._msgSender"}, "3152": {"op": "JUMPDEST", "path": "0", "offset": [17532, 17706], "fn": "SafeERC20.safeTransfer"}, "3153": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [17640, 17698], "fn": "SafeERC20.safeTransfer", "statement": 37}, "3155": {"op": "DUP1", "path": "0", "offset": [17640, 17698], "fn": "SafeERC20.safeTransfer"}, "3156": {"op": "MLOAD", "path": "0", "offset": [17640, 17698], "fn": "SafeERC20.safeTransfer"}, "3157": {"op": "PUSH1", "value": "0x1"}, "3159": {"op": "PUSH1", "value": "0x1"}, "3161": {"op": "PUSH1", "value": "0xA0"}, "3163": {"op": "SHL"}, "3164": {"op": "SUB"}, "3165": {"op": "DUP5", "path": "0", "offset": [17640, 17698], "fn": "SafeERC20.safeTransfer"}, "3166": {"op": "AND", "path": "0", "offset": [17640, 17698], "fn": "SafeERC20.safeTransfer"}, "3167": {"op": "PUSH1", "value": "0x24", "path": "0", "offset": [17640, 17698], "fn": "SafeERC20.safeTransfer"}, "3169": {"op": "DUP3", "path": "0", "offset": [17640, 17698], "fn": "SafeERC20.safeTransfer"}, "3170": {"op": "ADD", "path": "0", "offset": [17640, 17698], "fn": "SafeERC20.safeTransfer"}, "3171": {"op": "MSTORE", "path": "0", "offset": [17640, 17698], "fn": "SafeERC20.safeTransfer"}, "3172": {"op": "PUSH1", "value": "0x44", "path": "0", "offset": [17640, 17698], "fn": "SafeERC20.safeTransfer"}, "3174": {"op": "DUP1", "path": "0", "offset": [17640, 17698], "fn": "SafeERC20.safeTransfer"}, "3175": {"op": "DUP3", "path": "0", "offset": [17640, 17698], "fn": "SafeERC20.safeTransfer"}, "3176": {"op": "ADD", "path": "0", "offset": [17640, 17698], "fn": "SafeERC20.safeTransfer"}, "3177": {"op": "DUP5", "path": "0", "offset": [17640, 17698], "fn": "SafeERC20.safeTransfer"}, "3178": {"op": "SWAP1", "path": "0", "offset": [17640, 17698], "fn": "SafeERC20.safeTransfer"}, "3179": {"op": "MSTORE", "path": "0", "offset": [17640, 17698], "fn": "SafeERC20.safeTransfer"}, "3180": {"op": "DUP3", "path": "0", "offset": [17640, 17698], "fn": "SafeERC20.safeTransfer"}, "3181": {"op": "MLOAD", "path": "0", "offset": [17640, 17698], "fn": "SafeERC20.safeTransfer"}, "3182": {"op": "DUP1"}, "3183": {"op": "DUP4"}, "3184": {"op": "SUB"}, "3185": {"op": "SWAP1"}, "3186": {"op": "SWAP2"}, "3187": {"op": "ADD"}, "3188": {"op": "DUP2"}, "3189": {"op": "MSTORE"}, "3190": {"op": "PUSH1", "value": "0x64", "path": "0", "offset": [17640, 17698], "fn": "SafeERC20.safeTransfer"}, "3192": {"op": "SWAP1", "path": "0", "offset": [17640, 17698], "fn": "SafeERC20.safeTransfer"}, "3193": {"op": "SWAP2", "path": "0", "offset": [17640, 17698], "fn": "SafeERC20.safeTransfer"}, "3194": {"op": "ADD", "path": "0", "offset": [17640, 17698], "fn": "SafeERC20.safeTransfer"}, "3195": {"op": "SWAP1", "path": "0", "offset": [17640, 17698], "fn": "SafeERC20.safeTransfer"}, "3196": {"op": "SWAP2", "path": "0", "offset": [17640, 17698], "fn": "SafeERC20.safeTransfer"}, "3197": {"op": "MSTORE", "path": "0", "offset": [17640, 17698], "fn": "SafeERC20.safeTransfer"}, "3198": {"op": "PUSH1", "value": "0x20", "path": "0", "offset": [17640, 17698], "fn": "SafeERC20.safeTransfer"}, "3200": {"op": "DUP2"}, "3201": {"op": "ADD"}, "3202": {"op": "DUP1"}, "3203": {"op": "MLOAD"}, "3204": {"op": "PUSH1", "value": "0x1"}, "3206": {"op": "PUSH1", "value": "0x1"}, "3208": {"op": "PUSH1", "value": "0xE0"}, "3210": {"op": "SHL"}, "3211": {"op": "SUB"}, "3212": {"op": "AND"}, "3213": {"op": "PUSH4", "value": "0xA9059CBB"}, "3218": {"op": "PUSH1", "value": "0xE0"}, "3220": {"op": "SHL"}, "3221": {"op": "OR"}, "3222": {"op": "SWAP1"}, "3223": {"op": "MSTORE"}, "3224": {"op": "PUSH2", "value": "0xCA2", "path": "0", "offset": [17614, 17699], "fn": "SafeERC20.safeTransfer"}, "3227": {"op": "SWAP1", "path": "0", "offset": [17614, 17699], "fn": "SafeERC20.safeTransfer"}, "3228": {"op": "DUP5", "path": "0", "offset": [17633, 17638], "fn": "SafeERC20.safeTransfer"}, "3229": {"op": "SWAP1", "path": "0", "offset": [17633, 17638], "fn": "SafeERC20.safeTransfer"}, "3230": {"op": "PUSH2", "value": "0xEBC", "path": "0", "offset": [17614, 17632], "fn": "SafeERC20.safeTransfer"}, "3233": {"op": "JUMP", "jump": "i", "path": "0", "offset": [17614, 17699], "fn": "SafeERC20.safeTransfer"}, "3234": {"op": "JUMPDEST", "path": "0", "offset": [17614, 17699], "fn": "SafeERC20.safeTransfer"}, "3235": {"op": "POP", "path": "0", "offset": [17532, 17706], "fn": "SafeERC20.safeTransfer"}, "3236": {"op": "POP", "path": "0", "offset": [17532, 17706], "fn": "SafeERC20.safeTransfer"}, "3237": {"op": "POP", "path": "0", "offset": [17532, 17706], "fn": "SafeERC20.safeTransfer"}, "3238": {"op": "JUMP", "jump": "o", "path": "0", "offset": [17532, 17706], "fn": "SafeERC20.safeTransfer"}, "3239": {"op": "JUMPDEST", "path": "0", "offset": [1850, 1954], "fn": "Math.min"}, "3240": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [1908, 1915], "fn": "Math.min"}, "3242": {"op": "DUP2", "path": "0", "offset": [1938, 1939], "fn": "Math.min", "statement": 38}, "3243": {"op": "DUP4", "path": "0", "offset": [1934, 1935], "fn": "Math.min"}, "3244": {"op": "LT", "path": "0", "offset": [1934, 1939], "fn": "Math.min", "branch": 62}, "3245": {"op": "PUSH2", "value": "0xCB6", "path": "0", "offset": [1934, 1947], "fn": "Math.min"}, "3248": {"op": "JUMPI", "path": "0", "offset": [1934, 1947], "fn": "Math.min", "branch": 62}, "3249": {"op": "DUP2", "path": "0", "offset": [1946, 1947], "fn": "Math.min"}, "3250": {"op": "PUSH2", "value": "0xAEF", "path": "0", "offset": [1934, 1947], "fn": "Math.min"}, "3253": {"op": "JUMP", "path": "0", "offset": [1934, 1947], "fn": "Math.min"}, "3254": {"op": "JUMPDEST", "path": "0", "offset": [1934, 1947], "fn": "Math.min"}, "3255": {"op": "POP"}, "3256": {"op": "SWAP1", "path": "0", "offset": [1942, 1943], "fn": "Math.min"}, "3257": {"op": "SWAP2", "path": "0", "offset": [1942, 1943], "fn": "Math.min"}, "3258": {"op": "SWAP1", "path": "0", "offset": [1850, 1954], "fn": "Math.min"}, "3259": {"op": "POP"}, "3260": {"op": "JUMP", "jump": "o", "path": "0", "offset": [1850, 1954], "fn": "Math.min"}, "3261": {"op": "JUMPDEST", "path": "0", "offset": [21605, 21831], "fn": "LPTokenWrapper.stake"}, "3262": {"op": "PUSH1", "value": "0x1", "path": "0", "offset": [21668, 21680], "fn": "LPTokenWrapper.stake", "statement": 39}, "3264": {"op": "SLOAD", "path": "0", "offset": [21668, 21680], "fn": "LPTokenWrapper.stake"}, "3265": {"op": "PUSH2", "value": "0xCD0", "path": "0", "offset": [21668, 21692], "fn": "LPTokenWrapper.stake"}, "3268": {"op": "SWAP1", "path": "0", "offset": [21668, 21692], "fn": "LPTokenWrapper.stake"}, "3269": {"op": "DUP3", "path": "0", "offset": [21685, 21691], "fn": "LPTokenWrapper.stake"}, "3270": {"op": "PUSH4", "value": "0xFFFFFFFF", "path": "0", "offset": [21668, 21692], "fn": "LPTokenWrapper.stake"}, "3275": {"op": "PUSH2", "value": "0xB91", "path": "0", "offset": [21668, 21684], "fn": "LPTokenWrapper.stake"}, "3278": {"op": "AND", "path": "0", "offset": [21668, 21692], "fn": "LPTokenWrapper.stake"}, "3279": {"op": "JUMP", "jump": "i", "path": "0", "offset": [21668, 21692], "fn": "LPTokenWrapper.stake"}, "3280": {"op": "JUMPDEST", "path": "0", "offset": [21668, 21692], "fn": "LPTokenWrapper.stake"}, "3281": {"op": "PUSH1", "value": "0x1", "path": "0", "offset": [21653, 21665], "fn": "LPTokenWrapper.stake"}, "3283": {"op": "SSTORE", "path": "0", "offset": [21653, 21692], "fn": "LPTokenWrapper.stake"}, "3284": {"op": "CALLER", "path": "0", "offset": [21736, 21746], "fn": "LPTokenWrapper.stake", "statement": 40}, "3285": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [21726, 21747], "fn": "LPTokenWrapper.stake"}, "3287": {"op": "SWAP1", "path": "0", "offset": [21726, 21747], "fn": "LPTokenWrapper.stake"}, "3288": {"op": "DUP2", "path": "0", "offset": [21726, 21747], "fn": "LPTokenWrapper.stake"}, "3289": {"op": "MSTORE", "path": "0", "offset": [21726, 21747], "fn": "LPTokenWrapper.stake"}, "3290": {"op": "PUSH1", "value": "0x2", "path": "0", "offset": [21726, 21735], "fn": "LPTokenWrapper.stake"}, "3292": {"op": "PUSH1", "value": "0x20", "path": "0", "offset": [21726, 21747], "fn": "LPTokenWrapper.stake"}, "3294": {"op": "MSTORE", "path": "0", "offset": [21726, 21747], "fn": "LPTokenWrapper.stake"}, "3295": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [21726, 21747], "fn": "LPTokenWrapper.stake"}, "3297": {"op": "SWAP1", "path": "0", "offset": [21726, 21747], "fn": "LPTokenWrapper.stake"}, "3298": {"op": "KECCAK256", "path": "0", "offset": [21726, 21747], "fn": "LPTokenWrapper.stake"}, "3299": {"op": "SLOAD", "path": "0", "offset": [21726, 21747], "fn": "LPTokenWrapper.stake"}, "3300": {"op": "PUSH2", "value": "0xCF3", "path": "0", "offset": [21726, 21759], "fn": "LPTokenWrapper.stake"}, "3303": {"op": "SWAP1", "path": "0", "offset": [21726, 21759], "fn": "LPTokenWrapper.stake"}, "3304": {"op": "DUP3", "path": "0", "offset": [21752, 21758], "fn": "LPTokenWrapper.stake"}, "3305": {"op": "PUSH4", "value": "0xFFFFFFFF", "path": "0", "offset": [21726, 21759], "fn": "LPTokenWrapper.stake"}, "3310": {"op": "PUSH2", "value": "0xB91", "path": "0", "offset": [21726, 21751], "fn": "LPTokenWrapper.stake"}, "3313": {"op": "AND", "path": "0", "offset": [21726, 21759], "fn": "LPTokenWrapper.stake"}, "3314": {"op": "JUMP", "jump": "i", "path": "0", "offset": [21726, 21759], "fn": "LPTokenWrapper.stake"}, "3315": {"op": "JUMPDEST", "path": "0", "offset": [21726, 21759], "fn": "LPTokenWrapper.stake"}, "3316": {"op": "CALLER", "path": "0", "offset": [21712, 21722], "fn": "LPTokenWrapper.stake"}, "3317": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [21702, 21723], "fn": "LPTokenWrapper.stake"}, "3319": {"op": "DUP2", "path": "0", "offset": [21702, 21723], "fn": "LPTokenWrapper.stake"}, "3320": {"op": "DUP2", "path": "0", "offset": [21702, 21723], "fn": "LPTokenWrapper.stake"}, "3321": {"op": "MSTORE", "path": "0", "offset": [21702, 21723], "fn": "LPTokenWrapper.stake"}, "3322": {"op": "PUSH1", "value": "0x2", "path": "0", "offset": [21702, 21711], "fn": "LPTokenWrapper.stake"}, "3324": {"op": "PUSH1", "value": "0x20", "path": "0", "offset": [21702, 21723], "fn": "LPTokenWrapper.stake"}, "3326": {"op": "MSTORE", "path": "0", "offset": [21702, 21723], "fn": "LPTokenWrapper.stake"}, "3327": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [21702, 21723], "fn": "LPTokenWrapper.stake"}, "3329": {"op": "DUP2", "path": "0", "offset": [21702, 21723], "fn": "LPTokenWrapper.stake"}, "3330": {"op": "KECCAK256", "path": "0", "offset": [21702, 21723], "fn": "LPTokenWrapper.stake"}, "3331": {"op": "SWAP3", "path": "0", "offset": [21702, 21759], "fn": "LPTokenWrapper.stake"}, "3332": {"op": "SWAP1", "path": "0", "offset": [21702, 21759], "fn": "LPTokenWrapper.stake"}, "3333": {"op": "SWAP3", "path": "0", "offset": [21702, 21759], "fn": "LPTokenWrapper.stake"}, "3334": {"op": "SSTORE", "path": "0", "offset": [21702, 21759], "fn": "LPTokenWrapper.stake"}, "3335": {"op": "SWAP1", "path": "0", "offset": [21769, 21772], "fn": "LPTokenWrapper.stake", "statement": 41}, "3336": {"op": "SLOAD", "path": "0", "offset": [21769, 21772], "fn": "LPTokenWrapper.stake"}, "3337": {"op": "PUSH2", "value": "0xAAA", "path": "0", "offset": [21769, 21824], "fn": "LPTokenWrapper.stake"}, "3340": {"op": "SWAP2", "path": "0", "offset": [21769, 21824], "fn": "LPTokenWrapper.stake"}, "3341": {"op": "PUSH1", "value": "0x1"}, "3343": {"op": "PUSH1", "value": "0x1"}, "3345": {"op": "PUSH1", "value": "0xA0"}, "3347": {"op": "SHL"}, "3348": {"op": "SUB"}, "3349": {"op": "SWAP1", "path": "0", "offset": [21769, 21772], "fn": "LPTokenWrapper.stake"}, "3350": {"op": "SWAP2", "path": "0", "offset": [21769, 21772], "fn": "LPTokenWrapper.stake"}, "3351": {"op": "AND", "path": "0", "offset": [21769, 21772], "fn": "LPTokenWrapper.stake"}, "3352": {"op": "SWAP1", "path": "0", "offset": [21769, 21772], "fn": "LPTokenWrapper.stake"}, "3353": {"op": "ADDRESS", "path": "0", "offset": [21810, 21814], "fn": "LPTokenWrapper.stake"}, "3354": {"op": "DUP5", "path": "0", "offset": [21817, 21823], "fn": "LPTokenWrapper.stake"}, "3355": {"op": "PUSH2", "value": "0x107A", "path": "0", "offset": [21769, 21789], "fn": "LPTokenWrapper.stake"}, "3358": {"op": "JUMP", "jump": "i", "path": "0", "offset": [21769, 21824], "fn": "LPTokenWrapper.stake"}, "3359": {"op": "JUMPDEST", "path": "0", "offset": [10872, 11097], "fn": "Ownable._transferOwnership"}, "3360": {"op": "PUSH1", "value": "0x1"}, "3362": {"op": "PUSH1", "value": "0x1"}, "3364": {"op": "PUSH1", "value": "0xA0"}, "3366": {"op": "SHL"}, "3367": {"op": "SUB"}, "3368": {"op": "DUP2", "path": "0", "offset": [10945, 10967], "fn": "Ownable._transferOwnership", "statement": 42}, "3369": {"op": "AND", "path": "0", "offset": [10945, 10967], "fn": "Ownable._transferOwnership", "branch": 63}, "3370": {"op": "PUSH2", "value": "0xD64", "path": "0", "offset": [10937, 11010], "fn": "Ownable._transferOwnership"}, "3373": {"op": "JUMPI", "path": "0", "offset": [10937, 11010], "fn": "Ownable._transferOwnership", "branch": 63}, "3374": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [10937, 11010], "fn": "Ownable._transferOwnership"}, "3376": {"op": "MLOAD", "path": "0", "offset": [10937, 11010], "fn": "Ownable._transferOwnership"}, "3377": {"op": "PUSH3", "value": "0x461BCD"}, "3381": {"op": "PUSH1", "value": "0xE5"}, "3383": {"op": "SHL"}, "3384": {"op": "DUP2", "path": "0", "offset": [10937, 11010], "fn": "Ownable._transferOwnership"}, "3385": {"op": "MSTORE", "path": "0", "offset": [10937, 11010], "fn": "Ownable._transferOwnership"}, "3386": {"op": "PUSH1", "value": "0x4", "path": "0", "offset": [10937, 11010], "fn": "Ownable._transferOwnership"}, "3388": {"op": "ADD", "path": "0", "offset": [10937, 11010], "fn": "Ownable._transferOwnership"}, "3389": {"op": "DUP1", "path": "0", "offset": [10937, 11010], "fn": "Ownable._transferOwnership"}, "3390": {"op": "DUP1", "path": "0", "offset": [10937, 11010], "fn": "Ownable._transferOwnership"}, "3391": {"op": "PUSH1", "value": "0x20", "path": "0", "offset": [10937, 11010], "fn": "Ownable._transferOwnership"}, "3393": {"op": "ADD", "path": "0", "offset": [10937, 11010], "fn": "Ownable._transferOwnership"}, "3394": {"op": "DUP3", "path": "0", "offset": [10937, 11010], "fn": "Ownable._transferOwnership"}, "3395": {"op": "DUP2", "path": "0", "offset": [10937, 11010], "fn": "Ownable._transferOwnership"}, "3396": {"op": "SUB", "path": "0", "offset": [10937, 11010], "fn": "Ownable._transferOwnership"}, "3397": {"op": "DUP3", "path": "0", "offset": [10937, 11010], "fn": "Ownable._transferOwnership"}, "3398": {"op": "MSTORE", "path": "0", "offset": [10937, 11010], "fn": "Ownable._transferOwnership"}, "3399": {"op": "PUSH1", "value": "0x26", "path": "0", "offset": [10937, 11010], "fn": "Ownable._transferOwnership"}, "3401": {"op": "DUP2", "path": "0", "offset": [10937, 11010], "fn": "Ownable._transferOwnership"}, "3402": {"op": "MSTORE", "path": "0", "offset": [10937, 11010], "fn": "Ownable._transferOwnership"}, "3403": {"op": "PUSH1", "value": "0x20", "path": "0", "offset": [10937, 11010], "fn": "Ownable._transferOwnership"}, "3405": {"op": "ADD", "path": "0", "offset": [10937, 11010], "fn": "Ownable._transferOwnership"}, "3406": {"op": "DUP1", "path": "0", "offset": [10937, 11010], "fn": "Ownable._transferOwnership"}, "3407": {"op": "PUSH2", "value": "0x1111", "path": "0", "offset": [10937, 11010], "fn": "Ownable._transferOwnership"}, "3410": {"op": "PUSH1", "value": "0x26", "path": "0", "offset": [10937, 11010], "fn": "Ownable._transferOwnership"}, "3412": {"op": "SWAP2", "path": "0", "offset": [10937, 11010], "fn": "Ownable._transferOwnership"}, "3413": {"op": "CODECOPY", "path": "0", "offset": [10937, 11010], "fn": "Ownable._transferOwnership"}, "3414": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [10937, 11010], "fn": "Ownable._transferOwnership"}, "3416": {"op": "ADD", "path": "0", "offset": [10937, 11010], "fn": "Ownable._transferOwnership"}, "3417": {"op": "SWAP2", "path": "0", "offset": [10937, 11010], "fn": "Ownable._transferOwnership"}, "3418": {"op": "POP", "path": "0", "offset": [10937, 11010], "fn": "Ownable._transferOwnership"}, "3419": {"op": "POP", "path": "0", "offset": [10937, 11010], "fn": "Ownable._transferOwnership"}, "3420": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [10937, 11010], "fn": "Ownable._transferOwnership"}, "3422": {"op": "MLOAD", "path": "0", "offset": [10937, 11010], "fn": "Ownable._transferOwnership"}, "3423": {"op": "DUP1", "path": "0", "offset": [10937, 11010], "fn": "Ownable._transferOwnership"}, "3424": {"op": "SWAP2", "path": "0", "offset": [10937, 11010], "fn": "Ownable._transferOwnership"}, "3425": {"op": "SUB", "path": "0", "offset": [10937, 11010], "fn": "Ownable._transferOwnership"}, "3426": {"op": "SWAP1", "path": "0", "offset": [10937, 11010], "fn": "Ownable._transferOwnership"}, "3427": {"op": "REVERT", "path": "0", "offset": [10937, 11010], "fn": "Ownable._transferOwnership"}, "3428": {"op": "JUMPDEST", "path": "0", "offset": [10937, 11010], "fn": "Ownable._transferOwnership"}, "3429": {"op": "PUSH1", "value": "0x3", "path": "0", "offset": [11046, 11052], "fn": "Ownable._transferOwnership", "statement": 43}, "3431": {"op": "SLOAD", "path": "0", "offset": [11046, 11052], "fn": "Ownable._transferOwnership"}, "3432": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [11025, 11063], "fn": "Ownable._transferOwnership"}, "3434": {"op": "MLOAD", "path": "0", "offset": [11025, 11063], "fn": "Ownable._transferOwnership"}, "3435": {"op": "PUSH1", "value": "0x1"}, "3437": {"op": "PUSH1", "value": "0x1"}, "3439": {"op": "PUSH1", "value": "0xA0"}, "3441": {"op": "SHL"}, "3442": {"op": "SUB"}, "3443": {"op": "DUP1", "path": "0", "offset": [11025, 11063], "fn": "Ownable._transferOwnership"}, "3444": {"op": "DUP5", "path": "0", "offset": [11025, 11063], "fn": "Ownable._transferOwnership"}, "3445": {"op": "AND", "path": "0", "offset": [11025, 11063], "fn": "Ownable._transferOwnership"}, "3446": {"op": "SWAP3", "path": "0", "offset": [11025, 11063], "fn": "Ownable._transferOwnership"}, "3447": {"op": "AND", "path": "0", "offset": [11046, 11052], "fn": "Ownable._transferOwnership"}, "3448": {"op": "SWAP1", "path": "0", "offset": [11046, 11052], "fn": "Ownable._transferOwnership"}, "3449": {"op": "PUSH32", "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0", "path": "0", "offset": [11025, 11063], "fn": "Ownable._transferOwnership"}, "3482": {"op": "SWAP1", "path": "0", "offset": [11025, 11063], "fn": "Ownable._transferOwnership"}, "3483": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [11046, 11052], "fn": "Ownable._transferOwnership"}, "3485": {"op": "SWAP1", "path": "0", "offset": [11046, 11052], "fn": "Ownable._transferOwnership"}, "3486": {"op": "LOG3", "path": "0", "offset": [11025, 11063], "fn": "Ownable._transferOwnership"}, "3487": {"op": "PUSH1", "value": "0x3", "path": "0", "offset": [11073, 11079], "fn": "Ownable._transferOwnership", "statement": 44}, "3489": {"op": "DUP1", "path": "0", "offset": [11073, 11090], "fn": "Ownable._transferOwnership"}, "3490": {"op": "SLOAD", "path": "0", "offset": [11073, 11090], "fn": "Ownable._transferOwnership"}, "3491": {"op": "PUSH1", "value": "0x1"}, "3493": {"op": "PUSH1", "value": "0x1"}, "3495": {"op": "PUSH1", "value": "0xA0"}, "3497": {"op": "SHL"}, "3498": {"op": "SUB"}, "3499": {"op": "NOT"}, "3500": {"op": "AND", "path": "0", "offset": [11073, 11090], "fn": "Ownable._transferOwnership"}, "3501": {"op": "PUSH1", "value": "0x1"}, "3503": {"op": "PUSH1", "value": "0x1"}, "3505": {"op": "PUSH1", "value": "0xA0"}, "3507": {"op": "SHL"}, "3508": {"op": "SUB"}, "3509": {"op": "SWAP3", "path": "0", "offset": [11073, 11090], "fn": "Ownable._transferOwnership"}, "3510": {"op": "SWAP1", "path": "0", "offset": [11073, 11090], "fn": "Ownable._transferOwnership"}, "3511": {"op": "SWAP3", "path": "0", "offset": [11073, 11090], "fn": "Ownable._transferOwnership"}, "3512": {"op": "AND", "path": "0", "offset": [11073, 11090], "fn": "Ownable._transferOwnership"}, "3513": {"op": "SWAP2", "path": "0", "offset": [11073, 11090], "fn": "Ownable._transferOwnership"}, "3514": {"op": "SWAP1", "path": "0", "offset": [11073, 11090], "fn": "Ownable._transferOwnership"}, "3515": {"op": "SWAP2", "path": "0", "offset": [11073, 11090], "fn": "Ownable._transferOwnership"}, "3516": {"op": "OR", "path": "0", "offset": [11073, 11090], "fn": "Ownable._transferOwnership"}, "3517": {"op": "SWAP1", "path": "0", "offset": [11073, 11090], "fn": "Ownable._transferOwnership"}, "3518": {"op": "SSTORE", "path": "0", "offset": [11073, 11090], "fn": "Ownable._transferOwnership"}, "3519": {"op": "JUMP", "jump": "o", "path": "0", "offset": [10872, 11097], "fn": "Ownable._transferOwnership"}, "3520": {"op": "JUMPDEST", "path": "0", "offset": [4022, 4209], "fn": "SafeMath.sub"}, "3521": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [4108, 4115], "fn": "SafeMath.sub"}, "3523": {"op": "DUP2", "path": "0", "offset": [4143, 4155], "fn": "SafeMath.sub", "statement": 45}, "3524": {"op": "DUP5", "path": "0", "offset": [4135, 4141], "fn": "SafeMath.sub"}, "3525": {"op": "DUP5", "path": "0", "offset": [4135, 4141], "fn": "SafeMath.sub"}, "3526": {"op": "GT", "path": "0", "offset": [4135, 4141], "fn": "SafeMath.sub"}, "3527": {"op": "ISZERO", "path": "0", "offset": [4135, 4141], "fn": "SafeMath.sub", "branch": 64}, "3528": {"op": "PUSH2", "value": "0xE4F", "path": "0", "offset": [4127, 4156], "fn": "SafeMath.sub"}, "3531": {"op": "JUMPI", "path": "0", "offset": [4127, 4156], "fn": "SafeMath.sub", "branch": 64}, "3532": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [4127, 4156], "fn": "SafeMath.sub"}, "3534": {"op": "MLOAD", "path": "0", "offset": [4127, 4156], "fn": "SafeMath.sub"}, "3535": {"op": "PUSH3", "value": "0x461BCD"}, "3539": {"op": "PUSH1", "value": "0xE5"}, "3541": {"op": "SHL"}, "3542": {"op": "DUP2", "path": "0", "offset": [4127, 4156], "fn": "SafeMath.sub"}, "3543": {"op": "MSTORE", "path": "0", "offset": [4127, 4156], "fn": "SafeMath.sub"}, "3544": {"op": "PUSH1", "value": "0x4", "path": "0", "offset": [4127, 4156], "fn": "SafeMath.sub"}, "3546": {"op": "ADD", "path": "0", "offset": [4127, 4156], "fn": "SafeMath.sub"}, "3547": {"op": "DUP1", "path": "0", "offset": [4127, 4156], "fn": "SafeMath.sub"}, "3548": {"op": "DUP1", "path": "0", "offset": [4127, 4156], "fn": "SafeMath.sub"}, "3549": {"op": "PUSH1", "value": "0x20", "path": "0", "offset": [4127, 4156], "fn": "SafeMath.sub"}, "3551": {"op": "ADD", "path": "0", "offset": [4127, 4156], "fn": "SafeMath.sub"}, "3552": {"op": "DUP3", "path": "0", "offset": [4127, 4156], "fn": "SafeMath.sub"}, "3553": {"op": "DUP2", "path": "0", "offset": [4127, 4156], "fn": "SafeMath.sub"}, "3554": {"op": "SUB", "path": "0", "offset": [4127, 4156], "fn": "SafeMath.sub"}, "3555": {"op": "DUP3", "path": "0", "offset": [4127, 4156], "fn": "SafeMath.sub"}, "3556": {"op": "MSTORE", "path": "0", "offset": [4127, 4156], "fn": "SafeMath.sub"}, "3557": {"op": "DUP4", "path": "0", "offset": [4127, 4156], "fn": "SafeMath.sub"}, "3558": {"op": "DUP2", "path": "0", "offset": [4127, 4156], "fn": "SafeMath.sub"}, "3559": {"op": "DUP2", "path": "0", "offset": [4127, 4156], "fn": "SafeMath.sub"}, "3560": {"op": "MLOAD", "path": "0", "offset": [4127, 4156], "fn": "SafeMath.sub"}, "3561": {"op": "DUP2", "path": "0", "offset": [4127, 4156], "fn": "SafeMath.sub"}, "3562": {"op": "MSTORE", "path": "0", "offset": [4127, 4156], "fn": "SafeMath.sub"}, "3563": {"op": "PUSH1", "value": "0x20", "path": "0", "offset": [4127, 4156], "fn": "SafeMath.sub"}, "3565": {"op": "ADD", "path": "0", "offset": [4127, 4156], "fn": "SafeMath.sub"}, "3566": {"op": "SWAP2", "path": "0", "offset": [4127, 4156], "fn": "SafeMath.sub"}, "3567": {"op": "POP", "path": "0", "offset": [4127, 4156], "fn": "SafeMath.sub"}, "3568": {"op": "DUP1", "path": "0", "offset": [4127, 4156], "fn": "SafeMath.sub"}, "3569": {"op": "MLOAD", "path": "0", "offset": [4127, 4156], "fn": "SafeMath.sub"}, "3570": {"op": "SWAP1", "path": "0", "offset": [4127, 4156], "fn": "SafeMath.sub"}, "3571": {"op": "PUSH1", "value": "0x20", "path": "0", "offset": [4127, 4156], "fn": "SafeMath.sub"}, "3573": {"op": "ADD", "path": "0", "offset": [4127, 4156], "fn": "SafeMath.sub"}, "3574": {"op": "SWAP1", "path": "0", "offset": [4127, 4156], "fn": "SafeMath.sub"}, "3575": {"op": "DUP1", "path": "0", "offset": [4127, 4156], "fn": "SafeMath.sub"}, "3576": {"op": "DUP4", "path": "0", "offset": [4127, 4156], "fn": "SafeMath.sub"}, "3577": {"op": "DUP4", "path": "0", "offset": [4127, 4156], "fn": "SafeMath.sub"}, "3578": {"op": "PUSH1", "value": "0x0"}, "3580": {"op": "JUMPDEST"}, "3581": {"op": "DUP4"}, "3582": {"op": "DUP2"}, "3583": {"op": "LT"}, "3584": {"op": "ISZERO"}, "3585": {"op": "PUSH2", "value": "0xE14"}, "3588": {"op": "JUMPI"}, "3589": {"op": "DUP2"}, "3590": {"op": "DUP2"}, "3591": {"op": "ADD"}, "3592": {"op": "MLOAD"}, "3593": {"op": "DUP4"}, "3594": {"op": "DUP3"}, "3595": {"op": "ADD"}, "3596": {"op": "MSTORE"}, "3597": {"op": "PUSH1", "value": "0x20"}, "3599": {"op": "ADD"}, "3600": {"op": "PUSH2", "value": "0xDFC"}, "3603": {"op": "JUMP"}, "3604": {"op": "JUMPDEST"}, "3605": {"op": "POP"}, "3606": {"op": "POP", "path": "0", "offset": [4127, 4156], "fn": "SafeMath.sub"}, "3607": {"op": "POP", "path": "0", "offset": [4127, 4156], "fn": "SafeMath.sub"}, "3608": {"op": "POP", "path": "0", "offset": [4127, 4156], "fn": "SafeMath.sub"}, "3609": {"op": "SWAP1", "path": "0", "offset": [4127, 4156], "fn": "SafeMath.sub"}, "3610": {"op": "POP", "path": "0", "offset": [4127, 4156], "fn": "SafeMath.sub"}, "3611": {"op": "SWAP1", "path": "0", "offset": [4127, 4156], "fn": "SafeMath.sub"}, "3612": {"op": "DUP2", "path": "0", "offset": [4127, 4156], "fn": "SafeMath.sub"}, "3613": {"op": "ADD", "path": "0", "offset": [4127, 4156], "fn": "SafeMath.sub"}, "3614": {"op": "SWAP1", "path": "0", "offset": [4127, 4156], "fn": "SafeMath.sub"}, "3615": {"op": "PUSH1", "value": "0x1F", "path": "0", "offset": [4127, 4156], "fn": "SafeMath.sub"}, "3617": {"op": "AND", "path": "0", "offset": [4127, 4156], "fn": "SafeMath.sub"}, "3618": {"op": "DUP1", "path": "0", "offset": [4127, 4156], "fn": "SafeMath.sub"}, "3619": {"op": "ISZERO", "path": "0", "offset": [4127, 4156], "fn": "SafeMath.sub"}, "3620": {"op": "PUSH2", "value": "0xE41", "path": "0", "offset": [4127, 4156], "fn": "SafeMath.sub"}, "3623": {"op": "JUMPI", "path": "0", "offset": [4127, 4156], "fn": "SafeMath.sub"}, "3624": {"op": "DUP1", "path": "0", "offset": [4127, 4156], "fn": "SafeMath.sub"}, "3625": {"op": "DUP3", "path": "0", "offset": [4127, 4156], "fn": "SafeMath.sub"}, "3626": {"op": "SUB", "path": "0", "offset": [4127, 4156], "fn": "SafeMath.sub"}, "3627": {"op": "DUP1", "path": "0", "offset": [4127, 4156], "fn": "SafeMath.sub"}, "3628": {"op": "MLOAD", "path": "0", "offset": [4127, 4156], "fn": "SafeMath.sub"}, "3629": {"op": "PUSH1", "value": "0x1", "path": "0", "offset": [4127, 4156], "fn": "SafeMath.sub"}, "3631": {"op": "DUP4", "path": "0", "offset": [4127, 4156], "fn": "SafeMath.sub"}, "3632": {"op": "PUSH1", "value": "0x20", "path": "0", "offset": [4127, 4156], "fn": "SafeMath.sub"}, "3634": {"op": "SUB", "path": "0", "offset": [4127, 4156], "fn": "SafeMath.sub"}, "3635": {"op": "PUSH2", "value": "0x100", "path": "0", "offset": [4127, 4156], "fn": "SafeMath.sub"}, "3638": {"op": "EXP", "path": "0", "offset": [4127, 4156], "fn": "SafeMath.sub"}, "3639": {"op": "SUB", "path": "0", "offset": [4127, 4156], "fn": "SafeMath.sub"}, "3640": {"op": "NOT", "path": "0", "offset": [4127, 4156], "fn": "SafeMath.sub"}, "3641": {"op": "AND", "path": "0", "offset": [4127, 4156], "fn": "SafeMath.sub"}, "3642": {"op": "DUP2", "path": "0", "offset": [4127, 4156], "fn": "SafeMath.sub"}, "3643": {"op": "MSTORE", "path": "0", "offset": [4127, 4156], "fn": "SafeMath.sub"}, "3644": {"op": "PUSH1", "value": "0x20", "path": "0", "offset": [4127, 4156], "fn": "SafeMath.sub"}, "3646": {"op": "ADD", "path": "0", "offset": [4127, 4156], "fn": "SafeMath.sub"}, "3647": {"op": "SWAP2", "path": "0", "offset": [4127, 4156], "fn": "SafeMath.sub"}, "3648": {"op": "POP", "path": "0", "offset": [4127, 4156], "fn": "SafeMath.sub"}, "3649": {"op": "JUMPDEST", "path": "0", "offset": [4127, 4156], "fn": "SafeMath.sub"}, "3650": {"op": "POP", "path": "0", "offset": [4127, 4156], "fn": "SafeMath.sub"}, "3651": {"op": "SWAP3", "path": "0", "offset": [4127, 4156], "fn": "SafeMath.sub"}, "3652": {"op": "POP", "path": "0", "offset": [4127, 4156], "fn": "SafeMath.sub"}, "3653": {"op": "POP", "path": "0", "offset": [4127, 4156], "fn": "SafeMath.sub"}, "3654": {"op": "POP", "path": "0", "offset": [4127, 4156], "fn": "SafeMath.sub"}, "3655": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [4127, 4156], "fn": "SafeMath.sub"}, "3657": {"op": "MLOAD", "path": "0", "offset": [4127, 4156], "fn": "SafeMath.sub"}, "3658": {"op": "DUP1", "path": "0", "offset": [4127, 4156], "fn": "SafeMath.sub"}, "3659": {"op": "SWAP2", "path": "0", "offset": [4127, 4156], "fn": "SafeMath.sub"}, "3660": {"op": "SUB", "path": "0", "offset": [4127, 4156], "fn": "SafeMath.sub"}, "3661": {"op": "SWAP1", "path": "0", "offset": [4127, 4156], "fn": "SafeMath.sub"}, "3662": {"op": "REVERT", "path": "0", "offset": [4127, 4156], "fn": "SafeMath.sub"}, "3663": {"op": "JUMPDEST", "path": "0", "offset": [4127, 4156], "fn": "SafeMath.sub"}, "3664": {"op": "POP"}, "3665": {"op": "POP"}, "3666": {"op": "POP"}, "3667": {"op": "SWAP1", "path": "0", "offset": [4178, 4183], "fn": "SafeMath.sub"}, "3668": {"op": "SUB", "path": "0", "offset": [4178, 4183], "fn": "SafeMath.sub"}, "3669": {"op": "SWAP1", "path": "0", "offset": [4178, 4183], "fn": "SafeMath.sub"}, "3670": {"op": "JUMP", "jump": "o", "path": "0", "offset": [4022, 4209], "fn": "SafeMath.sub"}, "3671": {"op": "JUMPDEST", "path": "0", "offset": [6008, 6346], "fn": "SafeMath.div"}, "3672": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [6094, 6101], "fn": "SafeMath.div"}, "3674": {"op": "DUP2", "path": "0", "offset": [6194, 6206], "fn": "SafeMath.div", "statement": 46}, "3675": {"op": "DUP4", "path": "0", "offset": [6187, 6192], "fn": "SafeMath.div", "branch": 65}, "3676": {"op": "PUSH2", "value": "0xEA6", "path": "0", "offset": [6179, 6207], "fn": "SafeMath.div"}, "3679": {"op": "JUMPI", "path": "0", "offset": [6179, 6207], "fn": "SafeMath.div", "branch": 65}, "3680": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [6179, 6207], "fn": "SafeMath.div"}, "3682": {"op": "MLOAD", "path": "0", "offset": [6179, 6207], "fn": "SafeMath.div"}, "3683": {"op": "PUSH3", "value": "0x461BCD"}, "3687": {"op": "PUSH1", "value": "0xE5"}, "3689": {"op": "SHL"}, "3690": {"op": "DUP2", "path": "0", "offset": [6179, 6207], "fn": "SafeMath.div"}, "3691": {"op": "MSTORE", "path": "0", "offset": [6179, 6207], "fn": "SafeMath.div"}, "3692": {"op": "PUSH1", "value": "0x20", "path": "0", "offset": [6179, 6207], "fn": "SafeMath.div"}, "3694": {"op": "PUSH1", "value": "0x4", "path": "0", "offset": [6179, 6207], "fn": "SafeMath.div"}, "3696": {"op": "DUP3", "path": "0", "offset": [6179, 6207], "fn": "SafeMath.div"}, "3697": {"op": "ADD", "path": "0", "offset": [6179, 6207], "fn": "SafeMath.div"}, "3698": {"op": "DUP2", "path": "0", "offset": [6179, 6207], "fn": "SafeMath.div"}, "3699": {"op": "DUP2", "path": "0", "offset": [6179, 6207], "fn": "SafeMath.div"}, "3700": {"op": "MSTORE", "path": "0", "offset": [6179, 6207], "fn": "SafeMath.div"}, "3701": {"op": "DUP4", "path": "0", "offset": [6179, 6207], "fn": "SafeMath.div"}, "3702": {"op": "MLOAD", "path": "0", "offset": [6179, 6207], "fn": "SafeMath.div"}, "3703": {"op": "PUSH1", "value": "0x24", "path": "0", "offset": [6179, 6207], "fn": "SafeMath.div"}, "3705": {"op": "DUP5", "path": "0", "offset": [6179, 6207], "fn": "SafeMath.div"}, "3706": {"op": "ADD", "path": "0", "offset": [6179, 6207], "fn": "SafeMath.div"}, "3707": {"op": "MSTORE", "path": "0", "offset": [6179, 6207], "fn": "SafeMath.div"}, "3708": {"op": "DUP4", "path": "0", "offset": [6179, 6207], "fn": "SafeMath.div"}, "3709": {"op": "MLOAD", "path": "0", "offset": [6179, 6207], "fn": "SafeMath.div"}, "3710": {"op": "SWAP1", "path": "0", "offset": [6179, 6207], "fn": "SafeMath.div"}, "3711": {"op": "SWAP3", "path": "0", "offset": [6179, 6207], "fn": "SafeMath.div"}, "3712": {"op": "DUP4", "path": "0", "offset": [6179, 6207], "fn": "SafeMath.div"}, "3713": {"op": "SWAP3", "path": "0", "offset": [6179, 6207], "fn": "SafeMath.div"}, "3714": {"op": "PUSH1", "value": "0x44", "path": "0", "offset": [6179, 6207], "fn": "SafeMath.div"}, "3716": {"op": "SWAP1", "path": "0", "offset": [6179, 6207], "fn": "SafeMath.div"}, "3717": {"op": "SWAP2", "path": "0", "offset": [6179, 6207], "fn": "SafeMath.div"}, "3718": {"op": "ADD", "path": "0", "offset": [6179, 6207], "fn": "SafeMath.div"}, "3719": {"op": "SWAP2", "path": "0", "offset": [6179, 6207], "fn": "SafeMath.div"}, "3720": {"op": "SWAP1", "path": "0", "offset": [6179, 6207], "fn": "SafeMath.div"}, "3721": {"op": "DUP6", "path": "0", "offset": [6179, 6207], "fn": "SafeMath.div"}, "3722": {"op": "ADD", "path": "0", "offset": [6179, 6207], "fn": "SafeMath.div"}, "3723": {"op": "SWAP1", "path": "0", "offset": [6179, 6207], "fn": "SafeMath.div"}, "3724": {"op": "DUP1", "path": "0", "offset": [6179, 6207], "fn": "SafeMath.div"}, "3725": {"op": "DUP4", "path": "0", "offset": [6179, 6207], "fn": "SafeMath.div"}, "3726": {"op": "DUP4", "path": "0", "offset": [6179, 6207], "fn": "SafeMath.div"}, "3727": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [6179, 6207], "fn": "SafeMath.div"}, "3729": {"op": "DUP4"}, "3730": {"op": "ISZERO"}, "3731": {"op": "PUSH2", "value": "0xE14"}, "3734": {"op": "JUMPI"}, "3735": {"op": "DUP2"}, "3736": {"op": "DUP2"}, "3737": {"op": "ADD"}, "3738": {"op": "MLOAD"}, "3739": {"op": "DUP4"}, "3740": {"op": "DUP3"}, "3741": {"op": "ADD"}, "3742": {"op": "MSTORE"}, "3743": {"op": "PUSH1", "value": "0x20"}, "3745": {"op": "ADD"}, "3746": {"op": "PUSH2", "value": "0xDFC"}, "3749": {"op": "JUMP"}, "3750": {"op": "JUMPDEST", "path": "0", "offset": [6179, 6207], "fn": "SafeMath.div"}, "3751": {"op": "POP", "path": "0", "offset": [6179, 6207], "fn": "SafeMath.div"}, "3752": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [6217, 6226], "fn": "SafeMath.div"}, "3754": {"op": "DUP4", "path": "0", "offset": [6233, 6234], "fn": "SafeMath.div"}, "3755": {"op": "DUP6", "path": "0", "offset": [6229, 6230], "fn": "SafeMath.div"}, "3756": {"op": "DUP2", "path": "0", "offset": [6229, 6234], "fn": "SafeMath.div"}, "3757": {"op": "PUSH2", "value": "0xEB2", "path": "0", "offset": [6229, 6234], "fn": "SafeMath.div"}, "3760": {"op": "JUMPI", "path": "0", "offset": [6229, 6234], "fn": "SafeMath.div"}, "3761": {"op": "INVALID", "path": "0", "offset": [6229, 6234], "dev": "Division by zero", "fn": "SafeMath.div"}, "3762": {"op": "JUMPDEST", "path": "0", "offset": [6229, 6234], "fn": "SafeMath.div"}, "3763": {"op": "DIV", "path": "0", "offset": [6229, 6234], "fn": "SafeMath.div"}, "3764": {"op": "SWAP6", "path": "0", "offset": [6229, 6234], "fn": "SafeMath.div"}, "3765": {"op": "SWAP5", "path": "0", "offset": [6008, 6346], "fn": "SafeMath.div"}, "3766": {"op": "POP"}, "3767": {"op": "POP"}, "3768": {"op": "POP"}, "3769": {"op": "POP"}, "3770": {"op": "POP"}, "3771": {"op": "JUMP", "jump": "o", "path": "0", "offset": [6008, 6346], "fn": "SafeMath.div"}, "3772": {"op": "JUMPDEST", "path": "0", "offset": [19536, 20631], "fn": "SafeERC20.callOptionalReturn"}, "3773": {"op": "PUSH2", "value": "0xECE", "path": "0", "offset": [20131, 20158], "fn": "SafeERC20.callOptionalReturn", "statement": 47}, "3776": {"op": "DUP3", "path": "0", "offset": [20139, 20144], "fn": "SafeERC20.callOptionalReturn"}, "3777": {"op": "PUSH1", "value": "0x1"}, "3779": {"op": "PUSH1", "value": "0x1"}, "3781": {"op": "PUSH1", "value": "0xA0"}, "3783": {"op": "SHL"}, "3784": {"op": "SUB"}, "3785": {"op": "AND", "path": "0", "offset": [20131, 20156], "fn": "SafeERC20.callOptionalReturn"}, "3786": {"op": "PUSH2", "value": "0x10D4", "path": "0", "offset": [20131, 20156], "fn": "SafeERC20.callOptionalReturn"}, "3789": {"op": "JUMP", "jump": "i", "path": "0", "offset": [20131, 20158], "fn": "SafeERC20.callOptionalReturn"}, "3790": {"op": "JUMPDEST", "path": "0", "offset": [20131, 20158], "fn": "SafeERC20.callOptionalReturn", "branch": 66}, "3791": {"op": "PUSH2", "value": "0xF1F", "path": "0", "offset": [20123, 20194], "fn": "SafeERC20.callOptionalReturn"}, "3794": {"op": "JUMPI", "path": "0", "offset": [20123, 20194], "fn": "SafeERC20.callOptionalReturn", "branch": 66}, "3795": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [20123, 20194], "fn": "SafeERC20.callOptionalReturn"}, "3797": {"op": "DUP1", "path": "0", "offset": [20123, 20194], "fn": "SafeERC20.callOptionalReturn"}, "3798": {"op": "MLOAD", "path": "0", "offset": [20123, 20194], "fn": "SafeERC20.callOptionalReturn"}, "3799": {"op": "PUSH3", "value": "0x461BCD"}, "3803": {"op": "PUSH1", "value": "0xE5"}, "3805": {"op": "SHL"}, "3806": {"op": "DUP2", "path": "0", "offset": [20123, 20194], "fn": "SafeERC20.callOptionalReturn"}, "3807": {"op": "MSTORE", "path": "0", "offset": [20123, 20194], "fn": "SafeERC20.callOptionalReturn"}, "3808": {"op": "PUSH1", "value": "0x20", "path": "0", "offset": [20123, 20194], "fn": "SafeERC20.callOptionalReturn"}, "3810": {"op": "PUSH1", "value": "0x4", "path": "0", "offset": [20123, 20194], "fn": "SafeERC20.callOptionalReturn"}, "3812": {"op": "DUP3", "path": "0", "offset": [20123, 20194], "fn": "SafeERC20.callOptionalReturn"}, "3813": {"op": "ADD", "path": "0", "offset": [20123, 20194], "fn": "SafeERC20.callOptionalReturn"}, "3814": {"op": "MSTORE", "path": "0", "offset": [20123, 20194], "fn": "SafeERC20.callOptionalReturn"}, "3815": {"op": "PUSH1", "value": "0x1F", "path": "0", "offset": [20123, 20194], "fn": "SafeERC20.callOptionalReturn"}, "3817": {"op": "PUSH1", "value": "0x24", "path": "0", "offset": [20123, 20194], "fn": "SafeERC20.callOptionalReturn"}, "3819": {"op": "DUP3", "path": "0", "offset": [20123, 20194], "fn": "SafeERC20.callOptionalReturn"}, "3820": {"op": "ADD", "path": "0", "offset": [20123, 20194], "fn": "SafeERC20.callOptionalReturn"}, "3821": {"op": "MSTORE", "path": "0", "offset": [20123, 20194], "fn": "SafeERC20.callOptionalReturn"}, "3822": {"op": "PUSH32", "value": "0x5361666545524332303A2063616C6C20746F206E6F6E2D636F6E747261637400", "path": "0", "offset": [20123, 20194], "fn": "SafeERC20.callOptionalReturn"}, "3855": {"op": "PUSH1", "value": "0x44", "path": "0", "offset": [20123, 20194], "fn": "SafeERC20.callOptionalReturn"}, "3857": {"op": "DUP3", "path": "0", "offset": [20123, 20194], "fn": "SafeERC20.callOptionalReturn"}, "3858": {"op": "ADD", "path": "0", "offset": [20123, 20194], "fn": "SafeERC20.callOptionalReturn"}, "3859": {"op": "MSTORE", "path": "0", "offset": [20123, 20194], "fn": "SafeERC20.callOptionalReturn"}, "3860": {"op": "SWAP1", "path": "0", "offset": [20123, 20194], "fn": "SafeERC20.callOptionalReturn"}, "3861": {"op": "MLOAD", "path": "0", "offset": [20123, 20194], "fn": "SafeERC20.callOptionalReturn"}, "3862": {"op": "SWAP1", "path": "0", "offset": [20123, 20194], "fn": "SafeERC20.callOptionalReturn"}, "3863": {"op": "DUP2", "path": "0", "offset": [20123, 20194], "fn": "SafeERC20.callOptionalReturn"}, "3864": {"op": "SWAP1", "path": "0", "offset": [20123, 20194], "fn": "SafeERC20.callOptionalReturn"}, "3865": {"op": "SUB", "path": "0", "offset": [20123, 20194], "fn": "SafeERC20.callOptionalReturn"}, "3866": {"op": "PUSH1", "value": "0x64", "path": "0", "offset": [20123, 20194], "fn": "SafeERC20.callOptionalReturn"}, "3868": {"op": "ADD", "path": "0", "offset": [20123, 20194], "fn": "SafeERC20.callOptionalReturn"}, "3869": {"op": "SWAP1", "path": "0", "offset": [20123, 20194], "fn": "SafeERC20.callOptionalReturn"}, "3870": {"op": "REVERT", "path": "0", "offset": [20123, 20194], "fn": "SafeERC20.callOptionalReturn"}, "3871": {"op": "JUMPDEST", "path": "0", "offset": [20123, 20194], "fn": "SafeERC20.callOptionalReturn"}, "3872": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [20265, 20277], "fn": "SafeERC20.callOptionalReturn"}, "3874": {"op": "PUSH1", "value": "0x60", "path": "0", "offset": [20279, 20302], "fn": "SafeERC20.callOptionalReturn"}, "3876": {"op": "DUP4", "path": "0", "offset": [20314, 20319], "fn": "SafeERC20.callOptionalReturn"}, "3877": {"op": "PUSH1", "value": "0x1"}, "3879": {"op": "PUSH1", "value": "0x1"}, "3881": {"op": "PUSH1", "value": "0xA0"}, "3883": {"op": "SHL"}, "3884": {"op": "SUB"}, "3885": {"op": "AND", "path": "0", "offset": [20306, 20325], "fn": "SafeERC20.callOptionalReturn"}, "3886": {"op": "DUP4", "path": "0", "offset": [20326, 20330], "fn": "SafeERC20.callOptionalReturn"}, "3887": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [20306, 20331], "fn": "SafeERC20.callOptionalReturn"}, "3889": {"op": "MLOAD", "path": "0", "offset": [20306, 20331], "fn": "SafeERC20.callOptionalReturn"}, "3890": {"op": "DUP1", "path": "0", "offset": [20306, 20331], "fn": "SafeERC20.callOptionalReturn"}, "3891": {"op": "DUP3", "path": "0", "offset": [20306, 20331], "fn": "SafeERC20.callOptionalReturn"}, "3892": {"op": "DUP1", "path": "0", "offset": [20306, 20331], "fn": "SafeERC20.callOptionalReturn"}, "3893": {"op": "MLOAD", "path": "0", "offset": [20306, 20331], "fn": "SafeERC20.callOptionalReturn"}, "3894": {"op": "SWAP1", "path": "0", "offset": [20306, 20331], "fn": "SafeERC20.callOptionalReturn"}, "3895": {"op": "PUSH1", "value": "0x20", "path": "0", "offset": [20306, 20331], "fn": "SafeERC20.callOptionalReturn"}, "3897": {"op": "ADD", "path": "0", "offset": [20306, 20331], "fn": "SafeERC20.callOptionalReturn"}, "3898": {"op": "SWAP1", "path": "0", "offset": [20306, 20331], "fn": "SafeERC20.callOptionalReturn"}, "3899": {"op": "DUP1", "path": "0", "offset": [20306, 20331], "fn": "SafeERC20.callOptionalReturn"}, "3900": {"op": "DUP4", "path": "0", "offset": [20306, 20331], "fn": "SafeERC20.callOptionalReturn"}, "3901": {"op": "DUP4", "path": "0", "offset": [20306, 20331], "fn": "SafeERC20.callOptionalReturn"}, "3902": {"op": "JUMPDEST"}, "3903": {"op": "PUSH1", "value": "0x20"}, "3905": {"op": "DUP4"}, "3906": {"op": "LT"}, "3907": {"op": "PUSH2", "value": "0xF5D"}, "3910": {"op": "JUMPI"}, "3911": {"op": "DUP1"}, "3912": {"op": "MLOAD"}, "3913": {"op": "DUP3"}, "3914": {"op": "MSTORE"}, "3915": {"op": "PUSH1", "value": "0x1F"}, "3917": {"op": "NOT"}, "3918": {"op": "SWAP1"}, "3919": {"op": "SWAP3"}, "3920": {"op": "ADD"}, "3921": {"op": "SWAP2"}, "3922": {"op": "PUSH1", "value": "0x20"}, "3924": {"op": "SWAP2"}, "3925": {"op": "DUP3"}, "3926": {"op": "ADD"}, "3927": {"op": "SWAP2"}, "3928": {"op": "ADD"}, "3929": {"op": "PUSH2", "value": "0xF3E"}, "3932": {"op": "JUMP"}, "3933": {"op": "JUMPDEST"}, "3934": {"op": "PUSH1", "value": "0x1"}, "3936": {"op": "DUP4"}, "3937": {"op": "PUSH1", "value": "0x20"}, "3939": {"op": "SUB"}, "3940": {"op": "PUSH2", "value": "0x100"}, "3943": {"op": "EXP"}, "3944": {"op": "SUB"}, "3945": {"op": "DUP1"}, "3946": {"op": "NOT"}, "3947": {"op": "DUP3"}, "3948": {"op": "MLOAD"}, "3949": {"op": "AND"}, "3950": {"op": "DUP2"}, "3951": {"op": "DUP5"}, "3952": {"op": "MLOAD"}, "3953": {"op": "AND"}, "3954": {"op": "DUP1"}, "3955": {"op": "DUP3"}, "3956": {"op": "OR"}, "3957": {"op": "DUP6"}, "3958": {"op": "MSTORE"}, "3959": {"op": "POP"}, "3960": {"op": "POP"}, "3961": {"op": "POP"}, "3962": {"op": "POP", "path": "0", "offset": [20306, 20331], "fn": "SafeERC20.callOptionalReturn"}, "3963": {"op": "POP", "path": "0", "offset": [20306, 20331], "fn": "SafeERC20.callOptionalReturn"}, "3964": {"op": "POP", "path": "0", "offset": [20306, 20331], "fn": "SafeERC20.callOptionalReturn"}, "3965": {"op": "SWAP1", "path": "0", "offset": [20306, 20331], "fn": "SafeERC20.callOptionalReturn"}, "3966": {"op": "POP", "path": "0", "offset": [20306, 20331], "fn": "SafeERC20.callOptionalReturn"}, "3967": {"op": "ADD", "path": "0", "offset": [20306, 20331], "fn": "SafeERC20.callOptionalReturn"}, "3968": {"op": "SWAP2", "path": "0", "offset": [20306, 20331], "fn": "SafeERC20.callOptionalReturn"}, "3969": {"op": "POP", "path": "0", "offset": [20306, 20331], "fn": "SafeERC20.callOptionalReturn"}, "3970": {"op": "POP", "path": "0", "offset": [20306, 20331], "fn": "SafeERC20.callOptionalReturn"}, "3971": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [20306, 20331], "fn": "SafeERC20.callOptionalReturn"}, "3973": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [20306, 20331], "fn": "SafeERC20.callOptionalReturn"}, "3975": {"op": "MLOAD", "path": "0", "offset": [20306, 20331], "fn": "SafeERC20.callOptionalReturn"}, "3976": {"op": "DUP1", "path": "0", "offset": [20306, 20331], "fn": "SafeERC20.callOptionalReturn"}, "3977": {"op": "DUP4", "path": "0", "offset": [20306, 20331], "fn": "SafeERC20.callOptionalReturn"}, "3978": {"op": "SUB", "path": "0", "offset": [20306, 20331], "fn": "SafeERC20.callOptionalReturn"}, "3979": {"op": "DUP2", "path": "0", "offset": [20306, 20331], "fn": "SafeERC20.callOptionalReturn"}, "3980": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [20306, 20331], "fn": "SafeERC20.callOptionalReturn"}, "3982": {"op": "DUP7", "path": "0", "offset": [20306, 20331], "fn": "SafeERC20.callOptionalReturn"}, "3983": {"op": "GAS", "path": "0", "offset": [20306, 20331], "fn": "SafeERC20.callOptionalReturn"}, "3984": {"op": "CALL", "path": "0", "offset": [20306, 20331], "fn": "SafeERC20.callOptionalReturn"}, "3985": {"op": "SWAP2", "path": "0", "offset": [20306, 20331], "fn": "SafeERC20.callOptionalReturn"}, "3986": {"op": "POP", "path": "0", "offset": [20306, 20331], "fn": "SafeERC20.callOptionalReturn"}, "3987": {"op": "POP", "path": "0", "offset": [20306, 20331], "fn": "SafeERC20.callOptionalReturn"}, "3988": {"op": "RETURNDATASIZE", "path": "0", "offset": [20306, 20331], "fn": "SafeERC20.callOptionalReturn"}, "3989": {"op": "DUP1"}, "3990": {"op": "PUSH1", "value": "0x0"}, "3992": {"op": "DUP2"}, "3993": {"op": "EQ"}, "3994": {"op": "PUSH2", "value": "0xFBF"}, "3997": {"op": "JUMPI"}, "3998": {"op": "PUSH1", "value": "0x40"}, "4000": {"op": "MLOAD"}, "4001": {"op": "SWAP2"}, "4002": {"op": "POP"}, "4003": {"op": "PUSH1", "value": "0x1F"}, "4005": {"op": "NOT"}, "4006": {"op": "PUSH1", "value": "0x3F"}, "4008": {"op": "RETURNDATASIZE"}, "4009": {"op": "ADD"}, "4010": {"op": "AND"}, "4011": {"op": "DUP3"}, "4012": {"op": "ADD"}, "4013": {"op": "PUSH1", "value": "0x40"}, "4015": {"op": "MSTORE"}, "4016": {"op": "RETURNDATASIZE"}, "4017": {"op": "DUP3"}, "4018": {"op": "MSTORE"}, "4019": {"op": "RETURNDATASIZE"}, "4020": {"op": "PUSH1", "value": "0x0"}, "4022": {"op": "PUSH1", "value": "0x20"}, "4024": {"op": "DUP5"}, "4025": {"op": "ADD"}, "4026": {"op": "RETURNDATACOPY"}, "4027": {"op": "PUSH2", "value": "0xFC4"}, "4030": {"op": "JUMP"}, "4031": {"op": "JUMPDEST"}, "4032": {"op": "PUSH1", "value": "0x60"}, "4034": {"op": "SWAP2"}, "4035": {"op": "POP"}, "4036": {"op": "JUMPDEST"}, "4037": {"op": "POP"}, "4038": {"op": "SWAP2", "path": "0", "offset": [20264, 20331], "fn": "SafeERC20.callOptionalReturn"}, "4039": {"op": "POP", "path": "0", "offset": [20264, 20331], "fn": "SafeERC20.callOptionalReturn"}, "4040": {"op": "SWAP2", "path": "0", "offset": [20264, 20331], "fn": "SafeERC20.callOptionalReturn"}, "4041": {"op": "POP", "path": "0", "offset": [20264, 20331], "fn": "SafeERC20.callOptionalReturn"}, "4042": {"op": "DUP2", "path": "0", "offset": [20349, 20356], "fn": "SafeERC20.callOptionalReturn", "statement": 48, "branch": 67}, "4043": {"op": "PUSH2", "value": "0x101B", "path": "0", "offset": [20341, 20393], "fn": "SafeERC20.callOptionalReturn"}, "4046": {"op": "JUMPI", "path": "0", "offset": [20341, 20393], "fn": "SafeERC20.callOptionalReturn", "branch": 67}, "4047": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [20341, 20393], "fn": "SafeERC20.callOptionalReturn"}, "4049": {"op": "DUP1", "path": "0", "offset": [20341, 20393], "fn": "SafeERC20.callOptionalReturn"}, "4050": {"op": "MLOAD", "path": "0", "offset": [20341, 20393], "fn": "SafeERC20.callOptionalReturn"}, "4051": {"op": "PUSH3", "value": "0x461BCD"}, "4055": {"op": "PUSH1", "value": "0xE5"}, "4057": {"op": "SHL"}, "4058": {"op": "DUP2", "path": "0", "offset": [20341, 20393], "fn": "SafeERC20.callOptionalReturn"}, "4059": {"op": "MSTORE", "path": "0", "offset": [20341, 20393], "fn": "SafeERC20.callOptionalReturn"}, "4060": {"op": "PUSH1", "value": "0x20", "path": "0", "offset": [20341, 20393], "fn": "SafeERC20.callOptionalReturn"}, "4062": {"op": "PUSH1", "value": "0x4", "path": "0", "offset": [20341, 20393], "fn": "SafeERC20.callOptionalReturn"}, "4064": {"op": "DUP3", "path": "0", "offset": [20341, 20393], "fn": "SafeERC20.callOptionalReturn"}, "4065": {"op": "ADD", "path": "0", "offset": [20341, 20393], "fn": "SafeERC20.callOptionalReturn"}, "4066": {"op": "DUP2", "path": "0", "offset": [20341, 20393], "fn": "SafeERC20.callOptionalReturn"}, "4067": {"op": "SWAP1", "path": "0", "offset": [20341, 20393], "fn": "SafeERC20.callOptionalReturn"}, "4068": {"op": "MSTORE", "path": "0", "offset": [20341, 20393], "fn": "SafeERC20.callOptionalReturn"}, "4069": {"op": "PUSH1", "value": "0x24", "path": "0", "offset": [20341, 20393], "fn": "SafeERC20.callOptionalReturn"}, "4071": {"op": "DUP3", "path": "0", "offset": [20341, 20393], "fn": "SafeERC20.callOptionalReturn"}, "4072": {"op": "ADD", "path": "0", "offset": [20341, 20393], "fn": "SafeERC20.callOptionalReturn"}, "4073": {"op": "MSTORE", "path": "0", "offset": [20341, 20393], "fn": "SafeERC20.callOptionalReturn"}, "4074": {"op": "PUSH32", "value": "0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564", "path": "0", "offset": [20341, 20393], "fn": "SafeERC20.callOptionalReturn"}, "4107": {"op": "PUSH1", "value": "0x44", "path": "0", "offset": [20341, 20393], "fn": "SafeERC20.callOptionalReturn"}, "4109": {"op": "DUP3", "path": "0", "offset": [20341, 20393], "fn": "SafeERC20.callOptionalReturn"}, "4110": {"op": "ADD", "path": "0", "offset": [20341, 20393], "fn": "SafeERC20.callOptionalReturn"}, "4111": {"op": "MSTORE", "path": "0", "offset": [20341, 20393], "fn": "SafeERC20.callOptionalReturn"}, "4112": {"op": "SWAP1", "path": "0", "offset": [20341, 20393], "fn": "SafeERC20.callOptionalReturn"}, "4113": {"op": "MLOAD", "path": "0", "offset": [20341, 20393], "fn": "SafeERC20.callOptionalReturn"}, "4114": {"op": "SWAP1", "path": "0", "offset": [20341, 20393], "fn": "SafeERC20.callOptionalReturn"}, "4115": {"op": "DUP2", "path": "0", "offset": [20341, 20393], "fn": "SafeERC20.callOptionalReturn"}, "4116": {"op": "SWAP1", "path": "0", "offset": [20341, 20393], "fn": "SafeERC20.callOptionalReturn"}, "4117": {"op": "SUB", "path": "0", "offset": [20341, 20393], "fn": "SafeERC20.callOptionalReturn"}, "4118": {"op": "PUSH1", "value": "0x64", "path": "0", "offset": [20341, 20393], "fn": "SafeERC20.callOptionalReturn"}, "4120": {"op": "ADD", "path": "0", "offset": [20341, 20393], "fn": "SafeERC20.callOptionalReturn"}, "4121": {"op": "SWAP1", "path": "0", "offset": [20341, 20393], "fn": "SafeERC20.callOptionalReturn"}, "4122": {"op": "REVERT", "path": "0", "offset": [20341, 20393], "fn": "SafeERC20.callOptionalReturn"}, "4123": {"op": "JUMPDEST", "path": "0", "offset": [20341, 20393], "fn": "SafeERC20.callOptionalReturn"}, "4124": {"op": "DUP1", "path": "0", "offset": [20408, 20425], "fn": "SafeERC20.callOptionalReturn"}, "4125": {"op": "MLOAD", "path": "0", "offset": [20408, 20425], "fn": "SafeERC20.callOptionalReturn"}, "4126": {"op": "ISZERO", "path": "0", "offset": [20408, 20429], "fn": "SafeERC20.callOptionalReturn", "branch": 68}, "4127": {"op": "PUSH2", "value": "0x1074", "path": "0", "offset": [20404, 20625], "fn": "SafeERC20.callOptionalReturn"}, "4130": {"op": "JUMPI", "path": "0", "offset": [20404, 20625], "fn": "SafeERC20.callOptionalReturn", "branch": 68}, "4131": {"op": "DUP1", "path": "0", "offset": [20548, 20558], "fn": "SafeERC20.callOptionalReturn", "statement": 49}, "4132": {"op": "DUP1", "path": "0", "offset": [20537, 20567], "fn": "SafeERC20.callOptionalReturn"}, "4133": {"op": "PUSH1", "value": "0x20", "path": "0", "offset": [20537, 20567], "fn": "SafeERC20.callOptionalReturn"}, "4135": {"op": "ADD", "path": "0", "offset": [20537, 20567], "fn": "SafeERC20.callOptionalReturn"}, "4136": {"op": "SWAP1", "path": "0", "offset": [20537, 20567], "fn": "SafeERC20.callOptionalReturn"}, "4137": {"op": "MLOAD", "path": "0", "offset": [20537, 20567], "fn": "SafeERC20.callOptionalReturn"}, "4138": {"op": "PUSH1", "value": "0x20"}, "4140": {"op": "DUP2"}, "4141": {"op": "LT"}, "4142": {"op": "ISZERO"}, "4143": {"op": "PUSH2", "value": "0x1037"}, "4146": {"op": "JUMPI"}, "4147": {"op": "PUSH1", "value": "0x0"}, "4149": {"op": "DUP1"}, "4150": {"op": "REVERT"}, "4151": {"op": "JUMPDEST"}, "4152": {"op": "POP"}, "4153": {"op": "MLOAD", "path": "0", "offset": [20537, 20567], "fn": "SafeERC20.callOptionalReturn", "branch": 69}, "4154": {"op": "PUSH2", "value": "0x1074", "path": "0", "offset": [20529, 20614], "fn": "SafeERC20.callOptionalReturn"}, "4157": {"op": "JUMPI", "path": "0", "offset": [20529, 20614], "fn": "SafeERC20.callOptionalReturn", "branch": 69}, "4158": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [20529, 20614], "fn": "SafeERC20.callOptionalReturn"}, "4160": {"op": "MLOAD", "path": "0", "offset": [20529, 20614], "fn": "SafeERC20.callOptionalReturn"}, "4161": {"op": "PUSH3", "value": "0x461BCD"}, "4165": {"op": "PUSH1", "value": "0xE5"}, "4167": {"op": "SHL"}, "4168": {"op": "DUP2", "path": "0", "offset": [20529, 20614], "fn": "SafeERC20.callOptionalReturn"}, "4169": {"op": "MSTORE", "path": "0", "offset": [20529, 20614], "fn": "SafeERC20.callOptionalReturn"}, "4170": {"op": "PUSH1", "value": "0x4", "path": "0", "offset": [20529, 20614], "fn": "SafeERC20.callOptionalReturn"}, "4172": {"op": "ADD", "path": "0", "offset": [20529, 20614], "fn": "SafeERC20.callOptionalReturn"}, "4173": {"op": "DUP1", "path": "0", "offset": [20529, 20614], "fn": "SafeERC20.callOptionalReturn"}, "4174": {"op": "DUP1", "path": "0", "offset": [20529, 20614], "fn": "SafeERC20.callOptionalReturn"}, "4175": {"op": "PUSH1", "value": "0x20", "path": "0", "offset": [20529, 20614], "fn": "SafeERC20.callOptionalReturn"}, "4177": {"op": "ADD", "path": "0", "offset": [20529, 20614], "fn": "SafeERC20.callOptionalReturn"}, "4178": {"op": "DUP3", "path": "0", "offset": [20529, 20614], "fn": "SafeERC20.callOptionalReturn"}, "4179": {"op": "DUP2", "path": "0", "offset": [20529, 20614], "fn": "SafeERC20.callOptionalReturn"}, "4180": {"op": "SUB", "path": "0", "offset": [20529, 20614], "fn": "SafeERC20.callOptionalReturn"}, "4181": {"op": "DUP3", "path": "0", "offset": [20529, 20614], "fn": "SafeERC20.callOptionalReturn"}, "4182": {"op": "MSTORE", "path": "0", "offset": [20529, 20614], "fn": "SafeERC20.callOptionalReturn"}, "4183": {"op": "PUSH1", "value": "0x2A", "path": "0", "offset": [20529, 20614], "fn": "SafeERC20.callOptionalReturn"}, "4185": {"op": "DUP2", "path": "0", "offset": [20529, 20614], "fn": "SafeERC20.callOptionalReturn"}, "4186": {"op": "MSTORE", "path": "0", "offset": [20529, 20614], "fn": "SafeERC20.callOptionalReturn"}, "4187": {"op": "PUSH1", "value": "0x20", "path": "0", "offset": [20529, 20614], "fn": "SafeERC20.callOptionalReturn"}, "4189": {"op": "ADD", "path": "0", "offset": [20529, 20614], "fn": "SafeERC20.callOptionalReturn"}, "4190": {"op": "DUP1", "path": "0", "offset": [20529, 20614], "fn": "SafeERC20.callOptionalReturn"}, "4191": {"op": "PUSH2", "value": "0x1179", "path": "0", "offset": [20529, 20614], "fn": "SafeERC20.callOptionalReturn"}, "4194": {"op": "PUSH1", "value": "0x2A", "path": "0", "offset": [20529, 20614], "fn": "SafeERC20.callOptionalReturn"}, "4196": {"op": "SWAP2", "path": "0", "offset": [20529, 20614], "fn": "SafeERC20.callOptionalReturn"}, "4197": {"op": "CODECOPY", "path": "0", "offset": [20529, 20614], "fn": "SafeERC20.callOptionalReturn"}, "4198": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [20529, 20614], "fn": "SafeERC20.callOptionalReturn"}, "4200": {"op": "ADD", "path": "0", "offset": [20529, 20614], "fn": "SafeERC20.callOptionalReturn"}, "4201": {"op": "SWAP2", "path": "0", "offset": [20529, 20614], "fn": "SafeERC20.callOptionalReturn"}, "4202": {"op": "POP", "path": "0", "offset": [20529, 20614], "fn": "SafeERC20.callOptionalReturn"}, "4203": {"op": "POP", "path": "0", "offset": [20529, 20614], "fn": "SafeERC20.callOptionalReturn"}, "4204": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [20529, 20614], "fn": "SafeERC20.callOptionalReturn"}, "4206": {"op": "MLOAD", "path": "0", "offset": [20529, 20614], "fn": "SafeERC20.callOptionalReturn"}, "4207": {"op": "DUP1", "path": "0", "offset": [20529, 20614], "fn": "SafeERC20.callOptionalReturn"}, "4208": {"op": "SWAP2", "path": "0", "offset": [20529, 20614], "fn": "SafeERC20.callOptionalReturn"}, "4209": {"op": "SUB", "path": "0", "offset": [20529, 20614], "fn": "SafeERC20.callOptionalReturn"}, "4210": {"op": "SWAP1", "path": "0", "offset": [20529, 20614], "fn": "SafeERC20.callOptionalReturn"}, "4211": {"op": "REVERT", "path": "0", "offset": [20529, 20614], "fn": "SafeERC20.callOptionalReturn"}, "4212": {"op": "JUMPDEST", "path": "0", "offset": [20529, 20614], "fn": "SafeERC20.callOptionalReturn"}, "4213": {"op": "POP", "path": "0", "offset": [19536, 20631], "fn": "SafeERC20.callOptionalReturn"}, "4214": {"op": "POP", "path": "0", "offset": [19536, 20631], "fn": "SafeERC20.callOptionalReturn"}, "4215": {"op": "POP", "path": "0", "offset": [19536, 20631], "fn": "SafeERC20.callOptionalReturn"}, "4216": {"op": "POP", "path": "0", "offset": [19536, 20631], "fn": "SafeERC20.callOptionalReturn"}, "4217": {"op": "JUMP", "jump": "o", "path": "0", "offset": [19536, 20631], "fn": "SafeERC20.callOptionalReturn"}, "4218": {"op": "JUMPDEST", "path": "0", "offset": [17712, 17914], "fn": "SafeERC20.safeTransferFrom"}, "4219": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [17838, 17906], "fn": "SafeERC20.safeTransferFrom", "statement": 50}, "4221": {"op": "DUP1", "path": "0", "offset": [17838, 17906], "fn": "SafeERC20.safeTransferFrom"}, "4222": {"op": "MLOAD", "path": "0", "offset": [17838, 17906], "fn": "SafeERC20.safeTransferFrom"}, "4223": {"op": "PUSH1", "value": "0x1"}, "4225": {"op": "PUSH1", "value": "0x1"}, "4227": {"op": "PUSH1", "value": "0xA0"}, "4229": {"op": "SHL"}, "4230": {"op": "SUB"}, "4231": {"op": "DUP6", "path": "0", "offset": [17838, 17906], "fn": "SafeERC20.safeTransferFrom"}, "4232": {"op": "DUP2", "path": "0", "offset": [17838, 17906], "fn": "SafeERC20.safeTransferFrom"}, "4233": {"op": "AND", "path": "0", "offset": [17838, 17906], "fn": "SafeERC20.safeTransferFrom"}, "4234": {"op": "PUSH1", "value": "0x24", "path": "0", "offset": [17838, 17906], "fn": "SafeERC20.safeTransferFrom"}, "4236": {"op": "DUP4", "path": "0", "offset": [17838, 17906], "fn": "SafeERC20.safeTransferFrom"}, "4237": {"op": "ADD", "path": "0", "offset": [17838, 17906], "fn": "SafeERC20.safeTransferFrom"}, "4238": {"op": "MSTORE", "path": "0", "offset": [17838, 17906], "fn": "SafeERC20.safeTransferFrom"}, "4239": {"op": "DUP5", "path": "0", "offset": [17838, 17906], "fn": "SafeERC20.safeTransferFrom"}, "4240": {"op": "AND", "path": "0", "offset": [17838, 17906], "fn": "SafeERC20.safeTransferFrom"}, "4241": {"op": "PUSH1", "value": "0x44", "path": "0", "offset": [17838, 17906], "fn": "SafeERC20.safeTransferFrom"}, "4243": {"op": "DUP3", "path": "0", "offset": [17838, 17906], "fn": "SafeERC20.safeTransferFrom"}, "4244": {"op": "ADD", "path": "0", "offset": [17838, 17906], "fn": "SafeERC20.safeTransferFrom"}, "4245": {"op": "MSTORE", "path": "0", "offset": [17838, 17906], "fn": "SafeERC20.safeTransferFrom"}, "4246": {"op": "PUSH1", "value": "0x64", "path": "0", "offset": [17838, 17906], "fn": "SafeERC20.safeTransferFrom"}, "4248": {"op": "DUP1", "path": "0", "offset": [17838, 17906], "fn": "SafeERC20.safeTransferFrom"}, "4249": {"op": "DUP3", "path": "0", "offset": [17838, 17906], "fn": "SafeERC20.safeTransferFrom"}, "4250": {"op": "ADD", "path": "0", "offset": [17838, 17906], "fn": "SafeERC20.safeTransferFrom"}, "4251": {"op": "DUP5", "path": "0", "offset": [17838, 17906], "fn": "SafeERC20.safeTransferFrom"}, "4252": {"op": "SWAP1", "path": "0", "offset": [17838, 17906], "fn": "SafeERC20.safeTransferFrom"}, "4253": {"op": "MSTORE", "path": "0", "offset": [17838, 17906], "fn": "SafeERC20.safeTransferFrom"}, "4254": {"op": "DUP3", "path": "0", "offset": [17838, 17906], "fn": "SafeERC20.safeTransferFrom"}, "4255": {"op": "MLOAD", "path": "0", "offset": [17838, 17906], "fn": "SafeERC20.safeTransferFrom"}, "4256": {"op": "DUP1"}, "4257": {"op": "DUP4"}, "4258": {"op": "SUB"}, "4259": {"op": "SWAP1"}, "4260": {"op": "SWAP2"}, "4261": {"op": "ADD"}, "4262": {"op": "DUP2"}, "4263": {"op": "MSTORE"}, "4264": {"op": "PUSH1", "value": "0x84", "path": "0", "offset": [17838, 17906], "fn": "SafeERC20.safeTransferFrom"}, "4266": {"op": "SWAP1", "path": "0", "offset": [17838, 17906], "fn": "SafeERC20.safeTransferFrom"}, "4267": {"op": "SWAP2", "path": "0", "offset": [17838, 17906], "fn": "SafeERC20.safeTransferFrom"}, "4268": {"op": "ADD", "path": "0", "offset": [17838, 17906], "fn": "SafeERC20.safeTransferFrom"}, "4269": {"op": "SWAP1", "path": "0", "offset": [17838, 17906], "fn": "SafeERC20.safeTransferFrom"}, "4270": {"op": "SWAP2", "path": "0", "offset": [17838, 17906], "fn": "SafeERC20.safeTransferFrom"}, "4271": {"op": "MSTORE", "path": "0", "offset": [17838, 17906], "fn": "SafeERC20.safeTransferFrom"}, "4272": {"op": "PUSH1", "value": "0x20", "path": "0", "offset": [17838, 17906], "fn": "SafeERC20.safeTransferFrom"}, "4274": {"op": "DUP2"}, "4275": {"op": "ADD"}, "4276": {"op": "DUP1"}, "4277": {"op": "MLOAD"}, "4278": {"op": "PUSH1", "value": "0x1"}, "4280": {"op": "PUSH1", "value": "0x1"}, "4282": {"op": "PUSH1", "value": "0xE0"}, "4284": {"op": "SHL"}, "4285": {"op": "SUB"}, "4286": {"op": "AND"}, "4287": {"op": "PUSH4", "value": "0x23B872DD"}, "4292": {"op": "PUSH1", "value": "0xE0"}, "4294": {"op": "SHL"}, "4295": {"op": "OR"}, "4296": {"op": "SWAP1"}, "4297": {"op": "MSTORE"}, "4298": {"op": "PUSH2", "value": "0x1074", "path": "0", "offset": [17812, 17907], "fn": "SafeERC20.safeTransferFrom"}, "4301": {"op": "SWAP1", "path": "0", "offset": [17812, 17907], "fn": "SafeERC20.safeTransferFrom"}, "4302": {"op": "DUP6", "path": "0", "offset": [17831, 17836], "fn": "SafeERC20.safeTransferFrom"}, "4303": {"op": "SWAP1", "path": "0", "offset": [17831, 17836], "fn": "SafeERC20.safeTransferFrom"}, "4304": {"op": "PUSH2", "value": "0xEBC", "path": "0", "offset": [17812, 17830], "fn": "SafeERC20.safeTransferFrom"}, "4307": {"op": "JUMP", "jump": "i", "path": "0", "offset": [17812, 17907], "fn": "SafeERC20.safeTransferFrom"}, "4308": {"op": "JUMPDEST", "path": "0", "offset": [14464, 15261], "fn": "Address2.isContract"}, "4309": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [14524, 14528], "fn": "Address2.isContract"}, "4311": {"op": "DUP2", "path": "0", "offset": [15172, 15192], "fn": "Address2.isContract"}, "4312": {"op": "EXTCODEHASH", "path": "0", "offset": [15172, 15192], "fn": "Address2.isContract"}, "4313": {"op": "PUSH32", "value": "0xC5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470", "path": "0", "offset": [15017, 15083], "fn": "Address2.isContract"}, "4346": {"op": "DUP2", "path": "0", "offset": [15211, 15226], "fn": "Address2.isContract", "statement": 51}, "4347": {"op": "ISZERO", "path": "0", "offset": [15211, 15226], "fn": "Address2.isContract"}, "4348": {"op": "DUP1", "path": "0", "offset": [15211, 15226], "fn": "Address2.isContract"}, "4349": {"op": "ISZERO", "path": "0", "offset": [15211, 15226], "fn": "Address2.isContract"}, "4350": {"op": "SWAP1", "path": "0", "offset": [15211, 15226], "fn": "Address2.isContract"}, "4351": {"op": "PUSH2", "value": "0x1108", "path": "0", "offset": [15211, 15253], "fn": "Address2.isContract"}, "4354": {"op": "JUMPI", "path": "0", "offset": [15211, 15253], "fn": "Address2.isContract"}, "4355": {"op": "POP", "path": "0", "offset": [15211, 15253], "fn": "Address2.isContract"}, "4356": {"op": "DUP1", "path": "0", "offset": [15242, 15253], "fn": "Address2.isContract"}, "4357": {"op": "DUP3", "path": "0", "offset": [15230, 15238], "fn": "Address2.isContract"}, "4358": {"op": "EQ", "path": "0", "offset": [15230, 15253], "fn": "Address2.isContract"}, "4359": {"op": "ISZERO", "path": "0", "offset": [15230, 15253], "fn": "Address2.isContract"}, "4360": {"op": "JUMPDEST", "path": "0", "offset": [15211, 15253], "fn": "Address2.isContract"}, "4361": {"op": "SWAP5", "path": "0", "offset": [15203, 15254], "fn": "Address2.isContract"}, "4362": {"op": "SWAP4", "path": "0", "offset": [14464, 15261], "fn": "Address2.isContract"}, "4363": {"op": "POP"}, "4364": {"op": "POP"}, "4365": {"op": "POP"}, "4366": {"op": "POP"}, "4367": {"op": "JUMP", "jump": "o", "path": "0", "offset": [14464, 15261], "fn": "Address2.isContract"}}, "type": "contract", "abi": [{"inputs": [{"internalType": "address", "name": "_token", "type": "address"}, {"internalType": "address", "name": "_reward", "type": "address"}], "payable": false, "stateMutability": "nonpayable", "type": "constructor", "name": "constructor"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "previousOwner", "type": "address"}, {"indexed": true, "internalType": "address", "name": "newOwner", "type": "address"}], "name": "OwnershipTransferred", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "uint256", "name": "reward", "type": "uint256"}], "name": "RewardAdded", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "user", "type": "address"}, {"indexed": false, "internalType": "uint256", "name": "reward", "type": "uint256"}], "name": "RewardPaid", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "user", "type": "address"}, {"indexed": false, "internalType": "uint256", "name": "amount", "type": "uint256"}], "name": "Staked", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "user", "type": "address"}, {"indexed": false, "internalType": "uint256", "name": "amount", "type": "uint256"}], "name": "Withdrawn", "type": "event"}, {"constant": true, "inputs": [], "name": "DURATION", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "payable": false, "stateMutability": "view", "type": "function"}, {"constant": true, "inputs": [{"internalType": "address", "name": "account", "type": "address"}], "name": "balanceOf", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "payable": false, "stateMutability": "view", "type": "function"}, {"constant": true, "inputs": [{"internalType": "address", "name": "account", "type": "address"}], "name": "earned", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "payable": false, "stateMutability": "view", "type": "function"}, {"constant": false, "inputs": [], "name": "exit", "outputs": [], "payable": false, "stateMutability": "nonpayable", "type": "function"}, {"constant": false, "inputs": [], "name": "getReward", "outputs": [], "payable": false, "stateMutability": "nonpayable", "type": "function"}, {"constant": true, "inputs": [], "name": "isOwner", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "payable": false, "stateMutability": "view", "type": "function"}, {"constant": true, "inputs": [], "name": "lastTimeRewardApplicable", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "payable": false, "stateMutability": "view", "type": "function"}, {"constant": true, "inputs": [], "name": "lastUpdateTime", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "payable": false, "stateMutability": "view", "type": "function"}, {"constant": false, "inputs": [{"internalType": "uint256", "name": "reward", "type": "uint256"}], "name": "notifyRewardAmount", "outputs": [], "payable": false, "stateMutability": "nonpayable", "type": "function"}, {"constant": true, "inputs": [], "name": "owner", "outputs": [{"internalType": "address", "name": "", "type": "address"}], "payable": false, "stateMutability": "view", "type": "function"}, {"constant": true, "inputs": [], "name": "periodFinish", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "payable": false, "stateMutability": "view", "type": "function"}, {"constant": false, "inputs": [], "name": "renounceOwnership", "outputs": [], "payable": false, "stateMutability": "nonpayable", "type": "function"}, {"constant": true, "inputs": [], "name": "rewardPerToken", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "payable": false, "stateMutability": "view", "type": "function"}, {"constant": true, "inputs": [], "name": "rewardPerTokenStored", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "payable": false, "stateMutability": "view", "type": "function"}, {"constant": true, "inputs": [], "name": "rewardRate", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "payable": false, "stateMutability": "view", "type": "function"}, {"constant": true, "inputs": [{"internalType": "address", "name": "", "type": "address"}], "name": "rewards", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "payable": false, "stateMutability": "view", "type": "function"}, {"constant": false, "inputs": [{"internalType": "address", "name": "_rewardDistribution", "type": "address"}], "name": "setRewardDistribution", "outputs": [], "payable": false, "stateMutability": "nonpayable", "type": "function"}, {"constant": true, "inputs": [], "name": "snx", "outputs": [{"internalType": "contract IERC20", "name": "", "type": "address"}], "payable": false, "stateMutability": "view", "type": "function"}, {"constant": false, "inputs": [{"internalType": "uint256", "name": "amount", "type": "uint256"}], "name": "stake", "outputs": [], "payable": false, "stateMutability": "nonpayable", "type": "function"}, {"constant": true, "inputs": [], "name": "totalSupply", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "payable": false, "stateMutability": "view", "type": "function"}, {"constant": false, "inputs": [{"internalType": "address", "name": "newOwner", "type": "address"}], "name": "transferOwnership", "outputs": [], "payable": false, "stateMutability": "nonpayable", "type": "function"}, {"constant": true, "inputs": [], "name": "uni", "outputs": [{"internalType": "contract IERC20", "name": "", "type": "address"}], "payable": false, "stateMutability": "view", "type": "function"}, {"constant": true, "inputs": [{"internalType": "address", "name": "", "type": "address"}], "name": "userRewardPerTokenPaid", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "payable": false, "stateMutability": "view", "type": "function"}, {"constant": false, "inputs": [{"internalType": "uint256", "name": "amount", "type": "uint256"}], "name": "withdraw", "outputs": [], "payable": false, "stateMutability": "nonpayable", "type": "function"}], "ast": {"absolutePath": "contracts/testing/CurveRewards.sol", "exportedSymbols": {"Address2": [529], "Context": [278], "CurveRewards": [1248], "IERC20": [456], "IRewardDistributionRecipient": [778], "LPTokenWrapper": [884], "Math": [68], "Ownable": [389], "SafeERC20": [744], "SafeMath": [253]}, "id": 1249, "nodeType": "SourceUnit", "nodes": [{"id": 1, "literals": ["solidity", "^", "0.5", ".0"], "nodeType": "PragmaDirective", "src": "1492:23:0"}, {"baseContracts": [], "contractDependencies": [], "contractKind": "library", "documentation": "@dev Standard math utilities missing in the Solidity language.", "fullyImplemented": true, "id": 68, "linearizedBaseContracts": [68], "name": "Math", "nodeType": "ContractDefinition", "nodes": [{"body": {"id": 17, "nodeType": "Block", "src": "1741:38:0", "statements": [{"expression": {"argumentTypes": null, "condition": {"argumentTypes": null, "commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 12, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"argumentTypes": null, "id": 10, "name": "a", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3, "src": "1758:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">=", "rightExpression": {"argumentTypes": null, "id": 11, "name": "b", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5, "src": "1763:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "1758:6:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseExpression": {"argumentTypes": null, "id": 14, "name": "b", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5, "src": "1771:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 15, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "Conditional", "src": "1758:14:0", "trueExpression": {"argumentTypes": null, "id": 13, "name": "a", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3, "src": "1767:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 9, "id": 16, "nodeType": "Return", "src": "1751:21:0"}]}, "documentation": "@dev Returns the largest of two numbers.", "id": 18, "implemented": true, "kind": "function", "modifiers": [], "name": "max", "nodeType": "FunctionDefinition", "parameters": {"id": 6, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 3, "name": "a", "nodeType": "VariableDeclaration", "scope": 18, "src": "1687:9:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 2, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1687:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}, {"constant": false, "id": 5, "name": "b", "nodeType": "VariableDeclaration", "scope": 18, "src": "1698:9:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 4, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1698:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "src": "1686:22:0"}, "returnParameters": {"id": 9, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 8, "name": "", "nodeType": "VariableDeclaration", "scope": 18, "src": "1732:7:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 7, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1732:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "src": "1731:9:0"}, "scope": 68, "src": "1674:105:0", "stateMutability": "pure", "superFunction": null, "visibility": "internal"}, {"body": {"id": 34, "nodeType": "Block", "src": "1917:37:0", "statements": [{"expression": {"argumentTypes": null, "condition": {"argumentTypes": null, "commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 29, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"argumentTypes": null, "id": 27, "name": "a", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20, "src": "1934:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"argumentTypes": null, "id": 28, "name": "b", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22, "src": "1938:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "1934:5:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseExpression": {"argumentTypes": null, "id": 31, "name": "b", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22, "src": "1946:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 32, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "Conditional", "src": "1934:13:0", "trueExpression": {"argumentTypes": null, "id": 30, "name": "a", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20, "src": "1942:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 26, "id": 33, "nodeType": "Return", "src": "1927:20:0"}]}, "documentation": "@dev Returns the smallest of two numbers.", "id": 35, "implemented": true, "kind": "function", "modifiers": [], "name": "min", "nodeType": "FunctionDefinition", "parameters": {"id": 23, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 20, "name": "a", "nodeType": "VariableDeclaration", "scope": 35, "src": "1863:9:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 19, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1863:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}, {"constant": false, "id": 22, "name": "b", "nodeType": "VariableDeclaration", "scope": 35, "src": "1874:9:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 21, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1874:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "src": "1862:22:0"}, "returnParameters": {"id": 26, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 25, "name": "", "nodeType": "VariableDeclaration", "scope": 35, "src": "1908:7:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 24, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1908:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "src": "1907:9:0"}, "scope": 68, "src": "1850:104:0", "stateMutability": "pure", "superFunction": null, "visibility": "internal"}, {"body": {"id": 66, "nodeType": "Block", "src": "2138:119:0", "statements": [{"expression": {"argumentTypes": null, "commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 64, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"argumentTypes": null, "commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 52, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"argumentTypes": null, "components": [{"argumentTypes": null, "commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 46, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"argumentTypes": null, "id": 44, "name": "a", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 37, "src": "2210:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "/", "rightExpression": {"argumentTypes": null, "hexValue": "32", "id": 45, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2214:1:0", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}, "src": "2210:5:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "id": 47, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "2209:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": {"argumentTypes": null, "components": [{"argumentTypes": null, "commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 50, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"argumentTypes": null, "id": 48, "name": "b", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 39, "src": "2220:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "/", "rightExpression": {"argumentTypes": null, "hexValue": "32", "id": 49, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2224:1:0", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}, "src": "2220:5:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "id": 51, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "2219:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "2209:17:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": {"argumentTypes": null, "components": [{"argumentTypes": null, "commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 62, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"argumentTypes": null, "components": [{"argumentTypes": null, "commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 59, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"argumentTypes": null, "commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 55, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"argumentTypes": null, "id": 53, "name": "a", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 37, "src": "2231:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "%", "rightExpression": {"argumentTypes": null, "hexValue": "32", "id": 54, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2235:1:0", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}, "src": "2231:5:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": {"argumentTypes": null, "commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 58, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"argumentTypes": null, "id": 56, "name": "b", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 39, "src": "2239:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "%", "rightExpression": {"argumentTypes": null, "hexValue": "32", "id": 57, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2243:1:0", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}, "src": "2239:5:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "2231:13:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "id": 60, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "2230:15:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "/", "rightExpression": {"argumentTypes": null, "hexValue": "32", "id": 61, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2248:1:0", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}, "src": "2230:19:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "id": 63, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "2229:21:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "2209:41:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 43, "id": 65, "nodeType": "Return", "src": "2202:48:0"}]}, "documentation": "@dev Returns the average of two numbers. The result is rounded towards\nzero.", "id": 67, "implemented": true, "kind": "function", "modifiers": [], "name": "average", "nodeType": "FunctionDefinition", "parameters": {"id": 40, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 37, "name": "a", "nodeType": "VariableDeclaration", "scope": 67, "src": "2084:9:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 36, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2084:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}, {"constant": false, "id": 39, "name": "b", "nodeType": "VariableDeclaration", "scope": 67, "src": "2095:9:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 38, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2095:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "src": "2083:22:0"}, "returnParameters": {"id": 43, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 42, "name": "", "nodeType": "VariableDeclaration", "scope": 67, "src": "2129:7:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 41, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2129:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "src": "2128:9:0"}, "scope": 68, "src": "2067:190:0", "stateMutability": "pure", "superFunction": null, "visibility": "internal"}], "scope": 1249, "src": "1591:668:0"}, {"baseContracts": [], "contractDependencies": [], "contractKind": "library", "documentation": "@dev Wrappers over Solidity's arithmetic operations with added overflow\nchecks.\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\nin bugs, because programmers usually assume that an overflow raises an\nerror, which is the standard behavior in high level programming languages.\n`SafeMath` restores this intuition by reverting the transaction when an\noperation overflows.\n * Using this library instead of the unchecked operations eliminates an entire\nclass of bugs, so it's recommended to use it always.", "fullyImplemented": true, "id": 253, "linearizedBaseContracts": [253], "name": "SafeMath", "nodeType": "ContractDefinition", "nodes": [{"body": {"id": 92, "nodeType": "Block", "src": "3191:109:0", "statements": [{"assignments": [78], "declarations": [{"constant": false, "id": 78, "name": "c", "nodeType": "VariableDeclaration", "scope": 92, "src": "3201:9:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 77, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3201:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "id": 82, "initialValue": {"argumentTypes": null, "commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 81, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"argumentTypes": null, "id": 79, "name": "a", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 70, "src": "3213:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": {"argumentTypes": null, "id": 80, "name": "b", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 72, "src": "3217:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "3213:5:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "3201:17:0"}, {"expression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 86, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"argumentTypes": null, "id": 84, "name": "c", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 78, "src": "3236:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">=", "rightExpression": {"argumentTypes": null, "id": 85, "name": "a", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 70, "src": "3241:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "3236:6:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"argumentTypes": null, "hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77", "id": 87, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "3244:29:0", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a", "typeString": "literal_string \"SafeMath: addition overflow\""}, "value": "SafeMath: addition overflow"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a", "typeString": "literal_string \"SafeMath: addition overflow\""}], "id": 83, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [1266, 1267], "referencedDeclaration": 1267, "src": "3228:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 88, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3228:46:0", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 89, "nodeType": "ExpressionStatement", "src": "3228:46:0"}, {"expression": {"argumentTypes": null, "id": 90, "name": "c", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 78, "src": "3292:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 76, "id": 91, "nodeType": "Return", "src": "3285:8:0"}]}, "documentation": "@dev Returns the addition of two unsigned integers, reverting on\noverflow.\n     * Counterpart to Solidity's `+` operator.\n     * Requirements:\n- Addition cannot overflow.", "id": 93, "implemented": true, "kind": "function", "modifiers": [], "name": "add", "nodeType": "FunctionDefinition", "parameters": {"id": 73, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 70, "name": "a", "nodeType": "VariableDeclaration", "scope": 93, "src": "3137:9:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 69, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3137:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}, {"constant": false, "id": 72, "name": "b", "nodeType": "VariableDeclaration", "scope": 93, "src": "3148:9:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 71, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3148:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "src": "3136:22:0"}, "returnParameters": {"id": 76, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 75, "name": "", "nodeType": "VariableDeclaration", "scope": 93, "src": "3182:7:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 74, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3182:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "src": "3181:9:0"}, "scope": 253, "src": "3124:176:0", "stateMutability": "pure", "superFunction": null, "visibility": "internal"}, {"body": {"id": 108, "nodeType": "Block", "src": "3631:67:0", "statements": [{"expression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "id": 103, "name": "a", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 95, "src": "3652:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"argumentTypes": null, "id": 104, "name": "b", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 97, "src": "3655:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"argumentTypes": null, "hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77", "id": 105, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "3658:32:0", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862", "typeString": "literal_string \"SafeMath: subtraction overflow\""}, "value": "SafeMath: subtraction overflow"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862", "typeString": "literal_string \"SafeMath: subtraction overflow\""}], "id": 102, "name": "sub", "nodeType": "Identifier", "overloadedDeclarations": [109, 136], "referencedDeclaration": 136, "src": "3648:3:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$", "typeString": "function (uint256,uint256,string memory) pure returns (uint256)"}}, "id": 106, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3648:43:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 101, "id": 107, "nodeType": "Return", "src": "3641:50:0"}]}, "documentation": "@dev Returns the subtraction of two unsigned integers, reverting on\noverflow (when the result is negative).\n     * Counterpart to Solidity's `-` operator.\n     * Requirements:\n- Subtraction cannot overflow.", "id": 109, "implemented": true, "kind": "function", "modifiers": [], "name": "sub", "nodeType": "FunctionDefinition", "parameters": {"id": 98, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 95, "name": "a", "nodeType": "VariableDeclaration", "scope": 109, "src": "3577:9:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 94, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3577:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}, {"constant": false, "id": 97, "name": "b", "nodeType": "VariableDeclaration", "scope": 109, "src": "3588:9:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 96, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3588:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "src": "3576:22:0"}, "returnParameters": {"id": 101, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 100, "name": "", "nodeType": "VariableDeclaration", "scope": 109, "src": "3622:7:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 99, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3622:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "src": "3621:9:0"}, "scope": 253, "src": "3564:134:0", "stateMutability": "pure", "superFunction": null, "visibility": "internal"}, {"body": {"id": 135, "nodeType": "Block", "src": "4117:92:0", "statements": [{"expression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 123, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"argumentTypes": null, "id": 121, "name": "b", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 113, "src": "4135:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<=", "rightExpression": {"argumentTypes": null, "id": 122, "name": "a", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 111, "src": "4140:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "4135:6:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"argumentTypes": null, "id": 124, "name": "errorMessage", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 115, "src": "4143:12:0", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}], "id": 120, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [1266, 1267], "referencedDeclaration": 1267, "src": "4127:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 125, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4127:29:0", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 126, "nodeType": "ExpressionStatement", "src": "4127:29:0"}, {"assignments": [128], "declarations": [{"constant": false, "id": 128, "name": "c", "nodeType": "VariableDeclaration", "scope": 135, "src": "4166:9:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 127, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4166:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "id": 132, "initialValue": {"argumentTypes": null, "commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 131, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"argumentTypes": null, "id": 129, "name": "a", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 111, "src": "4178:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "-", "rightExpression": {"argumentTypes": null, "id": 130, "name": "b", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 113, "src": "4182:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "4178:5:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "4166:17:0"}, {"expression": {"argumentTypes": null, "id": 133, "name": "c", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 128, "src": "4201:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 119, "id": 134, "nodeType": "Return", "src": "4194:8:0"}]}, "documentation": "@dev Returns the subtraction of two unsigned integers, reverting with custom message on\noverflow (when the result is negative).\n     * Counterpart to Solidity's `-` operator.\n     * Requirements:\n- Subtraction cannot overflow.\n     * _Available since v2.4.0._", "id": 136, "implemented": true, "kind": "function", "modifiers": [], "name": "sub", "nodeType": "FunctionDefinition", "parameters": {"id": 116, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 111, "name": "a", "nodeType": "VariableDeclaration", "scope": 136, "src": "4035:9:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 110, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4035:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}, {"constant": false, "id": 113, "name": "b", "nodeType": "VariableDeclaration", "scope": 136, "src": "4046:9:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 112, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4046:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}, {"constant": false, "id": 115, "name": "errorMessage", "nodeType": "VariableDeclaration", "scope": 136, "src": "4057:26:0", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 114, "name": "string", "nodeType": "ElementaryTypeName", "src": "4057:6:0", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "value": null, "visibility": "internal"}], "src": "4034:50:0"}, "returnParameters": {"id": 119, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 118, "name": "", "nodeType": "VariableDeclaration", "scope": 136, "src": "4108:7:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 117, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4108:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "src": "4107:9:0"}, "scope": 253, "src": "4022:187:0", "stateMutability": "pure", "superFunction": null, "visibility": "internal"}, {"body": {"id": 169, "nodeType": "Block", "src": "4516:392:0", "statements": [{"condition": {"argumentTypes": null, "commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 147, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"argumentTypes": null, "id": 145, "name": "a", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 138, "src": "4748:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"argumentTypes": null, "hexValue": "30", "id": 146, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "4753:1:0", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "4748:6:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": null, "id": 151, "nodeType": "IfStatement", "src": "4744:45:0", "trueBody": {"id": 150, "nodeType": "Block", "src": "4756:33:0", "statements": [{"expression": {"argumentTypes": null, "hexValue": "30", "id": 148, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "4777:1:0", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "functionReturnParameters": 144, "id": 149, "nodeType": "Return", "src": "4770:8:0"}]}}, {"assignments": [153], "declarations": [{"constant": false, "id": 153, "name": "c", "nodeType": "VariableDeclaration", "scope": 169, "src": "4799:9:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 152, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4799:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "id": 157, "initialValue": {"argumentTypes": null, "commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 156, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"argumentTypes": null, "id": 154, "name": "a", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 138, "src": "4811:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "*", "rightExpression": {"argumentTypes": null, "id": 155, "name": "b", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 140, "src": "4815:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "4811:5:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "4799:17:0"}, {"expression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 163, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"argumentTypes": null, "commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 161, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"argumentTypes": null, "id": 159, "name": "c", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 153, "src": "4834:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "/", "rightExpression": {"argumentTypes": null, "id": 160, "name": "a", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 138, "src": "4838:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "4834:5:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"argumentTypes": null, "id": 162, "name": "b", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 140, "src": "4843:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "4834:10:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"argumentTypes": null, "hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77", "id": 164, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "4846:35:0", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3", "typeString": "literal_string \"SafeMath: multiplication overflow\""}, "value": "SafeMath: multiplication overflow"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3", "typeString": "literal_string \"SafeMath: multiplication overflow\""}], "id": 158, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [1266, 1267], "referencedDeclaration": 1267, "src": "4826:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 165, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4826:56:0", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 166, "nodeType": "ExpressionStatement", "src": "4826:56:0"}, {"expression": {"argumentTypes": null, "id": 167, "name": "c", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 153, "src": "4900:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 144, "id": 168, "nodeType": "Return", "src": "4893:8:0"}]}, "documentation": "@dev Returns the multiplication of two unsigned integers, reverting on\noverflow.\n     * Counterpart to Solidity's `*` operator.\n     * Requirements:\n- Multiplication cannot overflow.", "id": 170, "implemented": true, "kind": "function", "modifiers": [], "name": "mul", "nodeType": "FunctionDefinition", "parameters": {"id": 141, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 138, "name": "a", "nodeType": "VariableDeclaration", "scope": 170, "src": "4462:9:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 137, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4462:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}, {"constant": false, "id": 140, "name": "b", "nodeType": "VariableDeclaration", "scope": 170, "src": "4473:9:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 139, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4473:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "src": "4461:22:0"}, "returnParameters": {"id": 144, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 143, "name": "", "nodeType": "VariableDeclaration", "scope": 170, "src": "4507:7:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 142, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4507:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "src": "4506:9:0"}, "scope": 253, "src": "4449:459:0", "stateMutability": "pure", "superFunction": null, "visibility": "internal"}, {"body": {"id": 185, "nodeType": "Block", "src": "5430:63:0", "statements": [{"expression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "id": 180, "name": "a", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 172, "src": "5451:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"argumentTypes": null, "id": 181, "name": "b", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 174, "src": "5454:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"argumentTypes": null, "hexValue": "536166654d6174683a206469766973696f6e206279207a65726f", "id": 182, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "5457:28:0", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f", "typeString": "literal_string \"SafeMath: division by zero\""}, "value": "SafeMath: division by zero"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f", "typeString": "literal_string \"SafeMath: division by zero\""}], "id": 179, "name": "div", "nodeType": "Identifier", "overloadedDeclarations": [186, 213], "referencedDeclaration": 213, "src": "5447:3:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$", "typeString": "function (uint256,uint256,string memory) pure returns (uint256)"}}, "id": 183, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5447:39:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 178, "id": 184, "nodeType": "Return", "src": "5440:46:0"}]}, "documentation": "@dev Returns the integer division of two unsigned integers. Reverts on\ndivision by zero. The result is rounded towards zero.\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n`revert` opcode (which leaves remaining gas untouched) while Solidity\nuses an invalid opcode to revert (consuming all remaining gas).\n     * Requirements:\n- The divisor cannot be zero.", "id": 186, "implemented": true, "kind": "function", "modifiers": [], "name": "div", "nodeType": "FunctionDefinition", "parameters": {"id": 175, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 172, "name": "a", "nodeType": "VariableDeclaration", "scope": 186, "src": "5376:9:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 171, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5376:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}, {"constant": false, "id": 174, "name": "b", "nodeType": "VariableDeclaration", "scope": 186, "src": "5387:9:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 173, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5387:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "src": "5375:22:0"}, "returnParameters": {"id": 178, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 177, "name": "", "nodeType": "VariableDeclaration", "scope": 186, "src": "5421:7:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 176, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5421:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "src": "5420:9:0"}, "scope": 253, "src": "5363:130:0", "stateMutability": "pure", "superFunction": null, "visibility": "internal"}, {"body": {"id": 212, "nodeType": "Block", "src": "6103:243:0", "statements": [{"expression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 200, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"argumentTypes": null, "id": 198, "name": "b", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 190, "src": "6187:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"argumentTypes": null, "hexValue": "30", "id": 199, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "6191:1:0", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "6187:5:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"argumentTypes": null, "id": 201, "name": "errorMessage", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 192, "src": "6194:12:0", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}], "id": 197, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [1266, 1267], "referencedDeclaration": 1267, "src": "6179:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 202, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6179:28:0", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 203, "nodeType": "ExpressionStatement", "src": "6179:28:0"}, {"assignments": [205], "declarations": [{"constant": false, "id": 205, "name": "c", "nodeType": "VariableDeclaration", "scope": 212, "src": "6217:9:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 204, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6217:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "id": 209, "initialValue": {"argumentTypes": null, "commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 208, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"argumentTypes": null, "id": 206, "name": "a", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 188, "src": "6229:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "/", "rightExpression": {"argumentTypes": null, "id": 207, "name": "b", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 190, "src": "6233:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "6229:5:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "6217:17:0"}, {"expression": {"argumentTypes": null, "id": 210, "name": "c", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 205, "src": "6338:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 196, "id": 211, "nodeType": "Return", "src": "6331:8:0"}]}, "documentation": "@dev Returns the integer division of two unsigned integers. Reverts with custom message on\ndivision by zero. The result is rounded towards zero.\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n`revert` opcode (which leaves remaining gas untouched) while Solidity\nuses an invalid opcode to revert (consuming all remaining gas).\n     * Requirements:\n- The divisor cannot be zero.\n     * _Available since v2.4.0._", "id": 213, "implemented": true, "kind": "function", "modifiers": [], "name": "div", "nodeType": "FunctionDefinition", "parameters": {"id": 193, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 188, "name": "a", "nodeType": "VariableDeclaration", "scope": 213, "src": "6021:9:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 187, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6021:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}, {"constant": false, "id": 190, "name": "b", "nodeType": "VariableDeclaration", "scope": 213, "src": "6032:9:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 189, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6032:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}, {"constant": false, "id": 192, "name": "errorMessage", "nodeType": "VariableDeclaration", "scope": 213, "src": "6043:26:0", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 191, "name": "string", "nodeType": "ElementaryTypeName", "src": "6043:6:0", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "value": null, "visibility": "internal"}], "src": "6020:50:0"}, "returnParameters": {"id": 196, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 195, "name": "", "nodeType": "VariableDeclaration", "scope": 213, "src": "6094:7:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 194, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6094:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "src": "6093:9:0"}, "scope": 253, "src": "6008:338:0", "stateMutability": "pure", "superFunction": null, "visibility": "internal"}, {"body": {"id": 228, "nodeType": "Block", "src": "6857:61:0", "statements": [{"expression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "id": 223, "name": "a", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 215, "src": "6878:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"argumentTypes": null, "id": 224, "name": "b", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 217, "src": "6881:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"argumentTypes": null, "hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f", "id": 225, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "6884:26:0", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832", "typeString": "literal_string \"SafeMath: modulo by zero\""}, "value": "SafeMath: modulo by zero"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832", "typeString": "literal_string \"SafeMath: modulo by zero\""}], "id": 222, "name": "mod", "nodeType": "Identifier", "overloadedDeclarations": [229, 252], "referencedDeclaration": 252, "src": "6874:3:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$", "typeString": "function (uint256,uint256,string memory) pure returns (uint256)"}}, "id": 226, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6874:37:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 221, "id": 227, "nodeType": "Return", "src": "6867:44:0"}]}, "documentation": "@dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\nReverts when dividing by zero.\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\nopcode (which leaves remaining gas untouched) while Solidity uses an\ninvalid opcode to revert (consuming all remaining gas).\n     * Requirements:\n- The divisor cannot be zero.", "id": 229, "implemented": true, "kind": "function", "modifiers": [], "name": "mod", "nodeType": "FunctionDefinition", "parameters": {"id": 218, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 215, "name": "a", "nodeType": "VariableDeclaration", "scope": 229, "src": "6803:9:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 214, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6803:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}, {"constant": false, "id": 217, "name": "b", "nodeType": "VariableDeclaration", "scope": 229, "src": "6814:9:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 216, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6814:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "src": "6802:22:0"}, "returnParameters": {"id": 221, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 220, "name": "", "nodeType": "VariableDeclaration", "scope": 229, "src": "6848:7:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 219, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6848:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "src": "6847:9:0"}, "scope": 253, "src": "6790:128:0", "stateMutability": "pure", "superFunction": null, "visibility": "internal"}, {"body": {"id": 251, "nodeType": "Block", "src": "7517:68:0", "statements": [{"expression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 243, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"argumentTypes": null, "id": 241, "name": "b", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 233, "src": "7535:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"argumentTypes": null, "hexValue": "30", "id": 242, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "7540:1:0", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "7535:6:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"argumentTypes": null, "id": 244, "name": "errorMessage", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 235, "src": "7543:12:0", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}], "id": 240, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [1266, 1267], "referencedDeclaration": 1267, "src": "7527:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 245, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7527:29:0", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 246, "nodeType": "ExpressionStatement", "src": "7527:29:0"}, {"expression": {"argumentTypes": null, "commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 249, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"argumentTypes": null, "id": 247, "name": "a", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 231, "src": "7573:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "%", "rightExpression": {"argumentTypes": null, "id": 248, "name": "b", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 233, "src": "7577:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "7573:5:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 239, "id": 250, "nodeType": "Return", "src": "7566:12:0"}]}, "documentation": "@dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\nReverts with custom message when dividing by zero.\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\nopcode (which leaves remaining gas untouched) while Solidity uses an\ninvalid opcode to revert (consuming all remaining gas).\n     * Requirements:\n- The divisor cannot be zero.\n     * _Available since v2.4.0._", "id": 252, "implemented": true, "kind": "function", "modifiers": [], "name": "mod", "nodeType": "FunctionDefinition", "parameters": {"id": 236, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 231, "name": "a", "nodeType": "VariableDeclaration", "scope": 252, "src": "7435:9:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 230, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7435:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}, {"constant": false, "id": 233, "name": "b", "nodeType": "VariableDeclaration", "scope": 252, "src": "7446:9:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 232, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7446:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}, {"constant": false, "id": 235, "name": "errorMessage", "nodeType": "VariableDeclaration", "scope": 252, "src": "7457:26:0", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 234, "name": "string", "nodeType": "ElementaryTypeName", "src": "7457:6:0", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "value": null, "visibility": "internal"}], "src": "7434:50:0"}, "returnParameters": {"id": 239, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 238, "name": "", "nodeType": "VariableDeclaration", "scope": 252, "src": "7508:7:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 237, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7508:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "src": "7507:9:0"}, "scope": 253, "src": "7422:163:0", "stateMutability": "pure", "superFunction": null, "visibility": "internal"}], "scope": 1249, "src": "2879:4708:0"}, {"baseContracts": [], "contractDependencies": [], "contractKind": "contract", "documentation": null, "fullyImplemented": true, "id": 278, "linearizedBaseContracts": [278], "name": "Context", "nodeType": "ContractDefinition", "nodes": [{"body": {"id": 256, "nodeType": "Block", "src": "8342:3:0", "statements": []}, "documentation": null, "id": 257, "implemented": true, "kind": "constructor", "modifiers": [], "name": "", "nodeType": "FunctionDefinition", "parameters": {"id": 254, "nodeType": "ParameterList", "parameters": [], "src": "8330:2:0"}, "returnParameters": {"id": 255, "nodeType": "ParameterList", "parameters": [], "src": "8342:0:0"}, "scope": 278, "src": "8318:27:0", "stateMutability": "nonpayable", "superFunction": null, "visibility": "internal"}, {"body": {"id": 265, "nodeType": "Block", "src": "8466:34:0", "statements": [{"expression": {"argumentTypes": null, "expression": {"argumentTypes": null, "id": 262, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1263, "src": "8483:3:0", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 263, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "referencedDeclaration": null, "src": "8483:10:0", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "functionReturnParameters": 261, "id": 264, "nodeType": "Return", "src": "8476:17:0"}]}, "documentation": null, "id": 266, "implemented": true, "kind": "function", "modifiers": [], "name": "_msgSender", "nodeType": "FunctionDefinition", "parameters": {"id": 258, "nodeType": "ParameterList", "parameters": [], "src": "8423:2:0"}, "returnParameters": {"id": 261, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 260, "name": "", "nodeType": "VariableDeclaration", "scope": 266, "src": "8449:15:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}, "typeName": {"id": 259, "name": "address", "nodeType": "ElementaryTypeName", "src": "8449:15:0", "stateMutability": "payable", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "value": null, "visibility": "internal"}], "src": "8448:17:0"}, "scope": 278, "src": "8404:96:0", "stateMutability": "view", "superFunction": null, "visibility": "internal"}, {"body": {"id": 276, "nodeType": "Block", "src": "8563:165:0", "statements": [{"expression": {"argumentTypes": null, "id": 271, "name": "this", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1281, "src": "8573:4:0", "typeDescriptions": {"typeIdentifier": "t_contract$_Context_$278", "typeString": "contract Context"}}, "id": 272, "nodeType": "ExpressionStatement", "src": "8573:4:0"}, {"expression": {"argumentTypes": null, "expression": {"argumentTypes": null, "id": 273, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1263, "src": "8713:3:0", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 274, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "data", "nodeType": "MemberAccess", "referencedDeclaration": null, "src": "8713:8:0", "typeDescriptions": {"typeIdentifier": "t_bytes_calldata_ptr", "typeString": "bytes calldata"}}, "functionReturnParameters": 270, "id": 275, "nodeType": "Return", "src": "8706:15:0"}]}, "documentation": null, "id": 277, "implemented": true, "kind": "function", "modifiers": [], "name": "_msgData", "nodeType": "FunctionDefinition", "parameters": {"id": 267, "nodeType": "ParameterList", "parameters": [], "src": "8523:2:0"}, "returnParameters": {"id": 270, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 269, "name": "", "nodeType": "VariableDeclaration", "scope": 277, "src": "8549:12:0", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 268, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "8549:5:0", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "value": null, "visibility": "internal"}], "src": "8548:14:0"}, "scope": 278, "src": "8506:222:0", "stateMutability": "view", "superFunction": null, "visibility": "internal"}], "scope": 1249, "src": "8141:589:0"}, {"baseContracts": [{"arguments": null, "baseName": {"contractScope": null, "id": 279, "name": "Context", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 278, "src": "9171:7:0", "typeDescriptions": {"typeIdentifier": "t_contract$_Context_$278", "typeString": "contract Context"}}, "id": 280, "nodeType": "InheritanceSpecifier", "src": "9171:7:0"}], "contractDependencies": [278], "contractKind": "contract", "documentation": "@dev Contract module which provides a basic access control mechanism, where\nthere is an account (an owner) that can be granted exclusive access to\nspecific functions.\n * This module is used through inheritance. It will make available the modifier\n`onlyOwner`, which can be applied to your functions to restrict their use to\nthe owner.", "fullyImplemented": true, "id": 389, "linearizedBaseContracts": [389, 278], "name": "Ownable", "nodeType": "ContractDefinition", "nodes": [{"constant": false, "id": 282, "name": "_owner", "nodeType": "VariableDeclaration", "scope": 389, "src": "9185:22:0", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 281, "name": "address", "nodeType": "ElementaryTypeName", "src": "9185:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "value": null, "visibility": "private"}, {"anonymous": false, "documentation": null, "id": 288, "name": "OwnershipTransferred", "nodeType": "EventDefinition", "parameters": {"id": 287, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 284, "indexed": true, "name": "previousOwner", "nodeType": "VariableDeclaration", "scope": 288, "src": "9241:29:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 283, "name": "address", "nodeType": "ElementaryTypeName", "src": "9241:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "value": null, "visibility": "internal"}, {"constant": false, "id": 286, "indexed": true, "name": "newOwner", "nodeType": "VariableDeclaration", "scope": 288, "src": "9272:24:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 285, "name": "address", "nodeType": "ElementaryTypeName", "src": "9272:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "value": null, "visibility": "internal"}], "src": "9240:57:0"}, "src": "9214:84:0"}, {"body": {"id": 303, "nodeType": "Block", "src": "9424:93:0", "statements": [{"expression": {"argumentTypes": null, "id": 294, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"argumentTypes": null, "id": 291, "name": "_owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 282, "src": "9434:6:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"argumentTypes": null, "arguments": [], "expression": {"argumentTypes": [], "id": 292, "name": "_msgSender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 266, "src": "9443:10:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$", "typeString": "function () view returns (address payable)"}}, "id": 293, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9443:12:0", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "src": "9434:21:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 295, "nodeType": "ExpressionStatement", "src": "9434:21:0"}, {"eventCall": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "arguments": [{"argumentTypes": null, "hexValue": "30", "id": 298, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "9499:1:0", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 297, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "9491:7:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": "address"}, "id": 299, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9491:10:0", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, {"argumentTypes": null, "id": 300, "name": "_owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 282, "src": "9503:6:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address_payable", "typeString": "address payable"}, {"typeIdentifier": "t_address", "typeString": "address"}], "id": 296, "name": "OwnershipTransferred", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 288, "src": "9470:20:0", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$", "typeString": "function (address,address)"}}, "id": 301, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9470:40:0", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 302, "nodeType": "EmitStatement", "src": "9465:45:0"}]}, "documentation": "@dev Initializes the contract setting the deployer as the initial owner.", "id": 304, "implemented": true, "kind": "constructor", "modifiers": [], "name": "", "nodeType": "FunctionDefinition", "parameters": {"id": 289, "nodeType": "ParameterList", "parameters": [], "src": "9412:2:0"}, "returnParameters": {"id": 290, "nodeType": "ParameterList", "parameters": [], "src": "9424:0:0"}, "scope": 389, "src": "9400:117:0", "stateMutability": "nonpayable", "superFunction": null, "visibility": "internal"}, {"body": {"id": 311, "nodeType": "Block", "src": "9640:30:0", "statements": [{"expression": {"argumentTypes": null, "id": 309, "name": "_owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 282, "src": "9657:6:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "functionReturnParameters": 308, "id": 310, "nodeType": "Return", "src": "9650:13:0"}]}, "documentation": "@dev Returns the address of the current owner.", "id": 312, "implemented": true, "kind": "function", "modifiers": [], "name": "owner", "nodeType": "FunctionDefinition", "parameters": {"id": 305, "nodeType": "ParameterList", "parameters": [], "src": "9607:2:0"}, "returnParameters": {"id": 308, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 307, "name": "", "nodeType": "VariableDeclaration", "scope": 312, "src": "9631:7:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 306, "name": "address", "nodeType": "ElementaryTypeName", "src": "9631:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "value": null, "visibility": "internal"}], "src": "9630:9:0"}, "scope": 389, "src": "9593:77:0", "stateMutability": "view", "superFunction": null, "visibility": "public"}, {"body": {"id": 321, "nodeType": "Block", "src": "9779:82:0", "statements": [{"expression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "arguments": [], "expression": {"argumentTypes": [], "id": 315, "name": "isOwner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 333, "src": "9797:7:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$", "typeString": "function () view returns (bool)"}}, "id": 316, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9797:9:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"argumentTypes": null, "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572", "id": 317, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "9808:34:0", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe", "typeString": "literal_string \"Ownable: caller is not the owner\""}, "value": "Ownable: caller is not the owner"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe", "typeString": "literal_string \"Ownable: caller is not the owner\""}], "id": 314, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [1266, 1267], "referencedDeclaration": 1267, "src": "9789:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 318, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9789:54:0", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 319, "nodeType": "ExpressionStatement", "src": "9789:54:0"}, {"id": 320, "nodeType": "PlaceholderStatement", "src": "9853:1:0"}]}, "documentation": "@dev Throws if called by any account other than the owner.", "id": 322, "name": "onlyOwner", "nodeType": "ModifierDefinition", "parameters": {"id": 313, "nodeType": "ParameterList", "parameters": [], "src": "9776:2:0"}, "src": "9758:103:0", "visibility": "internal"}, {"body": {"id": 332, "nodeType": "Block", "src": "9990:46:0", "statements": [{"expression": {"argumentTypes": null, "commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 330, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"argumentTypes": null, "arguments": [], "expression": {"argumentTypes": [], "id": 327, "name": "_msgSender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 266, "src": "10007:10:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$", "typeString": "function () view returns (address payable)"}}, "id": 328, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10007:12:0", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"argumentTypes": null, "id": 329, "name": "_owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 282, "src": "10023:6:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "10007:22:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "functionReturnParameters": 326, "id": 331, "nodeType": "Return", "src": "10000:29:0"}]}, "documentation": "@dev Returns true if the caller is the current owner.", "id": 333, "implemented": true, "kind": "function", "modifiers": [], "name": "isOwner", "nodeType": "FunctionDefinition", "parameters": {"id": 323, "nodeType": "ParameterList", "parameters": [], "src": "9960:2:0"}, "returnParameters": {"id": 326, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 325, "name": "", "nodeType": "VariableDeclaration", "scope": 333, "src": "9984:4:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 324, "name": "bool", "nodeType": "ElementaryTypeName", "src": "9984:4:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "value": null, "visibility": "internal"}], "src": "9983:6:0"}, "scope": 389, "src": "9944:92:0", "stateMutability": "view", "superFunction": null, "visibility": "public"}, {"body": {"id": 351, "nodeType": "Block", "src": "10424:91:0", "statements": [{"eventCall": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "id": 339, "name": "_owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 282, "src": "10460:6:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"argumentTypes": null, "arguments": [{"argumentTypes": null, "hexValue": "30", "id": 341, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "10476:1:0", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 340, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "10468:7:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": "address"}, "id": 342, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10468:10:0", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address_payable", "typeString": "address payable"}], "id": 338, "name": "OwnershipTransferred", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 288, "src": "10439:20:0", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$", "typeString": "function (address,address)"}}, "id": 343, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10439:40:0", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 344, "nodeType": "EmitStatement", "src": "10434:45:0"}, {"expression": {"argumentTypes": null, "id": 349, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"argumentTypes": null, "id": 345, "name": "_owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 282, "src": "10489:6:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "hexValue": "30", "id": 347, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "10506:1:0", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 346, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "10498:7:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": "address"}, "id": 348, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10498:10:0", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "src": "10489:19:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 350, "nodeType": "ExpressionStatement", "src": "10489:19:0"}]}, "documentation": "@dev Leaves the contract without owner. It will not be possible to call\n`onlyOwner` functions anymore. Can only be called by the current owner.\n     * NOTE: Renouncing ownership will leave the contract without an owner,\nthereby removing any functionality that is only available to the owner.", "id": 352, "implemented": true, "kind": "function", "modifiers": [{"arguments": null, "id": 336, "modifierName": {"argumentTypes": null, "id": 335, "name": "onlyOwner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 322, "src": "10414:9:0", "typeDescriptions": {"typeIdentifier": "t_modifier$__$", "typeString": "modifier ()"}}, "nodeType": "ModifierInvocation", "src": "10414:9:0"}], "name": "renounceOwnership", "nodeType": "FunctionDefinition", "parameters": {"id": 334, "nodeType": "ParameterList", "parameters": [], "src": "10404:2:0"}, "returnParameters": {"id": 337, "nodeType": "ParameterList", "parameters": [], "src": "10424:0:0"}, "scope": 389, "src": "10378:137:0", "stateMutability": "nonpayable", "superFunction": null, "visibility": "public"}, {"body": {"id": 363, "nodeType": "Block", "src": "10726:45:0", "statements": [{"expression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "id": 360, "name": "newOwner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 354, "src": "10755:8:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 359, "name": "_transferOwnership", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 388, "src": "10736:18:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$", "typeString": "function (address)"}}, "id": 361, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10736:28:0", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 362, "nodeType": "ExpressionStatement", "src": "10736:28:0"}]}, "documentation": "@dev Transfers ownership of the contract to a new account (`newOwner`).\nCan only be called by the current owner.", "id": 364, "implemented": true, "kind": "function", "modifiers": [{"arguments": null, "id": 357, "modifierName": {"argumentTypes": null, "id": 356, "name": "onlyOwner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 322, "src": "10716:9:0", "typeDescriptions": {"typeIdentifier": "t_modifier$__$", "typeString": "modifier ()"}}, "nodeType": "ModifierInvocation", "src": "10716:9:0"}], "name": "transferOwnership", "nodeType": "FunctionDefinition", "parameters": {"id": 355, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 354, "name": "newOwner", "nodeType": "VariableDeclaration", "scope": 364, "src": "10691:16:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 353, "name": "address", "nodeType": "ElementaryTypeName", "src": "10691:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "value": null, "visibility": "internal"}], "src": "10690:18:0"}, "returnParameters": {"id": 358, "nodeType": "ParameterList", "parameters": [], "src": "10726:0:0"}, "scope": 389, "src": "10664:107:0", "stateMutability": "nonpayable", "superFunction": null, "visibility": "public"}, {"body": {"id": 387, "nodeType": "Block", "src": "10927:170:0", "statements": [{"expression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 374, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"argumentTypes": null, "id": 370, "name": "newOwner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 366, "src": "10945:8:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "hexValue": "30", "id": 372, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "10965:1:0", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 371, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "10957:7:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": "address"}, "id": 373, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10957:10:0", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "src": "10945:22:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"argumentTypes": null, "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373", "id": 375, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "10969:40:0", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe", "typeString": "literal_string \"Ownable: new owner is the zero address\""}, "value": "Ownable: new owner is the zero address"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe", "typeString": "literal_string \"Ownable: new owner is the zero address\""}], "id": 369, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [1266, 1267], "referencedDeclaration": 1267, "src": "10937:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 376, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10937:73:0", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 377, "nodeType": "ExpressionStatement", "src": "10937:73:0"}, {"eventCall": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "id": 379, "name": "_owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 282, "src": "11046:6:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"argumentTypes": null, "id": 380, "name": "newOwner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 366, "src": "11054:8:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}], "id": 378, "name": "OwnershipTransferred", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 288, "src": "11025:20:0", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$", "typeString": "function (address,address)"}}, "id": 381, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11025:38:0", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 382, "nodeType": "EmitStatement", "src": "11020:43:0"}, {"expression": {"argumentTypes": null, "id": 385, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"argumentTypes": null, "id": 383, "name": "_owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 282, "src": "11073:6:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"argumentTypes": null, "id": 384, "name": "newOwner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 366, "src": "11082:8:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "11073:17:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 386, "nodeType": "ExpressionStatement", "src": "11073:17:0"}]}, "documentation": "@dev Transfers ownership of the contract to a new account (`newOwner`).", "id": 388, "implemented": true, "kind": "function", "modifiers": [], "name": "_transferOwnership", "nodeType": "FunctionDefinition", "parameters": {"id": 367, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 366, "name": "newOwner", "nodeType": "VariableDeclaration", "scope": 388, "src": "10900:16:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 365, "name": "address", "nodeType": "ElementaryTypeName", "src": "10900:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "value": null, "visibility": "internal"}], "src": "10899:18:0"}, "returnParameters": {"id": 368, "nodeType": "ParameterList", "parameters": [], "src": "10927:0:0"}, "scope": 389, "src": "10872:225:0", "stateMutability": "nonpayable", "superFunction": null, "visibility": "internal"}], "scope": 1249, "src": "9151:1948:0"}, {"baseContracts": [], "contractDependencies": [], "contractKind": "interface", "documentation": "@dev Interface of the ERC20 standard as defined in the EIP. Does not include\nthe optional functions; to access them see {ERC20Detailed}.", "fullyImplemented": false, "id": 456, "linearizedBaseContracts": [456], "name": "IERC20", "nodeType": "ContractDefinition", "nodes": [{"body": null, "documentation": "@dev Returns the amount of tokens in existence.", "id": 394, "implemented": false, "kind": "function", "modifiers": [], "name": "totalSupply", "nodeType": "FunctionDefinition", "parameters": {"id": 390, "nodeType": "ParameterList", "parameters": [], "src": "11425:2:0"}, "returnParameters": {"id": 393, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 392, "name": "", "nodeType": "VariableDeclaration", "scope": 394, "src": "11451:7:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 391, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "11451:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "src": "11450:9:0"}, "scope": 456, "src": "11405:55:0", "stateMutability": "view", "superFunction": null, "visibility": "external"}, {"body": null, "documentation": "@dev Returns the amount of tokens owned by `account`.", "id": 401, "implemented": false, "kind": "function", "modifiers": [], "name": "balanceOf", "nodeType": "FunctionDefinition", "parameters": {"id": 397, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 396, "name": "account", "nodeType": "VariableDeclaration", "scope": 401, "src": "11562:15:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 395, "name": "address", "nodeType": "ElementaryTypeName", "src": "11562:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "value": null, "visibility": "internal"}], "src": "11561:17:0"}, "returnParameters": {"id": 400, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 399, "name": "", "nodeType": "VariableDeclaration", "scope": 401, "src": "11602:7:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 398, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "11602:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "src": "11601:9:0"}, "scope": 456, "src": "11543:68:0", "stateMutability": "view", "superFunction": null, "visibility": "external"}, {"body": null, "documentation": "@dev Moves `amount` tokens from the caller's account to `recipient`.\n     * Returns a boolean value indicating whether the operation succeeded.\n     * Emits a {Transfer} event.", "id": 410, "implemented": false, "kind": "function", "modifiers": [], "name": "transfer", "nodeType": "FunctionDefinition", "parameters": {"id": 406, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 403, "name": "recipient", "nodeType": "VariableDeclaration", "scope": 410, "src": "11849:17:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 402, "name": "address", "nodeType": "ElementaryTypeName", "src": "11849:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "value": null, "visibility": "internal"}, {"constant": false, "id": 405, "name": "amount", "nodeType": "VariableDeclaration", "scope": 410, "src": "11868:14:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 404, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "11868:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "src": "11848:35:0"}, "returnParameters": {"id": 409, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 408, "name": "", "nodeType": "VariableDeclaration", "scope": 410, "src": "11902:4:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 407, "name": "bool", "nodeType": "ElementaryTypeName", "src": "11902:4:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "value": null, "visibility": "internal"}], "src": "11901:6:0"}, "scope": 456, "src": "11831:77:0", "stateMutability": "nonpayable", "superFunction": null, "visibility": "external"}, {"body": null, "documentation": "@dev Returns the remaining number of tokens that `spender` will be\nallowed to spend on behalf of `owner` through {transferFrom}. This is\nzero by default.\n     * This value changes when {approve} or {transferFrom} are called.", "id": 419, "implemented": false, "kind": "function", "modifiers": [], "name": "allowance", "nodeType": "FunctionDefinition", "parameters": {"id": 415, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 412, "name": "owner", "nodeType": "VariableDeclaration", "scope": 419, "src": "12202:13:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 411, "name": "address", "nodeType": "ElementaryTypeName", "src": "12202:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "value": null, "visibility": "internal"}, {"constant": false, "id": 414, "name": "spender", "nodeType": "VariableDeclaration", "scope": 419, "src": "12217:15:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 413, "name": "address", "nodeType": "ElementaryTypeName", "src": "12217:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "value": null, "visibility": "internal"}], "src": "12201:32:0"}, "returnParameters": {"id": 418, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 417, "name": "", "nodeType": "VariableDeclaration", "scope": 419, "src": "12257:7:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 416, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "12257:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "src": "12256:9:0"}, "scope": 456, "src": "12183:83:0", "stateMutability": "view", "superFunction": null, "visibility": "external"}, {"body": null, "documentation": "@dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     * Returns a boolean value indicating whether the operation succeeded.\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\nthat someone may use both the old and the new allowance by unfortunate\ntransaction ordering. One possible solution to mitigate this race\ncondition is to first reduce the spender's allowance to 0 and set the\ndesired value afterwards:\nhttps://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     * Emits an {Approval} event.", "id": 428, "implemented": false, "kind": "function", "modifiers": [], "name": "approve", "nodeType": "FunctionDefinition", "parameters": {"id": 424, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 421, "name": "spender", "nodeType": "VariableDeclaration", "scope": 428, "src": "12936:15:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 420, "name": "address", "nodeType": "ElementaryTypeName", "src": "12936:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "value": null, "visibility": "internal"}, {"constant": false, "id": 423, "name": "amount", "nodeType": "VariableDeclaration", "scope": 428, "src": "12953:14:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 422, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "12953:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "src": "12935:33:0"}, "returnParameters": {"id": 427, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 426, "name": "", "nodeType": "VariableDeclaration", "scope": 428, "src": "12987:4:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 425, "name": "bool", "nodeType": "ElementaryTypeName", "src": "12987:4:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "value": null, "visibility": "internal"}], "src": "12986:6:0"}, "scope": 456, "src": "12919:74:0", "stateMutability": "nonpayable", "superFunction": null, "visibility": "external"}, {"body": null, "documentation": "@dev Moves `amount` tokens from `sender` to `recipient` using the\nallowance mechanism. `amount` is then deducted from the caller's\nallowance.\n     * Returns a boolean value indicating whether the operation succeeded.\n     * Emits a {Transfer} event.", "id": 439, "implemented": false, "kind": "function", "modifiers": [], "name": "transferFrom", "nodeType": "FunctionDefinition", "parameters": {"id": 435, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 430, "name": "sender", "nodeType": "VariableDeclaration", "scope": 439, "src": "13322:14:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 429, "name": "address", "nodeType": "ElementaryTypeName", "src": "13322:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "value": null, "visibility": "internal"}, {"constant": false, "id": 432, "name": "recipient", "nodeType": "VariableDeclaration", "scope": 439, "src": "13338:17:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 431, "name": "address", "nodeType": "ElementaryTypeName", "src": "13338:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "value": null, "visibility": "internal"}, {"constant": false, "id": 434, "name": "amount", "nodeType": "VariableDeclaration", "scope": 439, "src": "13357:14:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 433, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "13357:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "src": "13321:51:0"}, "returnParameters": {"id": 438, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 437, "name": "", "nodeType": "VariableDeclaration", "scope": 439, "src": "13391:4:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 436, "name": "bool", "nodeType": "ElementaryTypeName", "src": "13391:4:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "value": null, "visibility": "internal"}], "src": "13390:6:0"}, "scope": 456, "src": "13300:97:0", "stateMutability": "nonpayable", "superFunction": null, "visibility": "external"}, {"anonymous": false, "documentation": "@dev Emitted when `value` tokens are moved from one account (`from`) to\nanother (`to`).\n     * Note that `value` may be zero.", "id": 447, "name": "Transfer", "nodeType": "EventDefinition", "parameters": {"id": 446, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 441, "indexed": true, "name": "from", "nodeType": "VariableDeclaration", "scope": 447, "src": "13581:20:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 440, "name": "address", "nodeType": "ElementaryTypeName", "src": "13581:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "value": null, "visibility": "internal"}, {"constant": false, "id": 443, "indexed": true, "name": "to", "nodeType": "VariableDeclaration", "scope": 447, "src": "13603:18:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 442, "name": "address", "nodeType": "ElementaryTypeName", "src": "13603:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "value": null, "visibility": "internal"}, {"constant": false, "id": 445, "indexed": false, "name": "value", "nodeType": "VariableDeclaration", "scope": 447, "src": "13623:13:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 444, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "13623:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "src": "13580:57:0"}, "src": "13566:72:0"}, {"anonymous": false, "documentation": "@dev Emitted when the allowance of a `spender` for an `owner` is set by\na call to {approve}. `value` is the new allowance.", "id": 455, "name": "Approval", "nodeType": "EventDefinition", "parameters": {"id": 454, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 449, "indexed": true, "name": "owner", "nodeType": "VariableDeclaration", "scope": 455, "src": "13812:21:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 448, "name": "address", "nodeType": "ElementaryTypeName", "src": "13812:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "value": null, "visibility": "internal"}, {"constant": false, "id": 451, "indexed": true, "name": "spender", "nodeType": "VariableDeclaration", "scope": 455, "src": "13835:23:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 450, "name": "address", "nodeType": "ElementaryTypeName", "src": "13835:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "value": null, "visibility": "internal"}, {"constant": false, "id": 453, "indexed": false, "name": "value", "nodeType": "VariableDeclaration", "scope": 455, "src": "13860:13:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 452, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "13860:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "src": "13811:63:0"}, "src": "13797:78:0"}], "scope": 1249, "src": "11311:2566:0"}, {"baseContracts": [], "contractDependencies": [], "contractKind": "library", "documentation": "@dev Collection of functions related to the address type", "fullyImplemented": true, "id": 529, "linearizedBaseContracts": [529], "name": "Address2", "nodeType": "ContractDefinition", "nodes": [{"body": {"id": 480, "nodeType": "Block", "src": "14530:731:0", "statements": [{"assignments": [464], "declarations": [{"constant": false, "id": 464, "name": "codehash", "nodeType": "VariableDeclaration", "scope": 480, "src": "14969:16:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 463, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "14969:7:0", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "value": null, "visibility": "internal"}], "id": 465, "initialValue": null, "nodeType": "VariableDeclarationStatement", "src": "14969:16:0"}, {"assignments": [467], "declarations": [{"constant": false, "id": 467, "name": "accountHash", "nodeType": "VariableDeclaration", "scope": 480, "src": "14995:19:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 466, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "14995:7:0", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "value": null, "visibility": "internal"}], "id": 469, "initialValue": {"argumentTypes": null, "hexValue": "307863356432343630313836663732333363393237653764623264636337303363306535303062363533636138323237336237626661643830343564383561343730", "id": 468, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "15017:66:0", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_rational_89477152217924674838424037953991966239322087453347756267410168184682657981552_by_1", "typeString": "int_const 8947...(69 digits omitted)...1552"}, "value": "0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470"}, "nodeType": "VariableDeclarationStatement", "src": "14995:88:0"}, {"externalReferences": [{"account": {"declaration": 458, "isOffset": false, "isSlot": false, "src": "15184:7:0", "valueSize": 1}}, {"codehash": {"declaration": 464, "isOffset": false, "isSlot": false, "src": "15160:8:0", "valueSize": 1}}], "id": 470, "nodeType": "InlineAssembly", "operations": "{\n    codehash := extcodehash(account)\n}", "src": "15149:45:0"}, {"expression": {"argumentTypes": null, "components": [{"argumentTypes": null, "commonType": {"typeIdentifier": "t_bool", "typeString": "bool"}, "id": 477, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"argumentTypes": null, "commonType": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "id": 473, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"argumentTypes": null, "id": 471, "name": "codehash", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 464, "src": "15211:8:0", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"argumentTypes": null, "hexValue": "307830", "id": 472, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "15223:3:0", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0x0"}, "src": "15211:15:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "BinaryOperation", "operator": "&&", "rightExpression": {"argumentTypes": null, "commonType": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "id": 476, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"argumentTypes": null, "id": 474, "name": "codehash", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 464, "src": "15230:8:0", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"argumentTypes": null, "id": 475, "name": "accountHash", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 467, "src": "15242:11:0", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "src": "15230:23:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "15211:42:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "id": 478, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "15210:44:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "functionReturnParameters": 462, "id": 479, "nodeType": "Return", "src": "15203:51:0"}]}, "documentation": "@dev Returns true if `account` is a contract.\n     * This test is non-exhaustive, and there may be false-negatives: during the\nexecution of a contract's constructor, its address will be reported as\nnot containing a contract.\n     * IMPORTANT: It is unsafe to assume that an address for which this\nfunction returns false is an externally-owned account (EOA) and not a\ncontract.", "id": 481, "implemented": true, "kind": "function", "modifiers": [], "name": "isContract", "nodeType": "FunctionDefinition", "parameters": {"id": 459, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 458, "name": "account", "nodeType": "VariableDeclaration", "scope": 481, "src": "14484:15:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 457, "name": "address", "nodeType": "ElementaryTypeName", "src": "14484:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "value": null, "visibility": "internal"}], "src": "14483:17:0"}, "returnParameters": {"id": 462, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 461, "name": "", "nodeType": "VariableDeclaration", "scope": 481, "src": "14524:4:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 460, "name": "bool", "nodeType": "ElementaryTypeName", "src": "14524:4:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "value": null, "visibility": "internal"}], "src": "14523:6:0"}, "scope": 529, "src": "14464:797:0", "stateMutability": "view", "superFunction": null, "visibility": "internal"}, {"body": {"id": 494, "nodeType": "Block", "src": "15546:49:0", "statements": [{"expression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "arguments": [{"argumentTypes": null, "id": 490, "name": "account", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 483, "src": "15579:7:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 489, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "15571:7:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint160_$", "typeString": "type(uint160)"}, "typeName": "uint160"}, "id": 491, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "15571:16:0", "typeDescriptions": {"typeIdentifier": "t_uint160", "typeString": "uint160"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint160", "typeString": "uint160"}], "id": 488, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "15563:7:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": "address"}, "id": 492, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "15563:25:0", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "functionReturnParameters": 487, "id": 493, "nodeType": "Return", "src": "15556:32:0"}]}, "documentation": "@dev Converts an `address` into `address payable`. Note that this is\nsimply a type cast: the actual underlying value is not changed.\n     * _Available since v2.4.0._", "id": 495, "implemented": true, "kind": "function", "modifiers": [], "name": "toPayable", "nodeType": "FunctionDefinition", "parameters": {"id": 484, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 483, "name": "account", "nodeType": "VariableDeclaration", "scope": 495, "src": "15489:15:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 482, "name": "address", "nodeType": "ElementaryTypeName", "src": "15489:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "value": null, "visibility": "internal"}], "src": "15488:17:0"}, "returnParameters": {"id": 487, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 486, "name": "", "nodeType": "VariableDeclaration", "scope": 495, "src": "15529:15:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}, "typeName": {"id": 485, "name": "address", "nodeType": "ElementaryTypeName", "src": "15529:15:0", "stateMutability": "payable", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "value": null, "visibility": "internal"}], "src": "15528:17:0"}, "scope": 529, "src": "15470:125:0", "stateMutability": "pure", "superFunction": null, "visibility": "internal"}, {"body": {"id": 527, "nodeType": "Block", "src": "16623:294:0", "statements": [{"expression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 508, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"argumentTypes": null, "expression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "id": 504, "name": "this", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1287, "src": "16649:4:0", "typeDescriptions": {"typeIdentifier": "t_contract$_Address2_$529", "typeString": "library Address2"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_Address2_$529", "typeString": "library Address2"}], "id": 503, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "16641:7:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": "address"}, "id": 505, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "16641:13:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 506, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "balance", "nodeType": "MemberAccess", "referencedDeclaration": null, "src": "16641:21:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">=", "rightExpression": {"argumentTypes": null, "id": 507, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 499, "src": "16666:6:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "16641:31:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"argumentTypes": null, "hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365", "id": 509, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "16674:31:0", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9", "typeString": "literal_string \"Address: insufficient balance\""}, "value": "Address: insufficient balance"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9", "typeString": "literal_string \"Address: insufficient balance\""}], "id": 502, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [1266, 1267], "referencedDeclaration": 1267, "src": "16633:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 510, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "16633:73:0", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 511, "nodeType": "ExpressionStatement", "src": "16633:73:0"}, {"assignments": [513, null], "declarations": [{"constant": false, "id": 513, "name": "success", "nodeType": "VariableDeclaration", "scope": 527, "src": "16772:12:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 512, "name": "bool", "nodeType": "ElementaryTypeName", "src": "16772:4:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "value": null, "visibility": "internal"}, null], "id": 521, "initialValue": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "hexValue": "", "id": 519, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "16819:2:0", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470", "typeString": "literal_string \"\""}, "value": ""}], "expression": {"argumentTypes": [{"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470", "typeString": "literal_string \"\""}], "arguments": [{"argumentTypes": null, "id": 517, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 499, "src": "16811:6:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"argumentTypes": null, "expression": {"argumentTypes": null, "id": 514, "name": "recipient", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 497, "src": "16790:9:0", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "id": 515, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "call", "nodeType": "MemberAccess", "referencedDeclaration": null, "src": "16790:14:0", "typeDescriptions": {"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$", "typeString": "function (bytes memory) payable returns (bool,bytes memory)"}}, "id": 516, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "value", "nodeType": "MemberAccess", "referencedDeclaration": null, "src": "16790:20:0", "typeDescriptions": {"typeIdentifier": "t_function_setvalue_pure$_t_uint256_$returns$_t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value_$", "typeString": "function (uint256) pure returns (function (bytes memory) payable returns (bool,bytes memory))"}}, "id": 518, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "16790:28:0", "typeDescriptions": {"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value", "typeString": "function (bytes memory) payable returns (bool,bytes memory)"}}, "id": 520, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "16790:32:0", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$", "typeString": "tuple(bool,bytes memory)"}}, "nodeType": "VariableDeclarationStatement", "src": "16771:51:0"}, {"expression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "id": 523, "name": "success", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 513, "src": "16840:7:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"argumentTypes": null, "hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564", "id": 524, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "16849:60:0", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae", "typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""}, "value": "Address: unable to send value, recipient may have reverted"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae", "typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""}], "id": 522, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [1266, 1267], "referencedDeclaration": 1267, "src": "16832:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 525, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "16832:78:0", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 526, "nodeType": "ExpressionStatement", "src": "16832:78:0"}]}, "documentation": "@dev Replacement for Solidity's `transfer`: sends `amount` wei to\n`recipient`, forwarding all available gas and reverting on errors.\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\nof certain opcodes, possibly making contracts go over the 2300 gas limit\nimposed by `transfer`, making them unable to receive funds via\n`transfer`. {sendValue} removes this limitation.\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     * IMPORTANT: because control is transferred to `recipient`, care must be\ntaken to not create reentrancy vulnerabilities. Consider using\n{ReentrancyGuard} or the\nhttps://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     * _Available since v2.4.0._", "id": 528, "implemented": true, "kind": "function", "modifiers": [], "name": "sendValue", "nodeType": "FunctionDefinition", "parameters": {"id": 500, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 497, "name": "recipient", "nodeType": "VariableDeclaration", "scope": 528, "src": "16571:25:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}, "typeName": {"id": 496, "name": "address", "nodeType": "ElementaryTypeName", "src": "16571:15:0", "stateMutability": "payable", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "value": null, "visibility": "internal"}, {"constant": false, "id": 499, "name": "amount", "nodeType": "VariableDeclaration", "scope": 528, "src": "16598:14:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 498, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "16598:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "src": "16570:43:0"}, "returnParameters": {"id": 501, "nodeType": "ParameterList", "parameters": [], "src": "16623:0:0"}, "scope": 529, "src": "16552:365:0", "stateMutability": "nonpayable", "superFunction": null, "visibility": "internal"}], "scope": 1249, "src": "13999:2920:0"}, {"baseContracts": [], "contractDependencies": [], "contractKind": "library", "documentation": "@title SafeERC20\n@dev Wrappers around ERC20 operations that throw on failure (when the token\ncontract returns false). Tokens that return no value (and instead revert or\nthrow on failure) are also supported, non-reverting calls are assumed to be\nsuccessful.\nTo use this library you can add a `using SafeERC20 for ERC20;` statement to your contract,\nwhich allows you to call the safe operations as `token.safeTransfer(...)`, etc.", "fullyImplemented": true, "id": 744, "linearizedBaseContracts": [744], "name": "SafeERC20", "nodeType": "ContractDefinition", "nodes": [{"id": 532, "libraryName": {"contractScope": null, "id": 530, "name": "SafeMath", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 253, "src": "17473:8:0", "typeDescriptions": {"typeIdentifier": "t_contract$_SafeMath_$253", "typeString": "library SafeMath"}}, "nodeType": "UsingForDirective", "src": "17467:27:0", "typeName": {"id": 531, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "17486:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}}, {"id": 535, "libraryName": {"contractScope": null, "id": 533, "name": "Address2", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 529, "src": "17505:8:0", "typeDescriptions": {"typeIdentifier": "t_contract$_Address2_$529", "typeString": "library Address2"}}, "nodeType": "UsingForDirective", "src": "17499:27:0", "typeName": {"id": 534, "name": "address", "nodeType": "ElementaryTypeName", "src": "17518:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}}, {"body": {"id": 556, "nodeType": "Block", "src": "17604:102:0", "statements": [{"expression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "id": 545, "name": "token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 537, "src": "17633:5:0", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$456", "typeString": "contract IERC20"}}, {"argumentTypes": null, "arguments": [{"argumentTypes": null, "expression": {"argumentTypes": null, "expression": {"argumentTypes": null, "id": 548, "name": "token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 537, "src": "17663:5:0", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$456", "typeString": "contract IERC20"}}, "id": 549, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "transfer", "nodeType": "MemberAccess", "referencedDeclaration": 410, "src": "17663:14:0", "typeDescriptions": {"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$", "typeString": "function (address,uint256) external returns (bool)"}}, "id": 550, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "selector", "nodeType": "MemberAccess", "referencedDeclaration": null, "src": "17663:23:0", "typeDescriptions": {"typeIdentifier": "t_bytes4", "typeString": "bytes4"}}, {"argumentTypes": null, "id": 551, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 539, "src": "17688:2:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"argumentTypes": null, "id": 552, "name": "value", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 541, "src": "17692:5:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes4", "typeString": "bytes4"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"argumentTypes": null, "id": 546, "name": "abi", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1250, "src": "17640:3:0", "typeDescriptions": {"typeIdentifier": "t_magic_abi", "typeString": "abi"}}, "id": 547, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "encodeWithSelector", "nodeType": "MemberAccess", "referencedDeclaration": null, "src": "17640:22:0", "typeDescriptions": {"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$", "typeString": "function (bytes4) pure returns (bytes memory)"}}, "id": 553, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "17640:58:0", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_IERC20_$456", "typeString": "contract IERC20"}, {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "id": 544, "name": "callOptionalReturn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 743, "src": "17614:18:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$456_$_t_bytes_memory_ptr_$returns$__$", "typeString": "function (contract IERC20,bytes memory)"}}, "id": 554, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "17614:85:0", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 555, "nodeType": "ExpressionStatement", "src": "17614:85:0"}]}, "documentation": null, "id": 557, "implemented": true, "kind": "function", "modifiers": [], "name": "safeTransfer", "nodeType": "FunctionDefinition", "parameters": {"id": 542, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 537, "name": "token", "nodeType": "VariableDeclaration", "scope": 557, "src": "17554:12:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$456", "typeString": "contract IERC20"}, "typeName": {"contractScope": null, "id": 536, "name": "IERC20", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 456, "src": "17554:6:0", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$456", "typeString": "contract IERC20"}}, "value": null, "visibility": "internal"}, {"constant": false, "id": 539, "name": "to", "nodeType": "VariableDeclaration", "scope": 557, "src": "17568:10:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 538, "name": "address", "nodeType": "ElementaryTypeName", "src": "17568:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "value": null, "visibility": "internal"}, {"constant": false, "id": 541, "name": "value", "nodeType": "VariableDeclaration", "scope": 557, "src": "17580:13:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 540, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "17580:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "src": "17553:41:0"}, "returnParameters": {"id": 543, "nodeType": "ParameterList", "parameters": [], "src": "17604:0:0"}, "scope": 744, "src": "17532:174:0", "stateMutability": "nonpayable", "superFunction": null, "visibility": "internal"}, {"body": {"id": 581, "nodeType": "Block", "src": "17802:112:0", "statements": [{"expression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "id": 569, "name": "token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 559, "src": "17831:5:0", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$456", "typeString": "contract IERC20"}}, {"argumentTypes": null, "arguments": [{"argumentTypes": null, "expression": {"argumentTypes": null, "expression": {"argumentTypes": null, "id": 572, "name": "token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 559, "src": "17861:5:0", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$456", "typeString": "contract IERC20"}}, "id": 573, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "transferFrom", "nodeType": "MemberAccess", "referencedDeclaration": 439, "src": "17861:18:0", "typeDescriptions": {"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$", "typeString": "function (address,address,uint256) external returns (bool)"}}, "id": 574, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "selector", "nodeType": "MemberAccess", "referencedDeclaration": null, "src": "17861:27:0", "typeDescriptions": {"typeIdentifier": "t_bytes4", "typeString": "bytes4"}}, {"argumentTypes": null, "id": 575, "name": "from", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 561, "src": "17890:4:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"argumentTypes": null, "id": 576, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 563, "src": "17896:2:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"argumentTypes": null, "id": 577, "name": "value", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 565, "src": "17900:5:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes4", "typeString": "bytes4"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"argumentTypes": null, "id": 570, "name": "abi", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1250, "src": "17838:3:0", "typeDescriptions": {"typeIdentifier": "t_magic_abi", "typeString": "abi"}}, "id": 571, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "encodeWithSelector", "nodeType": "MemberAccess", "referencedDeclaration": null, "src": "17838:22:0", "typeDescriptions": {"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$", "typeString": "function (bytes4) pure returns (bytes memory)"}}, "id": 578, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "17838:68:0", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_IERC20_$456", "typeString": "contract IERC20"}, {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "id": 568, "name": "callOptionalReturn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 743, "src": "17812:18:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$456_$_t_bytes_memory_ptr_$returns$__$", "typeString": "function (contract IERC20,bytes memory)"}}, "id": 579, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "17812:95:0", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 580, "nodeType": "ExpressionStatement", "src": "17812:95:0"}]}, "documentation": null, "id": 582, "implemented": true, "kind": "function", "modifiers": [], "name": "safeTransferFrom", "nodeType": "FunctionDefinition", "parameters": {"id": 566, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 559, "name": "token", "nodeType": "VariableDeclaration", "scope": 582, "src": "17738:12:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$456", "typeString": "contract IERC20"}, "typeName": {"contractScope": null, "id": 558, "name": "IERC20", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 456, "src": "17738:6:0", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$456", "typeString": "contract IERC20"}}, "value": null, "visibility": "internal"}, {"constant": false, "id": 561, "name": "from", "nodeType": "VariableDeclaration", "scope": 582, "src": "17752:12:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 560, "name": "address", "nodeType": "ElementaryTypeName", "src": "17752:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "value": null, "visibility": "internal"}, {"constant": false, "id": 563, "name": "to", "nodeType": "VariableDeclaration", "scope": 582, "src": "17766:10:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 562, "name": "address", "nodeType": "ElementaryTypeName", "src": "17766:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "value": null, "visibility": "internal"}, {"constant": false, "id": 565, "name": "value", "nodeType": "VariableDeclaration", "scope": 582, "src": "17778:13:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 564, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "17778:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "src": "17737:55:0"}, "returnParameters": {"id": 567, "nodeType": "ParameterList", "parameters": [], "src": "17802:0:0"}, "scope": 744, "src": "17712:202:0", "stateMutability": "nonpayable", "superFunction": null, "visibility": "internal"}, {"body": {"id": 622, "nodeType": "Block", "src": "17996:536:0", "statements": [{"expression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "commonType": {"typeIdentifier": "t_bool", "typeString": "bool"}, "id": 606, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"argumentTypes": null, "components": [{"argumentTypes": null, "commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 594, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"argumentTypes": null, "id": 592, "name": "value", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 588, "src": "18285:5:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"argumentTypes": null, "hexValue": "30", "id": 593, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "18294:1:0", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "18285:10:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "id": 595, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "18284:12:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "BinaryOperation", "operator": "||", "rightExpression": {"argumentTypes": null, "components": [{"argumentTypes": null, "commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 604, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "arguments": [{"argumentTypes": null, "id": 599, "name": "this", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1289, "src": "18325:4:0", "typeDescriptions": {"typeIdentifier": "t_contract$_SafeERC20_$744", "typeString": "library SafeERC20"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_SafeERC20_$744", "typeString": "library SafeERC20"}], "id": 598, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "18317:7:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": "address"}, "id": 600, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "18317:13:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"argumentTypes": null, "id": 601, "name": "spender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 586, "src": "18332:7:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}], "expression": {"argumentTypes": null, "id": 596, "name": "token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 584, "src": "18301:5:0", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$456", "typeString": "contract IERC20"}}, "id": 597, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "allowance", "nodeType": "MemberAccess", "referencedDeclaration": 419, "src": "18301:15:0", "typeDescriptions": {"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$", "typeString": "function (address,address) view external returns (uint256)"}}, "id": 602, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "18301:39:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"argumentTypes": null, "hexValue": "30", "id": 603, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "18344:1:0", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "18301:44:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "id": 605, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "18300:46:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "18284:62:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"argumentTypes": null, "hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365", "id": 607, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "18360:56:0", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25", "typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""}, "value": "SafeERC20: approve from non-zero to non-zero allowance"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25", "typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""}], "id": 591, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [1266, 1267], "referencedDeclaration": 1267, "src": "18276:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 608, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "18276:150:0", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 609, "nodeType": "ExpressionStatement", "src": "18276:150:0"}, {"expression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "id": 611, "name": "token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 584, "src": "18455:5:0", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$456", "typeString": "contract IERC20"}}, {"argumentTypes": null, "arguments": [{"argumentTypes": null, "expression": {"argumentTypes": null, "expression": {"argumentTypes": null, "id": 614, "name": "token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 584, "src": "18485:5:0", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$456", "typeString": "contract IERC20"}}, "id": 615, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "approve", "nodeType": "MemberAccess", "referencedDeclaration": 428, "src": "18485:13:0", "typeDescriptions": {"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$", "typeString": "function (address,uint256) external returns (bool)"}}, "id": 616, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "selector", "nodeType": "MemberAccess", "referencedDeclaration": null, "src": "18485:22:0", "typeDescriptions": {"typeIdentifier": "t_bytes4", "typeString": "bytes4"}}, {"argumentTypes": null, "id": 617, "name": "spender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 586, "src": "18509:7:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"argumentTypes": null, "id": 618, "name": "value", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 588, "src": "18518:5:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes4", "typeString": "bytes4"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"argumentTypes": null, "id": 612, "name": "abi", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1250, "src": "18462:3:0", "typeDescriptions": {"typeIdentifier": "t_magic_abi", "typeString": "abi"}}, "id": 613, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "encodeWithSelector", "nodeType": "MemberAccess", "referencedDeclaration": null, "src": "18462:22:0", "typeDescriptions": {"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$", "typeString": "function (bytes4) pure returns (bytes memory)"}}, "id": 619, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "18462:62:0", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_IERC20_$456", "typeString": "contract IERC20"}, {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "id": 610, "name": "callOptionalReturn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 743, "src": "18436:18:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$456_$_t_bytes_memory_ptr_$returns$__$", "typeString": "function (contract IERC20,bytes memory)"}}, "id": 620, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "18436:89:0", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 621, "nodeType": "ExpressionStatement", "src": "18436:89:0"}]}, "documentation": null, "id": 623, "implemented": true, "kind": "function", "modifiers": [], "name": "safeApprove", "nodeType": "FunctionDefinition", "parameters": {"id": 589, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 584, "name": "token", "nodeType": "VariableDeclaration", "scope": 623, "src": "17941:12:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$456", "typeString": "contract IERC20"}, "typeName": {"contractScope": null, "id": 583, "name": "IERC20", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 456, "src": "17941:6:0", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$456", "typeString": "contract IERC20"}}, "value": null, "visibility": "internal"}, {"constant": false, "id": 586, "name": "spender", "nodeType": "VariableDeclaration", "scope": 623, "src": "17955:15:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 585, "name": "address", "nodeType": "ElementaryTypeName", "src": "17955:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "value": null, "visibility": "internal"}, {"constant": false, "id": 588, "name": "value", "nodeType": "VariableDeclaration", "scope": 623, "src": "17972:13:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 587, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "17972:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "src": "17940:46:0"}, "returnParameters": {"id": 590, "nodeType": "ParameterList", "parameters": [], "src": "17996:0:0"}, "scope": 744, "src": "17920:612:0", "stateMutability": "nonpayable", "superFunction": null, "visibility": "internal"}, {"body": {"id": 657, "nodeType": "Block", "src": "18624:196:0", "statements": [{"assignments": [633], "declarations": [{"constant": false, "id": 633, "name": "newAllowance", "nodeType": "VariableDeclaration", "scope": 657, "src": "18634:20:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 632, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "18634:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "id": 644, "initialValue": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "id": 642, "name": "value", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 629, "src": "18701:5:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "arguments": [{"argumentTypes": null, "id": 637, "name": "this", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1289, "src": "18681:4:0", "typeDescriptions": {"typeIdentifier": "t_contract$_SafeERC20_$744", "typeString": "library SafeERC20"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_SafeERC20_$744", "typeString": "library SafeERC20"}], "id": 636, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "18673:7:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": "address"}, "id": 638, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "18673:13:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"argumentTypes": null, "id": 639, "name": "spender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 627, "src": "18688:7:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}], "expression": {"argumentTypes": null, "id": 634, "name": "token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 625, "src": "18657:5:0", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$456", "typeString": "contract IERC20"}}, "id": 635, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "allowance", "nodeType": "MemberAccess", "referencedDeclaration": 419, "src": "18657:15:0", "typeDescriptions": {"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$", "typeString": "function (address,address) view external returns (uint256)"}}, "id": 640, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "18657:39:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 641, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "add", "nodeType": "MemberAccess", "referencedDeclaration": 93, "src": "18657:43:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 643, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "18657:50:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "18634:73:0"}, {"expression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "id": 646, "name": "token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 625, "src": "18736:5:0", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$456", "typeString": "contract IERC20"}}, {"argumentTypes": null, "arguments": [{"argumentTypes": null, "expression": {"argumentTypes": null, "expression": {"argumentTypes": null, "id": 649, "name": "token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 625, "src": "18766:5:0", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$456", "typeString": "contract IERC20"}}, "id": 650, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "approve", "nodeType": "MemberAccess", "referencedDeclaration": 428, "src": "18766:13:0", "typeDescriptions": {"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$", "typeString": "function (address,uint256) external returns (bool)"}}, "id": 651, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "selector", "nodeType": "MemberAccess", "referencedDeclaration": null, "src": "18766:22:0", "typeDescriptions": {"typeIdentifier": "t_bytes4", "typeString": "bytes4"}}, {"argumentTypes": null, "id": 652, "name": "spender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 627, "src": "18790:7:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"argumentTypes": null, "id": 653, "name": "newAllowance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 633, "src": "18799:12:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes4", "typeString": "bytes4"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"argumentTypes": null, "id": 647, "name": "abi", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1250, "src": "18743:3:0", "typeDescriptions": {"typeIdentifier": "t_magic_abi", "typeString": "abi"}}, "id": 648, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "encodeWithSelector", "nodeType": "MemberAccess", "referencedDeclaration": null, "src": "18743:22:0", "typeDescriptions": {"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$", "typeString": "function (bytes4) pure returns (bytes memory)"}}, "id": 654, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "18743:69:0", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_IERC20_$456", "typeString": "contract IERC20"}, {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "id": 645, "name": "callOptionalReturn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 743, "src": "18717:18:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$456_$_t_bytes_memory_ptr_$returns$__$", "typeString": "function (contract IERC20,bytes memory)"}}, "id": 655, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "18717:96:0", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 656, "nodeType": "ExpressionStatement", "src": "18717:96:0"}]}, "documentation": null, "id": 658, "implemented": true, "kind": "function", "modifiers": [], "name": "safeIncreaseAllowance", "nodeType": "FunctionDefinition", "parameters": {"id": 630, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 625, "name": "token", "nodeType": "VariableDeclaration", "scope": 658, "src": "18569:12:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$456", "typeString": "contract IERC20"}, "typeName": {"contractScope": null, "id": 624, "name": "IERC20", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 456, "src": "18569:6:0", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$456", "typeString": "contract IERC20"}}, "value": null, "visibility": "internal"}, {"constant": false, "id": 627, "name": "spender", "nodeType": "VariableDeclaration", "scope": 658, "src": "18583:15:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 626, "name": "address", "nodeType": "ElementaryTypeName", "src": "18583:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "value": null, "visibility": "internal"}, {"constant": false, "id": 629, "name": "value", "nodeType": "VariableDeclaration", "scope": 658, "src": "18600:13:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 628, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "18600:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "src": "18568:46:0"}, "returnParameters": {"id": 631, "nodeType": "ParameterList", "parameters": [], "src": "18624:0:0"}, "scope": 744, "src": "18538:282:0", "stateMutability": "nonpayable", "superFunction": null, "visibility": "internal"}, {"body": {"id": 693, "nodeType": "Block", "src": "18912:241:0", "statements": [{"assignments": [668], "declarations": [{"constant": false, "id": 668, "name": "newAllowance", "nodeType": "VariableDeclaration", "scope": 693, "src": "18922:20:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 667, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "18922:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "id": 680, "initialValue": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "id": 677, "name": "value", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 664, "src": "18989:5:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"argumentTypes": null, "hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f", "id": 678, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "18996:43:0", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a", "typeString": "literal_string \"SafeERC20: decreased allowance below zero\""}, "value": "SafeERC20: decreased allowance below zero"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a", "typeString": "literal_string \"SafeERC20: decreased allowance below zero\""}], "expression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "arguments": [{"argumentTypes": null, "id": 672, "name": "this", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1289, "src": "18969:4:0", "typeDescriptions": {"typeIdentifier": "t_contract$_SafeERC20_$744", "typeString": "library SafeERC20"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_SafeERC20_$744", "typeString": "library SafeERC20"}], "id": 671, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "18961:7:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": "address"}, "id": 673, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "18961:13:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"argumentTypes": null, "id": 674, "name": "spender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 662, "src": "18976:7:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}], "expression": {"argumentTypes": null, "id": 669, "name": "token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 660, "src": "18945:5:0", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$456", "typeString": "contract IERC20"}}, "id": 670, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "allowance", "nodeType": "MemberAccess", "referencedDeclaration": 419, "src": "18945:15:0", "typeDescriptions": {"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$", "typeString": "function (address,address) view external returns (uint256)"}}, "id": 675, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "18945:39:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 676, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sub", "nodeType": "MemberAccess", "referencedDeclaration": 136, "src": "18945:43:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256,string memory) pure returns (uint256)"}}, "id": 679, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "18945:95:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "18922:118:0"}, {"expression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "id": 682, "name": "token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 660, "src": "19069:5:0", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$456", "typeString": "contract IERC20"}}, {"argumentTypes": null, "arguments": [{"argumentTypes": null, "expression": {"argumentTypes": null, "expression": {"argumentTypes": null, "id": 685, "name": "token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 660, "src": "19099:5:0", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$456", "typeString": "contract IERC20"}}, "id": 686, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "approve", "nodeType": "MemberAccess", "referencedDeclaration": 428, "src": "19099:13:0", "typeDescriptions": {"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$", "typeString": "function (address,uint256) external returns (bool)"}}, "id": 687, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "selector", "nodeType": "MemberAccess", "referencedDeclaration": null, "src": "19099:22:0", "typeDescriptions": {"typeIdentifier": "t_bytes4", "typeString": "bytes4"}}, {"argumentTypes": null, "id": 688, "name": "spender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 662, "src": "19123:7:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"argumentTypes": null, "id": 689, "name": "newAllowance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 668, "src": "19132:12:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes4", "typeString": "bytes4"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"argumentTypes": null, "id": 683, "name": "abi", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1250, "src": "19076:3:0", "typeDescriptions": {"typeIdentifier": "t_magic_abi", "typeString": "abi"}}, "id": 684, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "encodeWithSelector", "nodeType": "MemberAccess", "referencedDeclaration": null, "src": "19076:22:0", "typeDescriptions": {"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$", "typeString": "function (bytes4) pure returns (bytes memory)"}}, "id": 690, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "19076:69:0", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_IERC20_$456", "typeString": "contract IERC20"}, {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "id": 681, "name": "callOptionalReturn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 743, "src": "19050:18:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$456_$_t_bytes_memory_ptr_$returns$__$", "typeString": "function (contract IERC20,bytes memory)"}}, "id": 691, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "19050:96:0", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 692, "nodeType": "ExpressionStatement", "src": "19050:96:0"}]}, "documentation": null, "id": 694, "implemented": true, "kind": "function", "modifiers": [], "name": "safeDecreaseAllowance", "nodeType": "FunctionDefinition", "parameters": {"id": 665, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 660, "name": "token", "nodeType": "VariableDeclaration", "scope": 694, "src": "18857:12:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$456", "typeString": "contract IERC20"}, "typeName": {"contractScope": null, "id": 659, "name": "IERC20", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 456, "src": "18857:6:0", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$456", "typeString": "contract IERC20"}}, "value": null, "visibility": "internal"}, {"constant": false, "id": 662, "name": "spender", "nodeType": "VariableDeclaration", "scope": 694, "src": "18871:15:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 661, "name": "address", "nodeType": "ElementaryTypeName", "src": "18871:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "value": null, "visibility": "internal"}, {"constant": false, "id": 664, "name": "value", "nodeType": "VariableDeclaration", "scope": 694, "src": "18888:13:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 663, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "18888:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "src": "18856:46:0"}, "returnParameters": {"id": 666, "nodeType": "ParameterList", "parameters": [], "src": "18912:0:0"}, "scope": 744, "src": "18826:327:0", "stateMutability": "nonpayable", "superFunction": null, "visibility": "internal"}, {"body": {"id": 742, "nodeType": "Block", "src": "19605:1026:0", "statements": [{"expression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "arguments": [], "expression": {"argumentTypes": [], "expression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "id": 703, "name": "token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 696, "src": "20139:5:0", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$456", "typeString": "contract IERC20"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_IERC20_$456", "typeString": "contract IERC20"}], "id": 702, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "20131:7:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": "address"}, "id": 704, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "20131:14:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 705, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "isContract", "nodeType": "MemberAccess", "referencedDeclaration": 481, "src": "20131:25:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$", "typeString": "function (address) view returns (bool)"}}, "id": 706, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "20131:27:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"argumentTypes": null, "hexValue": "5361666545524332303a2063616c6c20746f206e6f6e2d636f6e7472616374", "id": 707, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "20160:33:0", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_stringliteral_f6ce7bfd656f35145dec774d6f7e67f4cba158373d2dd7a0f8273e232f86148d", "typeString": "literal_string \"SafeERC20: call to non-contract\""}, "value": "SafeERC20: call to non-contract"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_f6ce7bfd656f35145dec774d6f7e67f4cba158373d2dd7a0f8273e232f86148d", "typeString": "literal_string \"SafeERC20: call to non-contract\""}], "id": 701, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [1266, 1267], "referencedDeclaration": 1267, "src": "20123:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 708, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "20123:71:0", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 709, "nodeType": "ExpressionStatement", "src": "20123:71:0"}, {"assignments": [711, 713], "declarations": [{"constant": false, "id": 711, "name": "success", "nodeType": "VariableDeclaration", "scope": 742, "src": "20265:12:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 710, "name": "bool", "nodeType": "ElementaryTypeName", "src": "20265:4:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "value": null, "visibility": "internal"}, {"constant": false, "id": 713, "name": "returndata", "nodeType": "VariableDeclaration", "scope": 742, "src": "20279:23:0", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 712, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "20279:5:0", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "value": null, "visibility": "internal"}], "id": 720, "initialValue": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "id": 718, "name": "data", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 698, "src": "20326:4:0", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "expression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "id": 715, "name": "token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 696, "src": "20314:5:0", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$456", "typeString": "contract IERC20"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_IERC20_$456", "typeString": "contract IERC20"}], "id": 714, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "20306:7:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": "address"}, "id": 716, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "20306:14:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 717, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "call", "nodeType": "MemberAccess", "referencedDeclaration": null, "src": "20306:19:0", "typeDescriptions": {"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$", "typeString": "function (bytes memory) payable returns (bool,bytes memory)"}}, "id": 719, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "20306:25:0", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$", "typeString": "tuple(bool,bytes memory)"}}, "nodeType": "VariableDeclarationStatement", "src": "20264:67:0"}, {"expression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "id": 722, "name": "success", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 711, "src": "20349:7:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"argumentTypes": null, "hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564", "id": 723, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "20358:34:0", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b", "typeString": "literal_string \"SafeERC20: low-level call failed\""}, "value": "SafeERC20: low-level call failed"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b", "typeString": "literal_string \"SafeERC20: low-level call failed\""}], "id": 721, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [1266, 1267], "referencedDeclaration": 1267, "src": "20341:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 724, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "20341:52:0", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 725, "nodeType": "ExpressionStatement", "src": "20341:52:0"}, {"condition": {"argumentTypes": null, "commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 729, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"argumentTypes": null, "expression": {"argumentTypes": null, "id": 726, "name": "returndata", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 713, "src": "20408:10:0", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "id": 727, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "referencedDeclaration": null, "src": "20408:17:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"argumentTypes": null, "hexValue": "30", "id": 728, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "20428:1:0", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "20408:21:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": null, "id": 741, "nodeType": "IfStatement", "src": "20404:221:0", "trueBody": {"id": 740, "nodeType": "Block", "src": "20431:194:0", "statements": [{"expression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "arguments": [{"argumentTypes": null, "id": 733, "name": "returndata", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 713, "src": "20548:10:0", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, {"argumentTypes": null, "components": [{"argumentTypes": null, "id": 734, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "20561:4:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_bool_$", "typeString": "type(bool)"}, "typeName": "bool"}], "id": 735, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "TupleExpression", "src": "20560:6:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_bool_$", "typeString": "type(bool)"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}, {"typeIdentifier": "t_type$_t_bool_$", "typeString": "type(bool)"}], "expression": {"argumentTypes": null, "id": 731, "name": "abi", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1250, "src": "20537:3:0", "typeDescriptions": {"typeIdentifier": "t_magic_abi", "typeString": "abi"}}, "id": 732, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "decode", "nodeType": "MemberAccess", "referencedDeclaration": null, "src": "20537:10:0", "typeDescriptions": {"typeIdentifier": "t_function_abidecode_pure$__$returns$__$", "typeString": "function () pure"}}, "id": 736, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "20537:30:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"argumentTypes": null, "hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564", "id": 737, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "20569:44:0", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd", "typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""}, "value": "SafeERC20: ERC20 operation did not succeed"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd", "typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""}], "id": 730, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [1266, 1267], "referencedDeclaration": 1267, "src": "20529:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 738, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "20529:85:0", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 739, "nodeType": "ExpressionStatement", "src": "20529:85:0"}]}}]}, "documentation": "@dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\non the return value: the return value is optional (but if data is returned, it must not be false).\n@param token The token targeted by the call.\n@param data The call data (encoded using abi.encode or one of its variants).", "id": 743, "implemented": true, "kind": "function", "modifiers": [], "name": "callOptionalReturn", "nodeType": "FunctionDefinition", "parameters": {"id": 699, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 696, "name": "token", "nodeType": "VariableDeclaration", "scope": 743, "src": "19564:12:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$456", "typeString": "contract IERC20"}, "typeName": {"contractScope": null, "id": 695, "name": "IERC20", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 456, "src": "19564:6:0", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$456", "typeString": "contract IERC20"}}, "value": null, "visibility": "internal"}, {"constant": false, "id": 698, "name": "data", "nodeType": "VariableDeclaration", "scope": 743, "src": "19578:17:0", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 697, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "19578:5:0", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "value": null, "visibility": "internal"}], "src": "19563:33:0"}, "returnParameters": {"id": 700, "nodeType": "ParameterList", "parameters": [], "src": "19605:0:0"}, "scope": 744, "src": "19536:1095:0", "stateMutability": "nonpayable", "superFunction": null, "visibility": "private"}], "scope": 1249, "src": "17443:3190:0"}, {"baseContracts": [{"arguments": null, "baseName": {"contractScope": null, "id": 745, "name": "Ownable", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 389, "src": "20733:7:0", "typeDescriptions": {"typeIdentifier": "t_contract$_Ownable_$389", "typeString": "contract Ownable"}}, "id": 746, "nodeType": "InheritanceSpecifier", "src": "20733:7:0"}], "contractDependencies": [278, 389], "contractKind": "contract", "documentation": null, "fullyImplemented": false, "id": 778, "linearizedBaseContracts": [778, 389, 278], "name": "IRewardDistributionRecipient", "nodeType": "ContractDefinition", "nodes": [{"constant": false, "id": 748, "name": "rewardDistribution", "nodeType": "VariableDeclaration", "scope": 778, "src": "20747:26:0", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 747, "name": "address", "nodeType": "ElementaryTypeName", "src": "20747:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "value": null, "visibility": "internal"}, {"body": null, "documentation": null, "id": 753, "implemented": false, "kind": "function", "modifiers": [], "name": "notifyRewardAmount", "nodeType": "FunctionDefinition", "parameters": {"id": 751, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 750, "name": "reward", "nodeType": "VariableDeclaration", "scope": 753, "src": "20808:14:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 749, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "20808:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "src": "20807:16:0"}, "returnParameters": {"id": 752, "nodeType": "ParameterList", "parameters": [], "src": "20832:0:0"}, "scope": 778, "src": "20780:53:0", "stateMutability": "nonpayable", "superFunction": null, "visibility": "external"}, {"body": {"id": 764, "nodeType": "Block", "src": "20873:108:0", "statements": [{"expression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 759, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"argumentTypes": null, "arguments": [], "expression": {"argumentTypes": [], "id": 756, "name": "_msgSender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 266, "src": "20891:10:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$", "typeString": "function () view returns (address payable)"}}, "id": 757, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "20891:12:0", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"argumentTypes": null, "id": 758, "name": "rewardDistribution", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 748, "src": "20907:18:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "20891:34:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"argumentTypes": null, "hexValue": "43616c6c6572206973206e6f742072657761726420646973747269627574696f6e", "id": 760, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "20927:35:0", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_stringliteral_aaaffe5c21fa5c5738339a5c250428887dc295da86e97cc962477da488b4d856", "typeString": "literal_string \"Caller is not reward distribution\""}, "value": "Caller is not reward distribution"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_aaaffe5c21fa5c5738339a5c250428887dc295da86e97cc962477da488b4d856", "typeString": "literal_string \"Caller is not reward distribution\""}], "id": 755, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [1266, 1267], "referencedDeclaration": 1267, "src": "20883:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 761, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "20883:80:0", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 762, "nodeType": "ExpressionStatement", "src": "20883:80:0"}, {"id": 763, "nodeType": "PlaceholderStatement", "src": "20973:1:0"}]}, "documentation": null, "id": 765, "name": "onlyRewardDistribution", "nodeType": "ModifierDefinition", "parameters": {"id": 754, "nodeType": "ParameterList", "parameters": [], "src": "20870:2:0"}, "src": "20839:142:0", "visibility": "internal"}, {"body": {"id": 776, "nodeType": "Block", "src": "21086:57:0", "statements": [{"expression": {"argumentTypes": null, "id": 774, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"argumentTypes": null, "id": 772, "name": "rewardDistribution", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 748, "src": "21096:18:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"argumentTypes": null, "id": 773, "name": "_rewardDistribution", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 767, "src": "21117:19:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "21096:40:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 775, "nodeType": "ExpressionStatement", "src": "21096:40:0"}]}, "documentation": null, "id": 777, "implemented": true, "kind": "function", "modifiers": [{"arguments": null, "id": 770, "modifierName": {"argumentTypes": null, "id": 769, "name": "onlyOwner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 322, "src": "21072:9:0", "typeDescriptions": {"typeIdentifier": "t_modifier$__$", "typeString": "modifier ()"}}, "nodeType": "ModifierInvocation", "src": "21072:9:0"}], "name": "setRewardDistribution", "nodeType": "FunctionDefinition", "parameters": {"id": 768, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 767, "name": "_rewardDistribution", "nodeType": "VariableDeclaration", "scope": 777, "src": "21018:27:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 766, "name": "address", "nodeType": "ElementaryTypeName", "src": "21018:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "value": null, "visibility": "internal"}], "src": "21017:29:0"}, "returnParameters": {"id": 771, "nodeType": "ParameterList", "parameters": [], "src": "21086:0:0"}, "scope": 778, "src": "20987:156:0", "stateMutability": "nonpayable", "superFunction": null, "visibility": "external"}], "scope": 1249, "src": "20692:453:0"}, {"baseContracts": [], "contractDependencies": [], "contractKind": "contract", "documentation": null, "fullyImplemented": true, "id": 884, "linearizedBaseContracts": [884], "name": "LPTokenWrapper", "nodeType": "ContractDefinition", "nodes": [{"id": 781, "libraryName": {"contractScope": null, "id": 779, "name": "SafeMath", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 253, "src": "21227:8:0", "typeDescriptions": {"typeIdentifier": "t_contract$_SafeMath_$253", "typeString": "library SafeMath"}}, "nodeType": "UsingForDirective", "src": "21221:27:0", "typeName": {"id": 780, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "21240:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}}, {"id": 784, "libraryName": {"contractScope": null, "id": 782, "name": "SafeERC20", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 744, "src": "21259:9:0", "typeDescriptions": {"typeIdentifier": "t_contract$_SafeERC20_$744", "typeString": "library SafeERC20"}}, "nodeType": "UsingForDirective", "src": "21253:27:0", "typeName": {"contractScope": null, "id": 783, "name": "IERC20", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 456, "src": "21273:6:0", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$456", "typeString": "contract IERC20"}}}, {"constant": false, "id": 786, "name": "uni", "nodeType": "VariableDeclaration", "scope": 884, "src": "21286:17:0", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$456", "typeString": "contract IERC20"}, "typeName": {"contractScope": null, "id": 785, "name": "IERC20", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 456, "src": "21286:6:0", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$456", "typeString": "contract IERC20"}}, "value": null, "visibility": "public"}, {"constant": false, "id": 788, "name": "_totalSupply", "nodeType": "VariableDeclaration", "scope": 884, "src": "21310:28:0", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 787, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "21310:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "private"}, {"constant": false, "id": 792, "name": "_balances", "nodeType": "VariableDeclaration", "scope": 884, "src": "21344:45:0", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}, "typeName": {"id": 791, "keyType": {"id": 789, "name": "address", "nodeType": "ElementaryTypeName", "src": "21352:7:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Mapping", "src": "21344:27:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}, "valueType": {"id": 790, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "21363:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}}, "value": null, "visibility": "private"}, {"body": {"id": 799, "nodeType": "Block", "src": "21449:36:0", "statements": [{"expression": {"argumentTypes": null, "id": 797, "name": "_totalSupply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 788, "src": "21466:12:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 796, "id": 798, "nodeType": "Return", "src": "21459:19:0"}]}, "documentation": null, "id": 800, "implemented": true, "kind": "function", "modifiers": [], "name": "totalSupply", "nodeType": "FunctionDefinition", "parameters": {"id": 793, "nodeType": "ParameterList", "parameters": [], "src": "21416:2:0"}, "returnParameters": {"id": 796, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 795, "name": "", "nodeType": "VariableDeclaration", "scope": 800, "src": "21440:7:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 794, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "21440:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "src": "21439:9:0"}, "scope": 884, "src": "21396:89:0", "stateMutability": "view", "superFunction": null, "visibility": "public"}, {"body": {"id": 811, "nodeType": "Block", "src": "21557:42:0", "statements": [{"expression": {"argumentTypes": null, "baseExpression": {"argumentTypes": null, "id": 807, "name": "_balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 792, "src": "21574:9:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 809, "indexExpression": {"argumentTypes": null, "id": 808, "name": "account", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 802, "src": "21584:7:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "21574:18:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 806, "id": 810, "nodeType": "Return", "src": "21567:25:0"}]}, "documentation": null, "id": 812, "implemented": true, "kind": "function", "modifiers": [], "name": "balanceOf", "nodeType": "FunctionDefinition", "parameters": {"id": 803, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 802, "name": "account", "nodeType": "VariableDeclaration", "scope": 812, "src": "21510:15:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 801, "name": "address", "nodeType": "ElementaryTypeName", "src": "21510:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "value": null, "visibility": "internal"}], "src": "21509:17:0"}, "returnParameters": {"id": 806, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 805, "name": "", "nodeType": "VariableDeclaration", "scope": 812, "src": "21548:7:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 804, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "21548:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "src": "21547:9:0"}, "scope": 884, "src": "21491:108:0", "stateMutability": "view", "superFunction": null, "visibility": "public"}, {"body": {"id": 848, "nodeType": "Block", "src": "21643:188:0", "statements": [{"expression": {"argumentTypes": null, "id": 822, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"argumentTypes": null, "id": 817, "name": "_totalSupply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 788, "src": "21653:12:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "id": 820, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 814, "src": "21685:6:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"argumentTypes": null, "id": 818, "name": "_totalSupply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 788, "src": "21668:12:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 819, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "add", "nodeType": "MemberAccess", "referencedDeclaration": 93, "src": "21668:16:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 821, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "21668:24:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "21653:39:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 823, "nodeType": "ExpressionStatement", "src": "21653:39:0"}, {"expression": {"argumentTypes": null, "id": 835, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"argumentTypes": null, "baseExpression": {"argumentTypes": null, "id": 824, "name": "_balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 792, "src": "21702:9:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 827, "indexExpression": {"argumentTypes": null, "expression": {"argumentTypes": null, "id": 825, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1263, "src": "21712:3:0", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 826, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "referencedDeclaration": null, "src": "21712:10:0", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "21702:21:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "id": 833, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 814, "src": "21752:6:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"argumentTypes": null, "baseExpression": {"argumentTypes": null, "id": 828, "name": "_balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 792, "src": "21726:9:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 831, "indexExpression": {"argumentTypes": null, "expression": {"argumentTypes": null, "id": 829, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1263, "src": "21736:3:0", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 830, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "referencedDeclaration": null, "src": "21736:10:0", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "21726:21:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 832, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "add", "nodeType": "MemberAccess", "referencedDeclaration": 93, "src": "21726:25:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 834, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "21726:33:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "21702:57:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 836, "nodeType": "ExpressionStatement", "src": "21702:57:0"}, {"expression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "expression": {"argumentTypes": null, "id": 840, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1263, "src": "21790:3:0", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 841, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "referencedDeclaration": null, "src": "21790:10:0", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, {"argumentTypes": null, "arguments": [{"argumentTypes": null, "id": 843, "name": "this", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1293, "src": "21810:4:0", "typeDescriptions": {"typeIdentifier": "t_contract$_LPTokenWrapper_$884", "typeString": "contract LPTokenWrapper"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_LPTokenWrapper_$884", "typeString": "contract LPTokenWrapper"}], "id": 842, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "21802:7:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": "address"}, "id": 844, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "21802:13:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"argumentTypes": null, "id": 845, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 814, "src": "21817:6:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address_payable", "typeString": "address payable"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"argumentTypes": null, "id": 837, "name": "uni", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 786, "src": "21769:3:0", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$456", "typeString": "contract IERC20"}}, "id": 839, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "safeTransferFrom", "nodeType": "MemberAccess", "referencedDeclaration": 582, "src": "21769:20:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$456_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$456_$", "typeString": "function (contract IERC20,address,address,uint256)"}}, "id": 846, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "21769:55:0", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 847, "nodeType": "ExpressionStatement", "src": "21769:55:0"}]}, "documentation": null, "id": 849, "implemented": true, "kind": "function", "modifiers": [], "name": "stake", "nodeType": "FunctionDefinition", "parameters": {"id": 815, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 814, "name": "amount", "nodeType": "VariableDeclaration", "scope": 849, "src": "21620:14:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 813, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "21620:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "src": "21619:16:0"}, "returnParameters": {"id": 816, "nodeType": "ParameterList", "parameters": [], "src": "21643:0:0"}, "scope": 884, "src": "21605:226:0", "stateMutability": "nonpayable", "superFunction": null, "visibility": "public"}, {"body": {"id": 882, "nodeType": "Block", "src": "21878:169:0", "statements": [{"expression": {"argumentTypes": null, "id": 859, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"argumentTypes": null, "id": 854, "name": "_totalSupply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 788, "src": "21888:12:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "id": 857, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 851, "src": "21920:6:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"argumentTypes": null, "id": 855, "name": "_totalSupply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 788, "src": "21903:12:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 856, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sub", "nodeType": "MemberAccess", "referencedDeclaration": 109, "src": "21903:16:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 858, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "21903:24:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "21888:39:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 860, "nodeType": "ExpressionStatement", "src": "21888:39:0"}, {"expression": {"argumentTypes": null, "id": 872, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"argumentTypes": null, "baseExpression": {"argumentTypes": null, "id": 861, "name": "_balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 792, "src": "21937:9:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 864, "indexExpression": {"argumentTypes": null, "expression": {"argumentTypes": null, "id": 862, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1263, "src": "21947:3:0", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 863, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "referencedDeclaration": null, "src": "21947:10:0", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "21937:21:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "id": 870, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 851, "src": "21987:6:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"argumentTypes": null, "baseExpression": {"argumentTypes": null, "id": 865, "name": "_balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 792, "src": "21961:9:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 868, "indexExpression": {"argumentTypes": null, "expression": {"argumentTypes": null, "id": 866, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1263, "src": "21971:3:0", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 867, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "referencedDeclaration": null, "src": "21971:10:0", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "21961:21:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 869, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sub", "nodeType": "MemberAccess", "referencedDeclaration": 109, "src": "21961:25:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 871, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "21961:33:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "21937:57:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 873, "nodeType": "ExpressionStatement", "src": "21937:57:0"}, {"expression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "expression": {"argumentTypes": null, "id": 877, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1263, "src": "22021:3:0", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 878, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "referencedDeclaration": null, "src": "22021:10:0", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, {"argumentTypes": null, "id": 879, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 851, "src": "22033:6:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address_payable", "typeString": "address payable"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"argumentTypes": null, "id": 874, "name": "uni", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 786, "src": "22004:3:0", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$456", "typeString": "contract IERC20"}}, "id": 876, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "safeTransfer", "nodeType": "MemberAccess", "referencedDeclaration": 557, "src": "22004:16:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$456_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$456_$", "typeString": "function (contract IERC20,address,uint256)"}}, "id": 880, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "22004:36:0", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 881, "nodeType": "ExpressionStatement", "src": "22004:36:0"}]}, "documentation": null, "id": 883, "implemented": true, "kind": "function", "modifiers": [], "name": "withdraw", "nodeType": "FunctionDefinition", "parameters": {"id": 852, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 851, "name": "amount", "nodeType": "VariableDeclaration", "scope": 883, "src": "21855:14:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 850, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "21855:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "src": "21854:16:0"}, "returnParameters": {"id": 853, "nodeType": "ParameterList", "parameters": [], "src": "21878:0:0"}, "scope": 884, "src": "21837:210:0", "stateMutability": "nonpayable", "superFunction": null, "visibility": "public"}], "scope": 1249, "src": "21191:858:0"}, {"baseContracts": [{"arguments": null, "baseName": {"contractScope": null, "id": 885, "name": "LPTokenWrapper", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 884, "src": "22076:14:0", "typeDescriptions": {"typeIdentifier": "t_contract$_LPTokenWrapper_$884", "typeString": "contract LPTokenWrapper"}}, "id": 886, "nodeType": "InheritanceSpecifier", "src": "22076:14:0"}, {"arguments": null, "baseName": {"contractScope": null, "id": 887, "name": "IRewardDistributionRecipient", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 778, "src": "22092:28:0", "typeDescriptions": {"typeIdentifier": "t_contract$_IRewardDistributionRecipient_$778", "typeString": "contract IRewardDistributionRecipient"}}, "id": 888, "nodeType": "InheritanceSpecifier", "src": "22092:28:0"}], "contractDependencies": [278, 389, 778, 884], "contractKind": "contract", "documentation": null, "fullyImplemented": true, "id": 1248, "linearizedBaseContracts": [1248, 778, 389, 278, 884], "name": "CurveRewards", "nodeType": "ContractDefinition", "nodes": [{"constant": false, "id": 890, "name": "snx", "nodeType": "VariableDeclaration", "scope": 1248, "src": "22127:17:0", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$456", "typeString": "contract IERC20"}, "typeName": {"contractScope": null, "id": 889, "name": "IERC20", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 456, "src": "22127:6:0", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$456", "typeString": "contract IERC20"}}, "value": null, "visibility": "public"}, {"constant": true, "id": 893, "name": "DURATION", "nodeType": "VariableDeclaration", "scope": 1248, "src": "22150:41:0", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 891, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "22150:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": {"argumentTypes": null, "hexValue": "37", "id": 892, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "22185:6:0", "subdenomination": "days", "typeDescriptions": {"typeIdentifier": "t_rational_604800_by_1", "typeString": "int_const 604800"}, "value": "7"}, "visibility": "public"}, {"constant": false, "id": 896, "name": "periodFinish", "nodeType": "VariableDeclaration", "scope": 1248, "src": "22198:31:0", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 894, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "22198:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": {"argumentTypes": null, "hexValue": "30", "id": 895, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "22228:1:0", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "visibility": "public"}, {"constant": false, "id": 899, "name": "rewardRate", "nodeType": "VariableDeclaration", "scope": 1248, "src": "22235:29:0", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 897, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "22235:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": {"argumentTypes": null, "hexValue": "30", "id": 898, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "22263:1:0", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "visibility": "public"}, {"constant": false, "id": 901, "name": "lastUpdateTime", "nodeType": "VariableDeclaration", "scope": 1248, "src": "22270:29:0", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 900, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "22270:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "public"}, {"constant": false, "id": 903, "name": "rewardPerTokenStored", "nodeType": "VariableDeclaration", "scope": 1248, "src": "22305:35:0", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 902, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "22305:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "public"}, {"constant": false, "id": 907, "name": "userRewardPerTokenPaid", "nodeType": "VariableDeclaration", "scope": 1248, "src": "22346:57:0", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}, "typeName": {"id": 906, "keyType": {"id": 904, "name": "address", "nodeType": "ElementaryTypeName", "src": "22354:7:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Mapping", "src": "22346:27:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}, "valueType": {"id": 905, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "22365:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}}, "value": null, "visibility": "public"}, {"constant": false, "id": 911, "name": "rewards", "nodeType": "VariableDeclaration", "scope": 1248, "src": "22409:42:0", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}, "typeName": {"id": 910, "keyType": {"id": 908, "name": "address", "nodeType": "ElementaryTypeName", "src": "22417:7:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Mapping", "src": "22409:27:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}, "valueType": {"id": 909, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "22428:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}}, "value": null, "visibility": "public"}, {"anonymous": false, "documentation": null, "id": 915, "name": "RewardAdded", "nodeType": "EventDefinition", "parameters": {"id": 914, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 913, "indexed": false, "name": "reward", "nodeType": "VariableDeclaration", "scope": 915, "src": "22476:14:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 912, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "22476:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "src": "22475:16:0"}, "src": "22458:34:0"}, {"anonymous": false, "documentation": null, "id": 921, "name": "Staked", "nodeType": "EventDefinition", "parameters": {"id": 920, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 917, "indexed": true, "name": "user", "nodeType": "VariableDeclaration", "scope": 921, "src": "22510:20:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 916, "name": "address", "nodeType": "ElementaryTypeName", "src": "22510:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "value": null, "visibility": "internal"}, {"constant": false, "id": 919, "indexed": false, "name": "amount", "nodeType": "VariableDeclaration", "scope": 921, "src": "22532:14:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 918, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "22532:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "src": "22509:38:0"}, "src": "22497:51:0"}, {"anonymous": false, "documentation": null, "id": 927, "name": "Withdrawn", "nodeType": "EventDefinition", "parameters": {"id": 926, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 923, "indexed": true, "name": "user", "nodeType": "VariableDeclaration", "scope": 927, "src": "22569:20:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 922, "name": "address", "nodeType": "ElementaryTypeName", "src": "22569:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "value": null, "visibility": "internal"}, {"constant": false, "id": 925, "indexed": false, "name": "amount", "nodeType": "VariableDeclaration", "scope": 927, "src": "22591:14:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 924, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "22591:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "src": "22568:38:0"}, "src": "22553:54:0"}, {"anonymous": false, "documentation": null, "id": 933, "name": "RewardPaid", "nodeType": "EventDefinition", "parameters": {"id": 932, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 929, "indexed": true, "name": "user", "nodeType": "VariableDeclaration", "scope": 933, "src": "22629:20:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 928, "name": "address", "nodeType": "ElementaryTypeName", "src": "22629:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "value": null, "visibility": "internal"}, {"constant": false, "id": 931, "indexed": false, "name": "reward", "nodeType": "VariableDeclaration", "scope": 933, "src": "22651:14:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 930, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "22651:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "src": "22628:38:0"}, "src": "22612:55:0"}, {"body": {"id": 969, "nodeType": "Block", "src": "22712:283:0", "statements": [{"expression": {"argumentTypes": null, "id": 940, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"argumentTypes": null, "id": 937, "name": "rewardPerTokenStored", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 903, "src": "22722:20:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"argumentTypes": null, "arguments": [], "expression": {"argumentTypes": [], "id": 938, "name": "rewardPerToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1036, "src": "22745:14:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 939, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "22745:16:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "22722:39:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 941, "nodeType": "ExpressionStatement", "src": "22722:39:0"}, {"expression": {"argumentTypes": null, "id": 945, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"argumentTypes": null, "id": 942, "name": "lastUpdateTime", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 901, "src": "22771:14:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"argumentTypes": null, "arguments": [], "expression": {"argumentTypes": [], "id": 943, "name": "lastTimeRewardApplicable", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1003, "src": "22788:24:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 944, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "22788:26:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "22771:43:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 946, "nodeType": "ExpressionStatement", "src": "22771:43:0"}, {"condition": {"argumentTypes": null, "commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 951, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"argumentTypes": null, "id": 947, "name": "account", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 935, "src": "22828:7:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "hexValue": "30", "id": 949, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "22847:1:0", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 948, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "22839:7:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": "address"}, "id": 950, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "22839:10:0", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "src": "22828:21:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": null, "id": 967, "nodeType": "IfStatement", "src": "22824:154:0", "trueBody": {"id": 966, "nodeType": "Block", "src": "22851:127:0", "statements": [{"expression": {"argumentTypes": null, "id": 958, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"argumentTypes": null, "baseExpression": {"argumentTypes": null, "id": 952, "name": "rewards", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 911, "src": "22865:7:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 954, "indexExpression": {"argumentTypes": null, "id": 953, "name": "account", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 935, "src": "22873:7:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "22865:16:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "id": 956, "name": "account", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 935, "src": "22891:7:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 955, "name": "earned", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1065, "src": "22884:6:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$", "typeString": "function (address) view returns (uint256)"}}, "id": 957, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "22884:15:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "22865:34:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 959, "nodeType": "ExpressionStatement", "src": "22865:34:0"}, {"expression": {"argumentTypes": null, "id": 964, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"argumentTypes": null, "baseExpression": {"argumentTypes": null, "id": 960, "name": "userRewardPerTokenPaid", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 907, "src": "22913:22:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 962, "indexExpression": {"argumentTypes": null, "id": 961, "name": "account", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 935, "src": "22936:7:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "22913:31:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"argumentTypes": null, "id": 963, "name": "rewardPerTokenStored", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 903, "src": "22947:20:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "22913:54:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 965, "nodeType": "ExpressionStatement", "src": "22913:54:0"}]}}, {"id": 968, "nodeType": "PlaceholderStatement", "src": "22987:1:0"}]}, "documentation": null, "id": 970, "name": "updateReward", "nodeType": "ModifierDefinition", "parameters": {"id": 936, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 935, "name": "account", "nodeType": "VariableDeclaration", "scope": 970, "src": "22695:15:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 934, "name": "address", "nodeType": "ElementaryTypeName", "src": "22695:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "value": null, "visibility": "internal"}], "src": "22694:17:0"}, "src": "22673:322:0", "visibility": "internal"}, {"body": {"id": 989, "nodeType": "Block", "src": "23053:68:0", "statements": [{"expression": {"argumentTypes": null, "id": 981, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"argumentTypes": null, "id": 977, "name": "uni", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 786, "src": "23063:3:0", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$456", "typeString": "contract IERC20"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "id": 979, "name": "_token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 972, "src": "23076:6:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 978, "name": "IERC20", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 456, "src": "23069:6:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IERC20_$456_$", "typeString": "type(contract IERC20)"}}, "id": 980, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "23069:14:0", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$456", "typeString": "contract IERC20"}}, "src": "23063:20:0", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$456", "typeString": "contract IERC20"}}, "id": 982, "nodeType": "ExpressionStatement", "src": "23063:20:0"}, {"expression": {"argumentTypes": null, "id": 987, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"argumentTypes": null, "id": 983, "name": "snx", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 890, "src": "23093:3:0", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$456", "typeString": "contract IERC20"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "id": 985, "name": "_reward", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 974, "src": "23106:7:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 984, "name": "IERC20", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 456, "src": "23099:6:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IERC20_$456_$", "typeString": "type(contract IERC20)"}}, "id": 986, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "23099:15:0", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$456", "typeString": "contract IERC20"}}, "src": "23093:21:0", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$456", "typeString": "contract IERC20"}}, "id": 988, "nodeType": "ExpressionStatement", "src": "23093:21:0"}]}, "documentation": null, "id": 990, "implemented": true, "kind": "constructor", "modifiers": [], "name": "", "nodeType": "FunctionDefinition", "parameters": {"id": 975, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 972, "name": "_token", "nodeType": "VariableDeclaration", "scope": 990, "src": "23013:14:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 971, "name": "address", "nodeType": "ElementaryTypeName", "src": "23013:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "value": null, "visibility": "internal"}, {"constant": false, "id": 974, "name": "_reward", "nodeType": "VariableDeclaration", "scope": 990, "src": "23029:15:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 973, "name": "address", "nodeType": "ElementaryTypeName", "src": "23029:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "value": null, "visibility": "internal"}], "src": "23012:33:0"}, "returnParameters": {"id": 976, "nodeType": "ParameterList", "parameters": [], "src": "23053:0:0"}, "scope": 1248, "src": "23001:120:0", "stateMutability": "nonpayable", "superFunction": null, "visibility": "public"}, {"body": {"id": 1002, "nodeType": "Block", "src": "23193:63:0", "statements": [{"expression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "expression": {"argumentTypes": null, "id": 997, "name": "block", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1253, "src": "23219:5:0", "typeDescriptions": {"typeIdentifier": "t_magic_block", "typeString": "block"}}, "id": 998, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "timestamp", "nodeType": "MemberAccess", "referencedDeclaration": null, "src": "23219:15:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"argumentTypes": null, "id": 999, "name": "periodFinish", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 896, "src": "23236:12:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"argumentTypes": null, "id": 995, "name": "Math", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 68, "src": "23210:4:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Math_$68_$", "typeString": "type(library Math)"}}, "id": 996, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "min", "nodeType": "MemberAccess", "referencedDeclaration": 35, "src": "23210:8:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 1000, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "23210:39:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 994, "id": 1001, "nodeType": "Return", "src": "23203:46:0"}]}, "documentation": null, "id": 1003, "implemented": true, "kind": "function", "modifiers": [], "name": "lastTimeRewardApplicable", "nodeType": "FunctionDefinition", "parameters": {"id": 991, "nodeType": "ParameterList", "parameters": [], "src": "23160:2:0"}, "returnParameters": {"id": 994, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 993, "name": "", "nodeType": "VariableDeclaration", "scope": 1003, "src": "23184:7:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 992, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "23184:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "src": "23183:9:0"}, "scope": 1248, "src": "23127:129:0", "stateMutability": "view", "superFunction": null, "visibility": "public"}, {"body": {"id": 1035, "nodeType": "Block", "src": "23318:352:0", "statements": [{"condition": {"argumentTypes": null, "commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 1011, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"argumentTypes": null, "arguments": [], "expression": {"argumentTypes": [], "id": 1008, "name": "totalSupply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 800, "src": "23332:11:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 1009, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "23332:13:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"argumentTypes": null, "hexValue": "30", "id": 1010, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "23349:1:0", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "23332:18:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": null, "id": 1015, "nodeType": "IfStatement", "src": "23328:76:0", "trueBody": {"id": 1014, "nodeType": "Block", "src": "23352:52:0", "statements": [{"expression": {"argumentTypes": null, "id": 1012, "name": "rewardPerTokenStored", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 903, "src": "23373:20:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 1007, "id": 1013, "nodeType": "Return", "src": "23366:27:0"}]}}, {"expression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "arguments": [{"argumentTypes": null, "arguments": [], "expression": {"argumentTypes": [], "id": 1030, "name": "totalSupply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 800, "src": "23635:11:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 1031, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "23635:13:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "hexValue": "31653138", "id": 1027, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "23604:4:0", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_rational_1000000000000000000_by_1", "typeString": "int_const 1000000000000000000"}, "value": "1e18"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_1000000000000000000_by_1", "typeString": "int_const 1000000000000000000"}], "expression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "id": 1024, "name": "rewardRate", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 899, "src": "23567:10:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "id": 1021, "name": "lastUpdateTime", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 901, "src": "23526:14:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"argumentTypes": null, "arguments": [], "expression": {"argumentTypes": [], "id": 1018, "name": "lastTimeRewardApplicable", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1003, "src": "23474:24:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 1019, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "23474:26:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1020, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sub", "nodeType": "MemberAccess", "referencedDeclaration": 109, "src": "23474:51:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 1022, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "23474:67:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1023, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "mul", "nodeType": "MemberAccess", "referencedDeclaration": 170, "src": "23474:92:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 1025, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "23474:104:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1026, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "mul", "nodeType": "MemberAccess", "referencedDeclaration": 170, "src": "23474:129:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 1028, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "23474:135:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1029, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "div", "nodeType": "MemberAccess", "referencedDeclaration": 186, "src": "23474:160:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 1032, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "23474:175:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"argumentTypes": null, "id": 1016, "name": "rewardPerTokenStored", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 903, "src": "23432:20:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1017, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "add", "nodeType": "MemberAccess", "referencedDeclaration": 93, "src": "23432:24:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 1033, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "23432:231:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 1007, "id": 1034, "nodeType": "Return", "src": "23413:250:0"}]}, "documentation": null, "id": 1036, "implemented": true, "kind": "function", "modifiers": [], "name": "rewardPerToken", "nodeType": "FunctionDefinition", "parameters": {"id": 1004, "nodeType": "ParameterList", "parameters": [], "src": "23285:2:0"}, "returnParameters": {"id": 1007, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1006, "name": "", "nodeType": "VariableDeclaration", "scope": 1036, "src": "23309:7:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1005, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "23309:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "src": "23308:9:0"}, "scope": 1248, "src": "23262:408:0", "stateMutability": "view", "superFunction": null, "visibility": "public"}, {"body": {"id": 1064, "nodeType": "Block", "src": "23739:196:0", "statements": [{"expression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "baseExpression": {"argumentTypes": null, "id": 1059, "name": "rewards", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 911, "src": "23911:7:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 1061, "indexExpression": {"argumentTypes": null, "id": 1060, "name": "account", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1038, "src": "23919:7:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "23911:16:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "hexValue": "31653138", "id": 1056, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "23884:4:0", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_rational_1000000000000000000_by_1", "typeString": "int_const 1000000000000000000"}, "value": "1e18"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_1000000000000000000_by_1", "typeString": "int_const 1000000000000000000"}], "expression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "arguments": [{"argumentTypes": null, "baseExpression": {"argumentTypes": null, "id": 1050, "name": "userRewardPerTokenPaid", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 907, "src": "23829:22:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 1052, "indexExpression": {"argumentTypes": null, "id": 1051, "name": "account", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1038, "src": "23852:7:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "23829:31:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"argumentTypes": null, "arguments": [], "expression": {"argumentTypes": [], "id": 1047, "name": "rewardPerToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1036, "src": "23808:14:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 1048, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "23808:16:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1049, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sub", "nodeType": "MemberAccess", "referencedDeclaration": 109, "src": "23808:20:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 1053, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "23808:53:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "id": 1044, "name": "account", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1038, "src": "23778:7:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 1043, "name": "balanceOf", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 812, "src": "23768:9:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$", "typeString": "function (address) view returns (uint256)"}}, "id": 1045, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "23768:18:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1046, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "mul", "nodeType": "MemberAccess", "referencedDeclaration": 170, "src": "23768:39:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 1054, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "23768:94:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1055, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "div", "nodeType": "MemberAccess", "referencedDeclaration": 186, "src": "23768:115:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 1057, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "23768:121:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1058, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "add", "nodeType": "MemberAccess", "referencedDeclaration": 93, "src": "23768:142:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 1062, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "23768:160:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 1042, "id": 1063, "nodeType": "Return", "src": "23749:179:0"}]}, "documentation": null, "id": 1065, "implemented": true, "kind": "function", "modifiers": [], "name": "earned", "nodeType": "FunctionDefinition", "parameters": {"id": 1039, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1038, "name": "account", "nodeType": "VariableDeclaration", "scope": 1065, "src": "23692:15:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1037, "name": "address", "nodeType": "ElementaryTypeName", "src": "23692:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "value": null, "visibility": "internal"}], "src": "23691:17:0"}, "returnParameters": {"id": 1042, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1041, "name": "", "nodeType": "VariableDeclaration", "scope": 1065, "src": "23730:7:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1040, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "23730:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "src": "23729:9:0"}, "scope": 1248, "src": "23676:259:0", "stateMutability": "view", "superFunction": null, "visibility": "public"}, {"body": {"id": 1093, "nodeType": "Block", "src": "24086:124:0", "statements": [{"expression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 1077, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"argumentTypes": null, "id": 1075, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1067, "src": "24104:6:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"argumentTypes": null, "hexValue": "30", "id": 1076, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "24113:1:0", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "24104:10:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"argumentTypes": null, "hexValue": "43616e6e6f74207374616b652030", "id": 1078, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "24116:16:0", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab", "typeString": "literal_string \"Cannot stake 0\""}, "value": "Cannot stake 0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab", "typeString": "literal_string \"Cannot stake 0\""}], "id": 1074, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [1266, 1267], "referencedDeclaration": 1267, "src": "24096:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 1079, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "24096:37:0", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1080, "nodeType": "ExpressionStatement", "src": "24096:37:0"}, {"expression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "id": 1084, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1067, "src": "24155:6:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"argumentTypes": null, "id": 1081, "name": "super", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1296, "src": "24143:5:0", "typeDescriptions": {"typeIdentifier": "t_super$_CurveRewards_$1248", "typeString": "contract super CurveRewards"}}, "id": 1083, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "stake", "nodeType": "MemberAccess", "referencedDeclaration": 849, "src": "24143:11:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$", "typeString": "function (uint256)"}}, "id": 1085, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "24143:19:0", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1086, "nodeType": "ExpressionStatement", "src": "24143:19:0"}, {"eventCall": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "expression": {"argumentTypes": null, "id": 1088, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1263, "src": "24184:3:0", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 1089, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "referencedDeclaration": null, "src": "24184:10:0", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, {"argumentTypes": null, "id": 1090, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1067, "src": "24196:6:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address_payable", "typeString": "address payable"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1087, "name": "Staked", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 921, "src": "24177:6:0", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,uint256)"}}, "id": 1091, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "24177:26:0", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1092, "nodeType": "EmitStatement", "src": "24172:31:0"}]}, "documentation": null, "id": 1094, "implemented": true, "kind": "function", "modifiers": [{"arguments": [{"argumentTypes": null, "expression": {"argumentTypes": null, "id": 1070, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1263, "src": "24074:3:0", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 1071, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "referencedDeclaration": null, "src": "24074:10:0", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}], "id": 1072, "modifierName": {"argumentTypes": null, "id": 1069, "name": "updateReward", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 970, "src": "24061:12:0", "typeDescriptions": {"typeIdentifier": "t_modifier$_t_address_$", "typeString": "modifier (address)"}}, "nodeType": "ModifierInvocation", "src": "24061:24:0"}], "name": "stake", "nodeType": "FunctionDefinition", "parameters": {"id": 1068, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1067, "name": "amount", "nodeType": "VariableDeclaration", "scope": 1094, "src": "24038:14:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1066, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "24038:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "src": "24037:16:0"}, "returnParameters": {"id": 1073, "nodeType": "ParameterList", "parameters": [], "src": "24086:0:0"}, "scope": 1248, "src": "24023:187:0", "stateMutability": "nonpayable", "superFunction": 849, "visibility": "public"}, {"body": {"id": 1122, "nodeType": "Block", "src": "24282:133:0", "statements": [{"expression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 1106, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"argumentTypes": null, "id": 1104, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1096, "src": "24300:6:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"argumentTypes": null, "hexValue": "30", "id": 1105, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "24309:1:0", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "24300:10:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"argumentTypes": null, "hexValue": "43616e6e6f742077697468647261772030", "id": 1107, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "24312:19:0", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_stringliteral_8d85b8e7f4404d04d93e8d532ad219ceeba0becfbc18622bad46b31e08b1f0b0", "typeString": "literal_string \"Cannot withdraw 0\""}, "value": "Cannot withdraw 0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_8d85b8e7f4404d04d93e8d532ad219ceeba0becfbc18622bad46b31e08b1f0b0", "typeString": "literal_string \"Cannot withdraw 0\""}], "id": 1103, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [1266, 1267], "referencedDeclaration": 1267, "src": "24292:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 1108, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "24292:40:0", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1109, "nodeType": "ExpressionStatement", "src": "24292:40:0"}, {"expression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "id": 1113, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1096, "src": "24357:6:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"argumentTypes": null, "id": 1110, "name": "super", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1296, "src": "24342:5:0", "typeDescriptions": {"typeIdentifier": "t_super$_CurveRewards_$1248", "typeString": "contract super CurveRewards"}}, "id": 1112, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "withdraw", "nodeType": "MemberAccess", "referencedDeclaration": 883, "src": "24342:14:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$", "typeString": "function (uint256)"}}, "id": 1114, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "24342:22:0", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1115, "nodeType": "ExpressionStatement", "src": "24342:22:0"}, {"eventCall": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "expression": {"argumentTypes": null, "id": 1117, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1263, "src": "24389:3:0", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 1118, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "referencedDeclaration": null, "src": "24389:10:0", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, {"argumentTypes": null, "id": 1119, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1096, "src": "24401:6:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address_payable", "typeString": "address payable"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1116, "name": "Withdrawn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 927, "src": "24379:9:0", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,uint256)"}}, "id": 1120, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "24379:29:0", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1121, "nodeType": "EmitStatement", "src": "24374:34:0"}]}, "documentation": null, "id": 1123, "implemented": true, "kind": "function", "modifiers": [{"arguments": [{"argumentTypes": null, "expression": {"argumentTypes": null, "id": 1099, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1263, "src": "24270:3:0", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 1100, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "referencedDeclaration": null, "src": "24270:10:0", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}], "id": 1101, "modifierName": {"argumentTypes": null, "id": 1098, "name": "updateReward", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 970, "src": "24257:12:0", "typeDescriptions": {"typeIdentifier": "t_modifier$_t_address_$", "typeString": "modifier (address)"}}, "nodeType": "ModifierInvocation", "src": "24257:24:0"}], "name": "withdraw", "nodeType": "FunctionDefinition", "parameters": {"id": 1097, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1096, "name": "amount", "nodeType": "VariableDeclaration", "scope": 1123, "src": "24234:14:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1095, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "24234:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "src": "24233:16:0"}, "returnParameters": {"id": 1102, "nodeType": "ParameterList", "parameters": [], "src": "24282:0:0"}, "scope": 1248, "src": "24216:199:0", "stateMutability": "nonpayable", "superFunction": 883, "visibility": "public"}, {"body": {"id": 1136, "nodeType": "Block", "src": "24446:69:0", "statements": [{"expression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "arguments": [{"argumentTypes": null, "expression": {"argumentTypes": null, "id": 1128, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1263, "src": "24475:3:0", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 1129, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "referencedDeclaration": null, "src": "24475:10:0", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address_payable", "typeString": "address payable"}], "id": 1127, "name": "balanceOf", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 812, "src": "24465:9:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$", "typeString": "function (address) view returns (uint256)"}}, "id": 1130, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "24465:21:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1126, "name": "withdraw", "nodeType": "Identifier", "overloadedDeclarations": [1123], "referencedDeclaration": 1123, "src": "24456:8:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$", "typeString": "function (uint256)"}}, "id": 1131, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "24456:31:0", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1132, "nodeType": "ExpressionStatement", "src": "24456:31:0"}, {"expression": {"argumentTypes": null, "arguments": [], "expression": {"argumentTypes": [], "id": 1133, "name": "getReward", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1178, "src": "24497:9:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$", "typeString": "function ()"}}, "id": 1134, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "24497:11:0", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1135, "nodeType": "ExpressionStatement", "src": "24497:11:0"}]}, "documentation": null, "id": 1137, "implemented": true, "kind": "function", "modifiers": [], "name": "exit", "nodeType": "FunctionDefinition", "parameters": {"id": 1124, "nodeType": "ParameterList", "parameters": [], "src": "24434:2:0"}, "returnParameters": {"id": 1125, "nodeType": "ParameterList", "parameters": [], "src": "24446:0:0"}, "scope": 1248, "src": "24421:94:0", "stateMutability": "nonpayable", "superFunction": null, "visibility": "external"}, {"body": {"id": 1177, "nodeType": "Block", "src": "24574:224:0", "statements": [{"assignments": [1145], "declarations": [{"constant": false, "id": 1145, "name": "reward", "nodeType": "VariableDeclaration", "scope": 1177, "src": "24584:14:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1144, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "24584:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "id": 1150, "initialValue": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "expression": {"argumentTypes": null, "id": 1147, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1263, "src": "24608:3:0", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 1148, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "referencedDeclaration": null, "src": "24608:10:0", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address_payable", "typeString": "address payable"}], "id": 1146, "name": "earned", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1065, "src": "24601:6:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$", "typeString": "function (address) view returns (uint256)"}}, "id": 1149, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "24601:18:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "24584:35:0"}, {"condition": {"argumentTypes": null, "commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 1153, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"argumentTypes": null, "id": 1151, "name": "reward", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1145, "src": "24633:6:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"argumentTypes": null, "hexValue": "30", "id": 1152, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "24642:1:0", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "24633:10:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": null, "id": 1176, "nodeType": "IfStatement", "src": "24629:163:0", "trueBody": {"id": 1175, "nodeType": "Block", "src": "24645:147:0", "statements": [{"expression": {"argumentTypes": null, "id": 1159, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"argumentTypes": null, "baseExpression": {"argumentTypes": null, "id": 1154, "name": "rewards", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 911, "src": "24659:7:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 1157, "indexExpression": {"argumentTypes": null, "expression": {"argumentTypes": null, "id": 1155, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1263, "src": "24667:3:0", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 1156, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "referencedDeclaration": null, "src": "24667:10:0", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "24659:19:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"argumentTypes": null, "hexValue": "30", "id": 1158, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "24681:1:0", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "24659:23:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1160, "nodeType": "ExpressionStatement", "src": "24659:23:0"}, {"expression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "expression": {"argumentTypes": null, "id": 1164, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1263, "src": "24713:3:0", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 1165, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "referencedDeclaration": null, "src": "24713:10:0", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, {"argumentTypes": null, "id": 1166, "name": "reward", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1145, "src": "24725:6:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address_payable", "typeString": "address payable"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"argumentTypes": null, "id": 1161, "name": "snx", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 890, "src": "24696:3:0", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$456", "typeString": "contract IERC20"}}, "id": 1163, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "safeTransfer", "nodeType": "MemberAccess", "referencedDeclaration": 557, "src": "24696:16:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$456_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$456_$", "typeString": "function (contract IERC20,address,uint256)"}}, "id": 1167, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "24696:36:0", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1168, "nodeType": "ExpressionStatement", "src": "24696:36:0"}, {"eventCall": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "expression": {"argumentTypes": null, "id": 1170, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1263, "src": "24762:3:0", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 1171, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "referencedDeclaration": null, "src": "24762:10:0", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, {"argumentTypes": null, "id": 1172, "name": "reward", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1145, "src": "24774:6:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address_payable", "typeString": "address payable"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1169, "name": "RewardPaid", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 933, "src": "24751:10:0", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,uint256)"}}, "id": 1173, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "24751:30:0", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1174, "nodeType": "EmitStatement", "src": "24746:35:0"}]}}]}, "documentation": null, "id": 1178, "implemented": true, "kind": "function", "modifiers": [{"arguments": [{"argumentTypes": null, "expression": {"argumentTypes": null, "id": 1140, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1263, "src": "24562:3:0", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 1141, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "referencedDeclaration": null, "src": "24562:10:0", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}], "id": 1142, "modifierName": {"argumentTypes": null, "id": 1139, "name": "updateReward", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 970, "src": "24549:12:0", "typeDescriptions": {"typeIdentifier": "t_modifier$_t_address_$", "typeString": "modifier (address)"}}, "nodeType": "ModifierInvocation", "src": "24549:24:0"}], "name": "getReward", "nodeType": "FunctionDefinition", "parameters": {"id": 1138, "nodeType": "ParameterList", "parameters": [], "src": "24539:2:0"}, "returnParameters": {"id": 1143, "nodeType": "ParameterList", "parameters": [], "src": "24574:0:0"}, "scope": 1248, "src": "24521:277:0", "stateMutability": "nonpayable", "superFunction": null, "visibility": "public"}, {"body": {"id": 1246, "nodeType": "Block", "src": "24933:444:0", "statements": [{"condition": {"argumentTypes": null, "commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 1193, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"argumentTypes": null, "expression": {"argumentTypes": null, "id": 1190, "name": "block", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1253, "src": "24947:5:0", "typeDescriptions": {"typeIdentifier": "t_magic_block", "typeString": "block"}}, "id": 1191, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "timestamp", "nodeType": "MemberAccess", "referencedDeclaration": null, "src": "24947:15:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">=", "rightExpression": {"argumentTypes": null, "id": 1192, "name": "periodFinish", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 896, "src": "24966:12:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "24947:31:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 1227, "nodeType": "Block", "src": "25044:197:0", "statements": [{"assignments": [1203], "declarations": [{"constant": false, "id": 1203, "name": "remaining", "nodeType": "VariableDeclaration", "scope": 1227, "src": "25058:17:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1202, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "25058:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "id": 1209, "initialValue": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "expression": {"argumentTypes": null, "id": 1206, "name": "block", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1253, "src": "25095:5:0", "typeDescriptions": {"typeIdentifier": "t_magic_block", "typeString": "block"}}, "id": 1207, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "timestamp", "nodeType": "MemberAccess", "referencedDeclaration": null, "src": "25095:15:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"argumentTypes": null, "id": 1204, "name": "periodFinish", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 896, "src": "25078:12:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1205, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sub", "nodeType": "MemberAccess", "referencedDeclaration": 109, "src": "25078:16:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 1208, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "25078:33:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "25058:53:0"}, {"assignments": [1211], "declarations": [{"constant": false, "id": 1211, "name": "leftover", "nodeType": "VariableDeclaration", "scope": 1227, "src": "25125:16:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1210, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "25125:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "id": 1216, "initialValue": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "id": 1214, "name": "rewardRate", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 899, "src": "25158:10:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"argumentTypes": null, "id": 1212, "name": "remaining", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1203, "src": "25144:9:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1213, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "mul", "nodeType": "MemberAccess", "referencedDeclaration": 170, "src": "25144:13:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 1215, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "25144:25:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "25125:44:0"}, {"expression": {"argumentTypes": null, "id": 1225, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"argumentTypes": null, "id": 1217, "name": "rewardRate", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 899, "src": "25183:10:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "id": 1223, "name": "DURATION", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 893, "src": "25221:8:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "id": 1220, "name": "leftover", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1211, "src": "25207:8:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"argumentTypes": null, "id": 1218, "name": "reward", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1180, "src": "25196:6:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1219, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "add", "nodeType": "MemberAccess", "referencedDeclaration": 93, "src": "25196:10:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 1221, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "25196:20:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1222, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "div", "nodeType": "MemberAccess", "referencedDeclaration": 186, "src": "25196:24:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 1224, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "25196:34:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "25183:47:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1226, "nodeType": "ExpressionStatement", "src": "25183:47:0"}]}, "id": 1228, "nodeType": "IfStatement", "src": "24943:298:0", "trueBody": {"id": 1201, "nodeType": "Block", "src": "24980:58:0", "statements": [{"expression": {"argumentTypes": null, "id": 1199, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"argumentTypes": null, "id": 1194, "name": "rewardRate", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 899, "src": "24994:10:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "id": 1197, "name": "DURATION", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 893, "src": "25018:8:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"argumentTypes": null, "id": 1195, "name": "reward", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1180, "src": "25007:6:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1196, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "div", "nodeType": "MemberAccess", "referencedDeclaration": 186, "src": "25007:10:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 1198, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "25007:20:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "24994:33:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1200, "nodeType": "ExpressionStatement", "src": "24994:33:0"}]}}, {"expression": {"argumentTypes": null, "id": 1232, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"argumentTypes": null, "id": 1229, "name": "lastUpdateTime", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 901, "src": "25250:14:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"argumentTypes": null, "expression": {"argumentTypes": null, "id": 1230, "name": "block", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1253, "src": "25267:5:0", "typeDescriptions": {"typeIdentifier": "t_magic_block", "typeString": "block"}}, "id": 1231, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "timestamp", "nodeType": "MemberAccess", "referencedDeclaration": null, "src": "25267:15:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "25250:32:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1233, "nodeType": "ExpressionStatement", "src": "25250:32:0"}, {"expression": {"argumentTypes": null, "id": 1240, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"argumentTypes": null, "id": 1234, "name": "periodFinish", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 896, "src": "25292:12:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "id": 1238, "name": "DURATION", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 893, "src": "25327:8:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"argumentTypes": null, "expression": {"argumentTypes": null, "id": 1235, "name": "block", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1253, "src": "25307:5:0", "typeDescriptions": {"typeIdentifier": "t_magic_block", "typeString": "block"}}, "id": 1236, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "timestamp", "nodeType": "MemberAccess", "referencedDeclaration": null, "src": "25307:15:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1237, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "add", "nodeType": "MemberAccess", "referencedDeclaration": 93, "src": "25307:19:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 1239, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "25307:29:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "25292:44:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1241, "nodeType": "ExpressionStatement", "src": "25292:44:0"}, {"eventCall": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "id": 1243, "name": "reward", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1180, "src": "25363:6:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1242, "name": "RewardAdded", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 915, "src": "25351:11:0", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$", "typeString": "function (uint256)"}}, "id": 1244, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "25351:19:0", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1245, "nodeType": "EmitStatement", "src": "25346:24:0"}]}, "documentation": null, "id": 1247, "implemented": true, "kind": "function", "modifiers": [{"arguments": null, "id": 1183, "modifierName": {"argumentTypes": null, "id": 1182, "name": "onlyRewardDistribution", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 765, "src": "24873:22:0", "typeDescriptions": {"typeIdentifier": "t_modifier$__$", "typeString": "modifier ()"}}, "nodeType": "ModifierInvocation", "src": "24873:22:0"}, {"arguments": [{"argumentTypes": null, "arguments": [{"argumentTypes": null, "hexValue": "30", "id": 1186, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "24925:1:0", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 1185, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "24917:7:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": "address"}, "id": 1187, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "24917:10:0", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}], "id": 1188, "modifierName": {"argumentTypes": null, "id": 1184, "name": "updateReward", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 970, "src": "24904:12:0", "typeDescriptions": {"typeIdentifier": "t_modifier$_t_address_$", "typeString": "modifier (address)"}}, "nodeType": "ModifierInvocation", "src": "24904:24:0"}], "name": "notifyRewardAmount", "nodeType": "FunctionDefinition", "parameters": {"id": 1181, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1180, "name": "reward", "nodeType": "VariableDeclaration", "scope": 1247, "src": "24832:14:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1179, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "24832:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "src": "24831:16:0"}, "returnParameters": {"id": 1189, "nodeType": "ParameterList", "parameters": [], "src": "24933:0:0"}, "scope": 1248, "src": "24804:573:0", "stateMutability": "nonpayable", "superFunction": 753, "visibility": "external"}], "scope": 1249, "src": "22051:3328:0"}], "src": "1492:23888:0"}, "compiler": {"version": "0.5.17+commit.d19bba13", "evm_version": "istanbul", "optimizer": {"enabled": true, "runs": 200}}, "contractName": "CurveRewards", "deployedBytecode": "", "deployedSourceMap": "22051:3328:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;22051:3328:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23676:259;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;23676:259:0;-1:-1:-1;;;;;23676:259:0;;:::i;:::-;;;;;;;;;;;;;;;;22409:42;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;22409:42:0;-1:-1:-1;;;;;22409:42:0;;:::i;20987:156::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;20987:156:0;-1:-1:-1;;;;;20987:156:0;;:::i;:::-;;21396:89;;;:::i;22150:41::-;;;:::i;24216:199::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;24216:199:0;;:::i;24804:573::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;24804:573:0;;:::i;24521:277::-;;;:::i;21491:108::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;21491:108:0;-1:-1:-1;;;;;21491:108:0;;:::i;10378:137::-;;;:::i;22235:29::-;;;:::i;23127:129::-;;;:::i;22346:57::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;22346:57:0;-1:-1:-1;;;;;22346:57:0;;:::i;9593:77::-;;;:::i;:::-;;;;-1:-1:-1;;;;;9593:77:0;;;;;;;;;;;;;;9944:92;;;:::i;:::-;;;;;;;;;;;;;;;;;;24023:187;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;24023:187:0;;:::i;22270:29::-;;;:::i;23262:408::-;;;:::i;22305:35::-;;;:::i;22127:17::-;;;:::i;24421:94::-;;;:::i;22198:31::-;;;:::i;21286:17::-;;;:::i;10664:107::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;10664:107:0;-1:-1:-1;;;;;10664:107:0;;:::i;23676:259::-;-1:-1:-1;;;;;23911:16:0;;23730:7;23911:16;;;:7;:16;;;;;;;;;23829:22;:31;;;;;;23768:160;;23911:16;23768:121;;23884:4;;23768:94;;23808:53;;:16;:14;:16::i;:::-;:20;:53;:20;:53;:::i;:::-;23768:18;23778:7;23768:9;:18::i;:::-;:39;:94;:39;:94;:::i;:::-;:115;:121;:115;:121;:::i;:::-;:142;:160;:142;:160;:::i;:::-;23749:179;23676:259;-1:-1:-1;;23676:259:0:o;22409:42::-;;;;;;;;;;;;;:::o;20987:156::-;9797:9;:7;:9::i;:::-;9789:54;;;;;-1:-1:-1;;;9789:54:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21096:18;:40;;-1:-1:-1;;;;;;21096:40:0;-1:-1:-1;;;;;21096:40:0;;;;;;;;;;20987:156::o;21396:89::-;21466:12;;21396:89;;:::o;22150:41::-;22185:6;22150:41;:::o;24216:199::-;24270:10;22745:16;:14;:16::i;:::-;22722:20;:39;22788:26;:24;:26::i;:::-;22771:14;:43;-1:-1:-1;;;;;22828:21:0;;;22824:154;;22884:15;22891:7;22884:6;:15::i;:::-;-1:-1:-1;;;;;22865:16:0;;;;;;:7;:16;;;;;;;;:34;;;;22947:20;;22913:22;:31;;;;;;:54;22824:154;24309:1;24300:6;:10;24292:40;;;;;-1:-1:-1;;;24292:40:0;;;;;;;;;;;;-1:-1:-1;;;24292:40:0;;;;;;;;;;;;;;;24342:22;24357:6;24342:14;:22::i;:::-;24379:29;;;;;;;;24389:10;;24379:29;;;;;;;;;;24216:199;;:::o;24804:573::-;20907:18;;-1:-1:-1;;;;;20907:18:0;20891:12;:10;:12::i;:::-;-1:-1:-1;;;;;20891:34:0;;20883:80;;;;-1:-1:-1;;;20883:80:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;24925:1;22745:16;:14;:16::i;:::-;22722:20;:39;22788:26;:24;:26::i;:::-;22771:14;:43;-1:-1:-1;;;;;22828:21:0;;;22824:154;;22884:15;22891:7;22884:6;:15::i;:::-;-1:-1:-1;;;;;22865:16:0;;;;;;:7;:16;;;;;;;;:34;;;;22947:20;;22913:22;:31;;;;;;:54;22824:154;24966:12;;24947:15;:31;24943:298;;25007:20;:6;22185;25007:20;:10;:20;:::i;:::-;24994:10;:33;24943:298;;;25078:12;;25058:17;;25078:33;;25095:15;25078:33;:16;:33;:::i;:::-;25058:53;;25125:16;25144:25;25158:10;;25144:9;:13;;:25;;;;:::i;:::-;25125:44;-1:-1:-1;25196:34:0;22185:6;25196:20;:6;25125:44;25196:20;:10;:20;:::i;:34::-;25183:10;:47;-1:-1:-1;;24943:298:0;25267:15;25250:14;:32;;;25307:29;;22185:6;25307:29;:19;:29;:::i;:::-;25292:12;:44;25351:19;;;;;;;;;;;;;;;;;20973:1;24804:573;:::o;24521:277::-;24562:10;22745:16;:14;:16::i;:::-;22722:20;:39;22788:26;:24;:26::i;:::-;22771:14;:43;-1:-1:-1;;;;;22828:21:0;;;22824:154;;22884:15;22891:7;22884:6;:15::i;:::-;-1:-1:-1;;;;;22865:16:0;;;;;;:7;:16;;;;;;;;:34;;;;22947:20;;22913:22;:31;;;;;;:54;22824:154;24584:14;24601:18;24608:10;24601:6;:18::i;:::-;24584:35;-1:-1:-1;24633:10:0;;24629:163;;24667:10;24681:1;24659:19;;;:7;:19;;;;;:23;24696:3;;:36;;-1:-1:-1;;;;;24696:3:0;;;;24725:6;24696:16;:36::i;:::-;24751:30;;;;;;;;24762:10;;24751:30;;;;;;;;;;24629:163;22987:1;24521:277;:::o;21491:108::-;-1:-1:-1;;;;;21574:18:0;21548:7;21574:18;;;:9;:18;;;;;;;21491:108::o;10378:137::-;9797:9;:7;:9::i;:::-;9789:54;;;;;-1:-1:-1;;;9789:54:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10460:6;;10439:40;;10476:1;;-1:-1:-1;;;;;10460:6:0;;10439:40;;10476:1;;10439:40;10489:6;:19;;-1:-1:-1;;;;;;10489:19:0;;;10378:137::o;22235:29::-;;;;:::o;23127:129::-;23184:7;23210:39;23219:15;23236:12;;23210:8;:39::i;:::-;23203:46;;23127:129;:::o;22346:57::-;;;;;;;;;;;;;:::o;9593:77::-;9657:6;;-1:-1:-1;;;;;9657:6:0;9593:77;:::o;9944:92::-;10023:6;;9984:4;;-1:-1:-1;;;;;10023:6:0;10007:12;:10;:12::i;:::-;-1:-1:-1;;;;;10007:22:0;;10000:29;;9944:92;:::o;24023:187::-;24074:10;22745:16;:14;:16::i;:::-;22722:20;:39;22788:26;:24;:26::i;:::-;22771:14;:43;-1:-1:-1;;;;;22828:21:0;;;22824:154;;22884:15;22891:7;22884:6;:15::i;:::-;-1:-1:-1;;;;;22865:16:0;;;;;;:7;:16;;;;;;;;:34;;;;22947:20;;22913:22;:31;;;;;;:54;22824:154;24113:1;24104:6;:10;24096:37;;;;;-1:-1:-1;;;24096:37:0;;;;;;;;;;;;-1:-1:-1;;;24096:37:0;;;;;;;;;;;;;;;24143:19;24155:6;24143:11;:19::i;:::-;24177:26;;;;;;;;24184:10;;24177:26;;;;;;;;;;24023:187;;:::o;22270:29::-;;;;:::o;23262:408::-;23309:7;23332:13;:11;:13::i;:::-;23328:76;;-1:-1:-1;23373:20:0;;23366:27;;23328:76;23432:231;23474:175;23635:13;:11;:13::i;:::-;23474:135;23604:4;23474:104;23567:10;;23474:67;23526:14;;23474:26;:24;:26::i;:175::-;23432:20;;;:231;:24;:231;:::i;22305:35::-;;;;:::o;22127:17::-;;;-1:-1:-1;;;;;22127:17:0;;:::o;24421:94::-;24456:31;24465:21;24475:10;24465:9;:21::i;:::-;24456:8;:31::i;:::-;24497:11;:9;:11::i;:::-;24421:94::o;22198:31::-;;;;:::o;21286:17::-;;;-1:-1:-1;;;;;21286:17:0;;:::o;10664:107::-;9797:9;:7;:9::i;:::-;9789:54;;;;;-1:-1:-1;;;9789:54:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10736:28;10755:8;10736:18;:28::i;:::-;10664:107;:::o;3564:134::-;3622:7;3648:43;3652:1;3655;3648:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;3641:50;3564:134;-1:-1:-1;;;3564:134:0:o;4449:459::-;4507:7;4748:6;4744:45;;-1:-1:-1;4777:1:0;4770:8;;4744:45;4811:5;;;4815:1;4811;:5;:1;4834:5;;;;;:10;4826:56;;;;-1:-1:-1;;;4826:56:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5363:130;5421:7;5447:39;5451:1;5454;5447:39;;;;;;;;;;;;;;;;;:3;:39::i;3124:176::-;3182:7;3213:5;;;3236:6;;;;3228:46;;;;;-1:-1:-1;;;3228:46:0;;;;;;;;;;;;;;;;;;;;;;;;;;;21837:210;21903:12;;:24;;21920:6;21903:24;:16;:24;:::i;:::-;21888:12;:39;21971:10;21961:21;;;;:9;:21;;;;;;:33;;21987:6;21961:33;:25;:33;:::i;:::-;21947:10;21937:21;;;;:9;:21;;;;;:57;;;;22004:3;;:36;;-1:-1:-1;;;;;22004:3:0;;;;22033:6;22004:16;:36::i;8404:96::-;8483:10;8404:96;:::o;17532:174::-;17640:58;;;-1:-1:-1;;;;;17640:58:0;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;17640:58:0;;;;;;;;25:18:-1;;61:17;;-1:-1;;;;;182:15;-1:-1;;;179:29;160:49;;17614:85:0;;17633:5;;17614:18;:85::i;:::-;17532:174;;;:::o;1850:104::-;1908:7;1938:1;1934;:5;:13;;1946:1;1934:13;;;-1:-1:-1;1942:1:0;;1850:104;-1:-1:-1;1850:104:0:o;21605:226::-;21668:12;;:24;;21685:6;21668:24;:16;:24;:::i;:::-;21653:12;:39;21736:10;21726:21;;;;:9;:21;;;;;;:33;;21752:6;21726:33;:25;:33;:::i;:::-;21712:10;21702:21;;;;:9;:21;;;;;:57;;;;21769:3;;:55;;-1:-1:-1;;;;;21769:3:0;;;;21810:4;21817:6;21769:20;:55::i;10872:225::-;-1:-1:-1;;;;;10945:22:0;;10937:73;;;;-1:-1:-1;;;10937:73:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11046:6;;11025:38;;-1:-1:-1;;;;;11025:38:0;;;;11046:6;;11025:38;;11046:6;;11025:38;11073:6;:17;;-1:-1:-1;;;;;;11073:17:0;-1:-1:-1;;;;;11073:17:0;;;;;;;;;;10872:225::o;4022:187::-;4108:7;4143:12;4135:6;;;;4127:29;;;;-1:-1:-1;;;4127:29:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;4127:29:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4178:5:0;;;4022:187::o;6008:338::-;6094:7;6194:12;6187:5;6179:28;;;;-1:-1:-1;;;6179:28:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:10:-1;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;6179:28:0;;6217:9;6233:1;6229;:5;;;;;;;6008:338;-1:-1:-1;;;;;6008:338:0:o;19536:1095::-;20131:27;20139:5;-1:-1:-1;;;;;20131:25:0;;:27::i;:::-;20123:71;;;;;-1:-1:-1;;;20123:71:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;20265:12;20279:23;20314:5;-1:-1:-1;;;;;20306:19:0;20326:4;20306:25;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;20306:25:0;;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;20264:67:0;;;;20349:7;20341:52;;;;;-1:-1:-1;;;20341:52:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20408:17;;:21;20404:221;;20548:10;20537:30;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;20537:30:0;20529:85;;;;-1:-1:-1;;;20529:85:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19536:1095;;;;:::o;17712:202::-;17838:68;;;-1:-1:-1;;;;;17838:68:0;;;;;;;;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;17838:68:0;;;;;;;;25:18:-1;;61:17;;-1:-1;;;;;182:15;-1:-1;;;179:29;160:49;;17812:95:0;;17831:5;;17812:18;:95::i;14464:797::-;14524:4;15172:20;;15017:66;15211:15;;;;;:42;;;15242:11;15230:8;:23;;15211:42;15203:51;14464:797;-1:-1:-1;;;;14464:797:0:o", "language": "Solidity", "natspec": {"methods": {"isOwner()": {"details": "Returns true if the caller is the current owner."}, "owner()": {"details": "Returns the address of the current owner."}, "renounceOwnership()": {"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."}, "transferOwnership(address)": {"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}}}, "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x157 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8B876347 GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0xDF136D65 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xDF136D65 EQ PUSH2 0x305 JUMPI DUP1 PUSH4 0xE7D27998 EQ PUSH2 0x30D JUMPI DUP1 PUSH4 0xE9FAD8EE EQ PUSH2 0x315 JUMPI DUP1 PUSH4 0xEBE2B12B EQ PUSH2 0x31D JUMPI DUP1 PUSH4 0xEDC9AF95 EQ PUSH2 0x325 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x32D JUMPI PUSH2 0x157 JUMP JUMPDEST DUP1 PUSH4 0x8B876347 EQ PUSH2 0x272 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x298 JUMPI DUP1 PUSH4 0x8F32D59B EQ PUSH2 0x2BC JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x2D8 JUMPI DUP1 PUSH4 0xC8F33C91 EQ PUSH2 0x2F5 JUMPI DUP1 PUSH4 0xCD3DAF9D EQ PUSH2 0x2FD JUMPI PUSH2 0x157 JUMP JUMPDEST DUP1 PUSH4 0x3C6B16AB GT PUSH2 0x115 JUMPI DUP1 PUSH4 0x3C6B16AB EQ PUSH2 0x20F JUMPI DUP1 PUSH4 0x3D18B912 EQ PUSH2 0x22C JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x234 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x25A JUMPI DUP1 PUSH4 0x7B0A47EE EQ PUSH2 0x262 JUMPI DUP1 PUSH4 0x80FAA57D EQ PUSH2 0x26A JUMPI PUSH2 0x157 JUMP JUMPDEST DUP1 PUSH3 0x8CC262 EQ PUSH2 0x15C JUMPI DUP1 PUSH4 0x700037D EQ PUSH2 0x194 JUMPI DUP1 PUSH4 0xD68B761 EQ PUSH2 0x1BA JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1E2 JUMPI DUP1 PUSH4 0x1BE05289 EQ PUSH2 0x1EA JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x1F2 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x172 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x353 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3D9 JUMP JUMPDEST PUSH2 0x1E0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3EB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x182 PUSH2 0x466 JUMP JUMPDEST PUSH2 0x182 PUSH2 0x46D JUMP JUMPDEST PUSH2 0x1E0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x208 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x474 JUMP JUMPDEST PUSH2 0x1E0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x225 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x55B JUMP JUMPDEST PUSH2 0x1E0 PUSH2 0x6D5 JUMP JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x24A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x7A7 JUMP JUMPDEST PUSH2 0x1E0 PUSH2 0x7C2 JUMP JUMPDEST PUSH2 0x182 PUSH2 0x865 JUMP JUMPDEST PUSH2 0x182 PUSH2 0x86B JUMP JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x288 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x87E JUMP JUMPDEST PUSH2 0x2A0 PUSH2 0x890 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x2C4 PUSH2 0x89F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1E0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x8C5 JUMP JUMPDEST PUSH2 0x182 PUSH2 0x9A9 JUMP JUMPDEST PUSH2 0x182 PUSH2 0x9AF JUMP JUMPDEST PUSH2 0x182 PUSH2 0xA03 JUMP JUMPDEST PUSH2 0x2A0 PUSH2 0xA09 JUMP JUMPDEST PUSH2 0x1E0 PUSH2 0xA18 JUMP JUMPDEST PUSH2 0x182 PUSH2 0xA33 JUMP JUMPDEST PUSH2 0x2A0 PUSH2 0xA39 JUMP JUMPDEST PUSH2 0x1E0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x343 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xA48 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0xA SWAP1 SWAP3 MSTORE DUP3 KECCAK256 SLOAD PUSH2 0x3D3 SWAP2 SWAP1 PUSH2 0x3C7 SWAP1 PUSH8 0xDE0B6B3A7640000 SWAP1 PUSH2 0x3BB SWAP1 PUSH2 0x3A6 SWAP1 PUSH2 0x39A PUSH2 0x9AF JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xAAD AND JUMP JUMPDEST PUSH2 0x3AF DUP9 PUSH2 0x7A7 JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xAF6 AND JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xB4F AND JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xB91 AND JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x3F3 PUSH2 0x89F JUMP JUMPDEST PUSH2 0x444 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD JUMPDEST SWAP1 JUMP JUMPDEST PUSH3 0x93A80 DUP2 JUMP JUMPDEST CALLER PUSH2 0x47D PUSH2 0x9AF JUMP JUMPDEST PUSH1 0x9 SSTORE PUSH2 0x488 PUSH2 0x86B JUMP JUMPDEST PUSH1 0x8 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x4CF JUMPI PUSH2 0x4A3 DUP2 PUSH2 0x353 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x9 SLOAD PUSH1 0xA SWAP1 SWAP2 MSTORE SWAP2 SWAP1 KECCAK256 SSTORE JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x518 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x43616E6E6F74207769746864726177203 PUSH1 0x7C SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x521 DUP3 PUSH2 0xBEB JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE SWAP1 MLOAD CALLER SWAP2 PUSH32 0x7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5 SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x56F PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x5B4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1158 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x5BE PUSH2 0x9AF JUMP JUMPDEST PUSH1 0x9 SSTORE PUSH2 0x5C9 PUSH2 0x86B JUMP JUMPDEST PUSH1 0x8 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x610 JUMPI PUSH2 0x5E4 DUP2 PUSH2 0x353 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x9 SLOAD PUSH1 0xA SWAP1 SWAP2 MSTORE SWAP2 SWAP1 KECCAK256 SSTORE JUMPDEST PUSH1 0x6 SLOAD TIMESTAMP LT PUSH2 0x634 JUMPI PUSH2 0x62C DUP3 PUSH3 0x93A80 PUSH4 0xFFFFFFFF PUSH2 0xB4F AND JUMP JUMPDEST PUSH1 0x7 SSTORE PUSH2 0x682 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x64A SWAP1 TIMESTAMP PUSH4 0xFFFFFFFF PUSH2 0xAAD AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x663 PUSH1 0x7 SLOAD DUP4 PUSH2 0xAF6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x67C PUSH3 0x93A80 PUSH2 0x3BB DUP7 DUP5 PUSH4 0xFFFFFFFF PUSH2 0xB91 AND JUMP JUMPDEST PUSH1 0x7 SSTORE POP POP JUMPDEST TIMESTAMP PUSH1 0x8 DUP2 SWAP1 SSTORE PUSH2 0x69B SWAP1 PUSH3 0x93A80 PUSH4 0xFFFFFFFF PUSH2 0xB91 AND JUMP JUMPDEST PUSH1 0x6 SSTORE PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE SWAP1 MLOAD PUSH32 0xDE88A922E0D3B88B24E9623EFEB464919C6BF9F66857A65E2BFCF2CE87A9433D SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG1 POP POP JUMP JUMPDEST CALLER PUSH2 0x6DE PUSH2 0x9AF JUMP JUMPDEST PUSH1 0x9 SSTORE PUSH2 0x6E9 PUSH2 0x86B JUMP JUMPDEST PUSH1 0x8 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x730 JUMPI PUSH2 0x704 DUP2 PUSH2 0x353 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x9 SLOAD PUSH1 0xA SWAP1 SWAP2 MSTORE SWAP2 SWAP1 KECCAK256 SSTORE JUMPDEST PUSH1 0x0 PUSH2 0x73B CALLER PUSH2 0x353 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x7A3 JUMPI CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE PUSH1 0x5 SLOAD PUSH2 0x76C SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP4 PUSH2 0xC50 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD CALLER SWAP2 PUSH32 0xE2403640BA68FED3A2F88B7557551D1993F84B99BB10FF833F0CF8DB0C5E0486 SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG2 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x7CA PUSH2 0x89F JUMP JUMPDEST PUSH2 0x81B JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x879 TIMESTAMP PUSH1 0x6 SLOAD PUSH2 0xCA7 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8B6 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ SWAP1 POP SWAP1 JUMP JUMPDEST CALLER PUSH2 0x8CE PUSH2 0x9AF JUMP JUMPDEST PUSH1 0x9 SSTORE PUSH2 0x8D9 PUSH2 0x86B JUMP JUMPDEST PUSH1 0x8 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x920 JUMPI PUSH2 0x8F4 DUP2 PUSH2 0x353 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x9 SLOAD PUSH1 0xA SWAP1 SWAP2 MSTORE SWAP2 SWAP1 KECCAK256 SSTORE JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x966 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x43616E6E6F74207374616B65203 PUSH1 0x94 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x96F DUP3 PUSH2 0xCBD JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE SWAP1 MLOAD CALLER SWAP2 PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9B9 PUSH2 0x466 JUMP JUMPDEST PUSH2 0x9C6 JUMPI POP PUSH1 0x9 SLOAD PUSH2 0x46A JUMP JUMPDEST PUSH2 0x879 PUSH2 0x9F4 PUSH2 0x9D4 PUSH2 0x466 JUMP JUMPDEST PUSH2 0x3BB PUSH8 0xDE0B6B3A7640000 PUSH2 0x3AF PUSH1 0x7 SLOAD PUSH2 0x3AF PUSH1 0x8 SLOAD PUSH2 0x39A PUSH2 0x86B JUMP JUMPDEST PUSH1 0x9 SLOAD SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xB91 AND JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0xA29 PUSH2 0xA24 CALLER PUSH2 0x7A7 JUMP JUMPDEST PUSH2 0x474 JUMP JUMPDEST PUSH2 0xA31 PUSH2 0x6D5 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0xA50 PUSH2 0x89F JUMP JUMPDEST PUSH2 0xAA1 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0xAAA DUP2 PUSH2 0xD1F JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAEF DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0xDC0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xB05 JUMPI POP PUSH1 0x0 PUSH2 0x3D3 JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0xB12 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0xAEF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1137 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xAEF DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0xE57 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0xAEF JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH2 0xBFE SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0xAAD AND JUMP JUMPDEST PUSH1 0x1 SSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xC21 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0xAAD AND JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE SWAP1 SLOAD PUSH2 0xAAA SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP4 PUSH2 0xC50 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0xCA2 SWAP1 DUP5 SWAP1 PUSH2 0xEBC JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0xCB6 JUMPI DUP2 PUSH2 0xAEF JUMP JUMPDEST POP SWAP1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0xCD0 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0xB91 AND JUMP JUMPDEST PUSH1 0x1 SSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xCF3 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0xB91 AND JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE SWAP1 SLOAD PUSH2 0xAAA SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 ADDRESS DUP5 PUSH2 0x107A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xD64 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1111 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND SWAP3 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0xE4F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xE14 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xDFC JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xE41 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xEA6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP4 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP4 MLOAD SWAP1 SWAP3 DUP4 SWAP3 PUSH1 0x44 SWAP1 SWAP2 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0xE14 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xDFC JUMP JUMPDEST POP PUSH1 0x0 DUP4 DUP6 DUP2 PUSH2 0xEB2 JUMPI INVALID JUMPDEST DIV SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0xECE DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x10D4 JUMP JUMPDEST PUSH2 0xF1F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A2063616C6C20746F206E6F6E2D636F6E747261637400 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0xF5D JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0xF3E JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xFBF JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xFC4 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x101B JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x1074 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1037 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x1074 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1179 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP5 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x84 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x23B872DD PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x1074 SWAP1 DUP6 SWAP1 PUSH2 0xEBC JUMP JUMPDEST PUSH1 0x0 DUP2 EXTCODEHASH PUSH32 0xC5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470 DUP2 ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1108 JUMPI POP DUP1 DUP3 EQ ISZERO JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F2061646472657373536166654D6174683A206D756C746970 PUSH13 0x69636174696F6E206F76657266 PUSH13 0x6F7743616C6C6572206973206E PUSH16 0x74207265776172642064697374726962 PUSH22 0x74696F6E5361666545524332303A204552433230206F PUSH17 0x65726174696F6E20646964206E6F742073 PUSH22 0x6363656564A265627A7A723158205450458B159F0D21 0xC6 0xB8 0xD4 SHL ADDMOD SWAP12 SUB 0x5F LOG0 SELFBALANCE 0xCB DUP15 0xD5 PUSH21 0xAC1A7DB63927B69EEBB464736F6C63430005110032 ", "sha1": "8d888be65d3c782e3bff319ea5cb9b52d239bf94", "source": "/**\n *Submitted for verification at Etherscan.io on 2020-04-22\n*/\n\n/*\n   ____            __   __        __   _\n  / __/__ __ ___  / /_ / /  ___  / /_ (_)__ __\n _\\ \\ / // // _ \\/ __// _ \\/ -_)/ __// / \\ \\ /\n/___/ \\_, //_//_/\\__//_//_/\\__/ \\__//_/ /_\\_\\\n     /___/\n\n* Synthetix: CurveRewards.sol\n*\n* Docs: https://docs.synthetix.io/\n*\n*\n* MIT License\n* ===========\n*\n* Copyright (c) 2020 Synthetix\n*\n* Permission is hereby granted, free of charge, to any person obtaining a copy\n* of this software and associated documentation files (the \"Software\"), to deal\n* in the Software without restriction, including without limitation the rights\n* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the Software is\n* furnished to do so, subject to the following conditions:\n*\n* The above copyright notice and this permission notice shall be included in all\n* copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n* AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n* LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n* OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n*/\n\n// File: @openzeppelin/contracts/math/Math.sol\n\npragma solidity ^0.5.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a >= b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow, so we distribute\n        return (a / 2) + (b / 2) + ((a % 2 + b % 2) / 2);\n    }\n}\n\n// File: @openzeppelin/contracts/math/SafeMath.sol\n\n\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, \"SafeMath: addition overflow\");\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return sub(a, b, \"SafeMath: subtraction overflow\");\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     * - Subtraction cannot overflow.\n     *\n     * _Available since v2.4.0._\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b <= a, errorMessage);\n        uint256 c = a - b;\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n        // benefit is lost if 'b' is also tested.\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n        if (a == 0) {\n            return 0;\n        }\n\n        uint256 c = a * b;\n        require(c / a == b, \"SafeMath: multiplication overflow\");\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers. Reverts on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return div(a, b, \"SafeMath: division by zero\");\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     *\n     * _Available since v2.4.0._\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        // Solidity only automatically asserts when dividing by 0\n        require(b > 0, errorMessage);\n        uint256 c = a / b;\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * Reverts when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return mod(a, b, \"SafeMath: modulo by zero\");\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * Reverts with custom message when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     *\n     * _Available since v2.4.0._\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b != 0, errorMessage);\n        return a % b;\n    }\n}\n\n// File: @openzeppelin/contracts/GSN/Context.sol\n\n\n\n/*\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with GSN meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\ncontract Context {\n    // Empty internal constructor, to prevent people from mistakenly deploying\n    // an instance of this contract, which should be used via inheritance.\n    constructor () internal { }\n    // solhint-disable-previous-line no-empty-blocks\n\n    function _msgSender() internal view returns (address payable) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view returns (bytes memory) {\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\n        return msg.data;\n    }\n}\n\n// File: @openzeppelin/contracts/ownership/Ownable.sol\n\n\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\ncontract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor () internal {\n        _owner = _msgSender();\n        emit OwnershipTransferred(address(0), _owner);\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(isOwner(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Returns true if the caller is the current owner.\n     */\n    function isOwner() public view returns (bool) {\n        return _msgSender() == _owner;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public onlyOwner {\n        emit OwnershipTransferred(_owner, address(0));\n        _owner = address(0);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public onlyOwner {\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     */\n    function _transferOwnership(address newOwner) internal {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        emit OwnershipTransferred(_owner, newOwner);\n        _owner = newOwner;\n    }\n}\n\n// File: @openzeppelin/contracts/token/ERC20/IERC20.sol\n\n\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP. Does not include\n * the optional functions; to access them see {ERC20Detailed}.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n\n// File: @openzeppelin/contracts/utils/Address.sol\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address2 {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * This test is non-exhaustive, and there may be false-negatives: during the\n     * execution of a contract's constructor, its address will be reported as\n     * not containing a contract.\n     *\n     * IMPORTANT: It is unsafe to assume that an address for which this\n     * function returns false is an externally-owned account (EOA) and not a\n     * contract.\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies in extcodesize, which returns 0 for contracts in\n        // construction, since the code is only stored at the end of the\n        // constructor execution.\n\n        // According to EIP-1052, 0x0 is the value returned for not-yet created accounts\n        // and 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 is returned\n        // for accounts without code, i.e. `keccak256('')`\n        bytes32 codehash;\n        bytes32 accountHash = 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470;\n        // solhint-disable-next-line no-inline-assembly\n        assembly { codehash := extcodehash(account) }\n        return (codehash != 0x0 && codehash != accountHash);\n    }\n\n    /**\n     * @dev Converts an `address` into `address payable`. Note that this is\n     * simply a type cast: the actual underlying value is not changed.\n     *\n     * _Available since v2.4.0._\n     */\n    function toPayable(address account) internal pure returns (address payable) {\n        return address(uint160(account));\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     *\n     * _Available since v2.4.0._\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        // solhint-disable-next-line avoid-call-value\n        (bool success, ) = recipient.call.value(amount)(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n}\n\n// File: @openzeppelin/contracts/token/ERC20/SafeERC20.sol\n\n\n\n\n\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for ERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using SafeMath for uint256;\n    using Address2 for address;\n\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        // solhint-disable-next-line max-line-length\n        require((value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 newAllowance = token.allowance(address(this), spender).add(value);\n        callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 newAllowance = token.allowance(address(this), spender).sub(value, \"SafeERC20: decreased allowance below zero\");\n        callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves.\n\n        // A Solidity high level call has three parts:\n        //  1. The target address is checked to verify it contains contract code\n        //  2. The call itself is made, and success asserted\n        //  3. The return value is decoded, which in turn checks the size of the returned data.\n        // solhint-disable-next-line max-line-length\n        require(address(token).isContract(), \"SafeERC20: call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = address(token).call(data);\n        require(success, \"SafeERC20: low-level call failed\");\n\n        if (returndata.length > 0) { // Return data is optional\n            // solhint-disable-next-line max-line-length\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n        }\n    }\n}\n\n// File: contracts/IRewardDistributionRecipient.sol\n\n\n\n\n\ncontract IRewardDistributionRecipient is Ownable {\n    address rewardDistribution;\n\n    function notifyRewardAmount(uint256 reward) external;\n\n    modifier onlyRewardDistribution() {\n        require(_msgSender() == rewardDistribution, \"Caller is not reward distribution\");\n        _;\n    }\n\n    function setRewardDistribution(address _rewardDistribution)\n        external\n        onlyOwner\n    {\n        rewardDistribution = _rewardDistribution;\n    }\n}\n\n// File: contracts/CurveRewards.sol\n\n\n\n\n\n\n\n\ncontract LPTokenWrapper {\n    using SafeMath for uint256;\n    using SafeERC20 for IERC20;\n\n    IERC20 public uni;\n\n    uint256 private _totalSupply;\n    mapping(address => uint256) private _balances;\n\n    function totalSupply() public view returns (uint256) {\n        return _totalSupply;\n    }\n\n    function balanceOf(address account) public view returns (uint256) {\n        return _balances[account];\n    }\n\n    function stake(uint256 amount) public {\n        _totalSupply = _totalSupply.add(amount);\n        _balances[msg.sender] = _balances[msg.sender].add(amount);\n        uni.safeTransferFrom(msg.sender, address(this), amount);\n    }\n\n    function withdraw(uint256 amount) public {\n        _totalSupply = _totalSupply.sub(amount);\n        _balances[msg.sender] = _balances[msg.sender].sub(amount);\n        uni.safeTransfer(msg.sender, amount);\n    }\n}\n\ncontract CurveRewards is LPTokenWrapper, IRewardDistributionRecipient {\n    IERC20 public snx;\n    uint256 public constant DURATION = 7 days;\n\n    uint256 public periodFinish = 0;\n    uint256 public rewardRate = 0;\n    uint256 public lastUpdateTime;\n    uint256 public rewardPerTokenStored;\n    mapping(address => uint256) public userRewardPerTokenPaid;\n    mapping(address => uint256) public rewards;\n\n    event RewardAdded(uint256 reward);\n    event Staked(address indexed user, uint256 amount);\n    event Withdrawn(address indexed user, uint256 amount);\n    event RewardPaid(address indexed user, uint256 reward);\n\n    modifier updateReward(address account) {\n        rewardPerTokenStored = rewardPerToken();\n        lastUpdateTime = lastTimeRewardApplicable();\n        if (account != address(0)) {\n            rewards[account] = earned(account);\n            userRewardPerTokenPaid[account] = rewardPerTokenStored;\n        }\n        _;\n    }\n\n    constructor(address _token, address _reward) public {\n        uni = IERC20(_token);\n        snx = IERC20(_reward);\n    }\n\n    function lastTimeRewardApplicable() public view returns (uint256) {\n        return Math.min(block.timestamp, periodFinish);\n    }\n\n    function rewardPerToken() public view returns (uint256) {\n        if (totalSupply() == 0) {\n            return rewardPerTokenStored;\n        }\n        return\n            rewardPerTokenStored.add(\n                lastTimeRewardApplicable()\n                    .sub(lastUpdateTime)\n                    .mul(rewardRate)\n                    .mul(1e18)\n                    .div(totalSupply())\n            );\n    }\n\n    function earned(address account) public view returns (uint256) {\n        return\n            balanceOf(account)\n                .mul(rewardPerToken().sub(userRewardPerTokenPaid[account]))\n                .div(1e18)\n                .add(rewards[account]);\n    }\n\n    // stake visibility is public as overriding LPTokenWrapper's stake() function\n    function stake(uint256 amount) public updateReward(msg.sender) {\n        require(amount > 0, \"Cannot stake 0\");\n        super.stake(amount);\n        emit Staked(msg.sender, amount);\n    }\n\n    function withdraw(uint256 amount) public updateReward(msg.sender) {\n        require(amount > 0, \"Cannot withdraw 0\");\n        super.withdraw(amount);\n        emit Withdrawn(msg.sender, amount);\n    }\n\n    function exit() external {\n        withdraw(balanceOf(msg.sender));\n        getReward();\n    }\n\n    function getReward() public updateReward(msg.sender) {\n        uint256 reward = earned(msg.sender);\n        if (reward > 0) {\n            rewards[msg.sender] = 0;\n            snx.safeTransfer(msg.sender, reward);\n            emit RewardPaid(msg.sender, reward);\n        }\n    }\n\n    function notifyRewardAmount(uint256 reward)\n        external\n        onlyRewardDistribution\n        updateReward(address(0))\n    {\n        if (block.timestamp >= periodFinish) {\n            rewardRate = reward.div(DURATION);\n        } else {\n            uint256 remaining = periodFinish.sub(block.timestamp);\n            uint256 leftover = remaining.mul(rewardRate);\n            rewardRate = reward.add(leftover).div(DURATION);\n        }\n        lastUpdateTime = block.timestamp;\n        periodFinish = block.timestamp.add(DURATION);\n        emit RewardAdded(reward);\n    }\n}\n", "sourceMap": "22051:3328:0:-;;;22228:1;22198:31;;22263:1;22235:29;;23001:120;8:9:-1;5:2;;;30:1;27;20:12;5:2;23001:120:0;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;23001:120:0;;;;;;;9443:12;-1:-1:-1;;;;;9443:10:0;:12;:::i;:::-;9434:6;:21;;-1:-1:-1;;;;;;9434:21:0;-1:-1:-1;;;;;9434:21:0;;;;;;;;9470:40;;9503:6;;;-1:-1:-1;;9470:40:0;;-1:-1:-1;;9470:40:0;23063:3;:20;;-1:-1:-1;;;;;23063:20:0;;;-1:-1:-1;;;;;;23063:20:0;;;;;;;23093:3;:21;;;;;;;;;;;22051:3328;;8404:96;8483:10;8404:96;:::o;22051:3328::-;;;;;;;", "sourcePath": "contracts/testing/CurveRewards.sol", "deployment": {"address": "0xc2Bc8A216bCEBe94473A293ce86F45174FFF4860", "chainid": "4", "blockHeight": 9212727}}